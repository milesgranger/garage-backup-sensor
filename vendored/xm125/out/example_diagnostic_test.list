
out/example_diagnostic_test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000190  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007818  08000190  08000190  00010190  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003b48  080079a8  080079a8  000179a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800b4f0  0800b4f0  00020090  2**0
                  CONTENTS
  4 .ARM          00000008  0800b4f0  0800b4f0  0001b4f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800b4f8  0800b4f8  00020090  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  0800b4f8  0800b4f8  0001b4f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000008  0800b500  0800b500  0001b500  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000090  20000000  0800b508  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000003d4  20000090  0800b598  00020090  2**2
                  ALLOC
 10 ._user_heap_stack 00001604  20000464  0800b598  00020464  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020090  2**0
                  CONTENTS, READONLY
 12 .comment      0000004c  00000000  00000000  000200c0  2**0
                  CONTENTS, READONLY
 13 .debug_info   00004066  00000000  00000000  0002010c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000b9f  00000000  00000000  00024172  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_loc    0000250f  00000000  00000000  00024d11  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000158  00000000  00000000  00027220  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_ranges 000002d8  00000000  00000000  00027378  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001699  00000000  00000000  00027650  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00001008  00000000  00000000  00028ce9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000a4c  00000000  00000000  00029cf4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000090 	.word	0x20000090
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0800798c 	.word	0x0800798c

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000094 	.word	0x20000094
 80001cc:	0800798c 	.word	0x0800798c

080001d0 <HAL_NVIC_SetPriority.constprop.0>:
 80001d0:	4b14      	ldr	r3, [pc, #80]	; (8000224 <HAL_NVIC_SetPriority.constprop.0+0x54>)
 80001d2:	68db      	ldr	r3, [r3, #12]
 80001d4:	f3c3 2302 	ubfx	r3, r3, #8, #3
 80001d8:	b410      	push	{r4}
 80001da:	f1c3 0407 	rsb	r4, r3, #7
 80001de:	1d1a      	adds	r2, r3, #4
 80001e0:	2c04      	cmp	r4, #4
 80001e2:	bf28      	it	cs
 80001e4:	2404      	movcs	r4, #4
 80001e6:	2a06      	cmp	r2, #6
 80001e8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80001ec:	fa02 f204 	lsl.w	r2, r2, r4
 80001f0:	bf8c      	ite	hi
 80001f2:	3b03      	subhi	r3, #3
 80001f4:	2300      	movls	r3, #0
 80001f6:	ea21 0102 	bic.w	r1, r1, r2
 80001fa:	4099      	lsls	r1, r3
 80001fc:	1c43      	adds	r3, r0, #1
 80001fe:	d00a      	beq.n	8000216 <HAL_NVIC_SetPriority.constprop.0+0x46>
 8000200:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8000204:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8000208:	0109      	lsls	r1, r1, #4
 800020a:	b2c9      	uxtb	r1, r1
 800020c:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
 8000210:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000214:	4770      	bx	lr
 8000216:	4b03      	ldr	r3, [pc, #12]	; (8000224 <HAL_NVIC_SetPriority.constprop.0+0x54>)
 8000218:	0109      	lsls	r1, r1, #4
 800021a:	b2c9      	uxtb	r1, r1
 800021c:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8000220:	e7f6      	b.n	8000210 <HAL_NVIC_SetPriority.constprop.0+0x40>
 8000222:	bf00      	nop
 8000224:	e000ed00 	.word	0xe000ed00

08000228 <UART_WaitOnFlagUntilTimeout.constprop.0>:
 8000228:	b4f0      	push	{r4, r5, r6, r7}
 800022a:	6805      	ldr	r5, [r0, #0]
 800022c:	4f29      	ldr	r7, [pc, #164]	; (80002d4 <UART_WaitOnFlagUntilTimeout.constprop.0+0xac>)
 800022e:	4606      	mov	r6, r0
 8000230:	e001      	b.n	8000236 <UART_WaitOnFlagUntilTimeout.constprop.0+0xe>
 8000232:	1c58      	adds	r0, r3, #1
 8000234:	d106      	bne.n	8000244 <UART_WaitOnFlagUntilTimeout.constprop.0+0x1c>
 8000236:	69ec      	ldr	r4, [r5, #28]
 8000238:	ea31 0004 	bics.w	r0, r1, r4
 800023c:	d1f9      	bne.n	8000232 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 800023e:	2000      	movs	r0, #0
 8000240:	bcf0      	pop	{r4, r5, r6, r7}
 8000242:	4770      	bx	lr
 8000244:	6838      	ldr	r0, [r7, #0]
 8000246:	1a80      	subs	r0, r0, r2
 8000248:	4283      	cmp	r3, r0
 800024a:	d327      	bcc.n	800029c <UART_WaitOnFlagUntilTimeout.constprop.0+0x74>
 800024c:	b333      	cbz	r3, 800029c <UART_WaitOnFlagUntilTimeout.constprop.0+0x74>
 800024e:	6828      	ldr	r0, [r5, #0]
 8000250:	0744      	lsls	r4, r0, #29
 8000252:	d5f0      	bpl.n	8000236 <UART_WaitOnFlagUntilTimeout.constprop.0+0xe>
 8000254:	69e8      	ldr	r0, [r5, #28]
 8000256:	0500      	lsls	r0, r0, #20
 8000258:	d5ed      	bpl.n	8000236 <UART_WaitOnFlagUntilTimeout.constprop.0+0xe>
 800025a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800025e:	622b      	str	r3, [r5, #32]
 8000260:	e855 3f00 	ldrex	r3, [r5]
 8000264:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8000268:	e845 3200 	strex	r2, r3, [r5]
 800026c:	2a00      	cmp	r2, #0
 800026e:	d1f7      	bne.n	8000260 <UART_WaitOnFlagUntilTimeout.constprop.0+0x38>
 8000270:	6832      	ldr	r2, [r6, #0]
 8000272:	f102 0308 	add.w	r3, r2, #8
 8000276:	e853 3f00 	ldrex	r3, [r3]
 800027a:	f023 0301 	bic.w	r3, r3, #1
 800027e:	f102 0008 	add.w	r0, r2, #8
 8000282:	e840 3100 	strex	r1, r3, [r0]
 8000286:	2900      	cmp	r1, #0
 8000288:	d1f3      	bne.n	8000272 <UART_WaitOnFlagUntilTimeout.constprop.0+0x4a>
 800028a:	2320      	movs	r3, #32
 800028c:	67b3      	str	r3, [r6, #120]	; 0x78
 800028e:	f886 1074 	strb.w	r1, [r6, #116]	; 0x74
 8000292:	67f3      	str	r3, [r6, #124]	; 0x7c
 8000294:	2003      	movs	r0, #3
 8000296:	f8c6 3080 	str.w	r3, [r6, #128]	; 0x80
 800029a:	e7d1      	b.n	8000240 <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
 800029c:	e855 3f00 	ldrex	r3, [r5]
 80002a0:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 80002a4:	e845 3200 	strex	r2, r3, [r5]
 80002a8:	2a00      	cmp	r2, #0
 80002aa:	d1f7      	bne.n	800029c <UART_WaitOnFlagUntilTimeout.constprop.0+0x74>
 80002ac:	6832      	ldr	r2, [r6, #0]
 80002ae:	f102 0308 	add.w	r3, r2, #8
 80002b2:	e853 3f00 	ldrex	r3, [r3]
 80002b6:	f023 0301 	bic.w	r3, r3, #1
 80002ba:	f102 0008 	add.w	r0, r2, #8
 80002be:	e840 3100 	strex	r1, r3, [r0]
 80002c2:	2900      	cmp	r1, #0
 80002c4:	d1f3      	bne.n	80002ae <UART_WaitOnFlagUntilTimeout.constprop.0+0x86>
 80002c6:	2320      	movs	r3, #32
 80002c8:	67b3      	str	r3, [r6, #120]	; 0x78
 80002ca:	f886 1074 	strb.w	r1, [r6, #116]	; 0x74
 80002ce:	2003      	movs	r0, #3
 80002d0:	67f3      	str	r3, [r6, #124]	; 0x7c
 80002d2:	e7b5      	b.n	8000240 <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
 80002d4:	200000ac 	.word	0x200000ac

080002d8 <HAL_DMA_Init.constprop.0>:
 80002d8:	4603      	mov	r3, r0
 80002da:	4a21      	ldr	r2, [pc, #132]	; (8000360 <HAL_DMA_Init.constprop.0+0x88>)
 80002dc:	6800      	ldr	r0, [r0, #0]
 80002de:	4290      	cmp	r0, r2
 80002e0:	bf95      	itete	ls
 80002e2:	4a20      	ldrls	r2, [pc, #128]	; (8000364 <HAL_DMA_Init.constprop.0+0x8c>)
 80002e4:	4a20      	ldrhi	r2, [pc, #128]	; (8000368 <HAL_DMA_Init.constprop.0+0x90>)
 80002e6:	4921      	ldrls	r1, [pc, #132]	; (800036c <HAL_DMA_Init.constprop.0+0x94>)
 80002e8:	4921      	ldrhi	r1, [pc, #132]	; (8000370 <HAL_DMA_Init.constprop.0+0x98>)
 80002ea:	b430      	push	{r4, r5}
 80002ec:	4402      	add	r2, r0
 80002ee:	6419      	str	r1, [r3, #64]	; 0x40
 80002f0:	2114      	movs	r1, #20
 80002f2:	fbb2 f2f1 	udiv	r2, r2, r1
 80002f6:	0092      	lsls	r2, r2, #2
 80002f8:	645a      	str	r2, [r3, #68]	; 0x44
 80002fa:	2202      	movs	r2, #2
 80002fc:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8000300:	6801      	ldr	r1, [r0, #0]
 8000302:	689d      	ldr	r5, [r3, #8]
 8000304:	e9d3 2405 	ldrd	r2, r4, [r3, #20]
 8000308:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 800030c:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8000310:	432a      	orrs	r2, r5
 8000312:	430a      	orrs	r2, r1
 8000314:	4322      	orrs	r2, r4
 8000316:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800031a:	f5b5 4f80 	cmp.w	r5, #16384	; 0x4000
 800031e:	6002      	str	r2, [r0, #0]
 8000320:	d014      	beq.n	800034c <HAL_DMA_Init.constprop.0+0x74>
 8000322:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8000324:	4a11      	ldr	r2, [pc, #68]	; (800036c <HAL_DMA_Init.constprop.0+0x94>)
 8000326:	4291      	cmp	r1, r2
 8000328:	bf08      	it	eq
 800032a:	4912      	ldreq	r1, [pc, #72]	; (8000374 <HAL_DMA_Init.constprop.0+0x9c>)
 800032c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800032e:	bf18      	it	ne
 8000330:	4911      	ldrne	r1, [pc, #68]	; (8000378 <HAL_DMA_Init.constprop.0+0xa0>)
 8000332:	f002 001c 	and.w	r0, r2, #28
 8000336:	240f      	movs	r4, #15
 8000338:	680a      	ldr	r2, [r1, #0]
 800033a:	4084      	lsls	r4, r0
 800033c:	ea22 0204 	bic.w	r2, r2, r4
 8000340:	600a      	str	r2, [r1, #0]
 8000342:	685a      	ldr	r2, [r3, #4]
 8000344:	680c      	ldr	r4, [r1, #0]
 8000346:	4082      	lsls	r2, r0
 8000348:	4322      	orrs	r2, r4
 800034a:	600a      	str	r2, [r1, #0]
 800034c:	2000      	movs	r0, #0
 800034e:	2201      	movs	r2, #1
 8000350:	63d8      	str	r0, [r3, #60]	; 0x3c
 8000352:	f883 0024 	strb.w	r0, [r3, #36]	; 0x24
 8000356:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 800035a:	bc30      	pop	{r4, r5}
 800035c:	4770      	bx	lr
 800035e:	bf00      	nop
 8000360:	40020407 	.word	0x40020407
 8000364:	bffdfff8 	.word	0xbffdfff8
 8000368:	bffdfbf8 	.word	0xbffdfbf8
 800036c:	40020000 	.word	0x40020000
 8000370:	40020400 	.word	0x40020400
 8000374:	400200a8 	.word	0x400200a8
 8000378:	400204a8 	.word	0x400204a8

0800037c <HAL_RTC_SetAlarm_IT.constprop.0>:
 800037c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000380:	4c65      	ldr	r4, [pc, #404]	; (8000518 <HAL_RTC_SetAlarm_IT.constprop.0+0x19c>)
 8000382:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 8000386:	2b01      	cmp	r3, #1
 8000388:	f000 80c2 	beq.w	8000510 <HAL_RTC_SetAlarm_IT.constprop.0+0x194>
 800038c:	6861      	ldr	r1, [r4, #4]
 800038e:	2201      	movs	r2, #1
 8000390:	2302      	movs	r3, #2
 8000392:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 8000396:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 800039a:	688e      	ldr	r6, [r1, #8]
 800039c:	7802      	ldrb	r2, [r0, #0]
 800039e:	6a05      	ldr	r5, [r0, #32]
 80003a0:	f016 0640 	ands.w	r6, r6, #64	; 0x40
 80003a4:	bf16      	itet	ne
 80003a6:	78c6      	ldrbne	r6, [r0, #3]
 80003a8:	70c6      	strbeq	r6, [r0, #3]
 80003aa:	05b6      	lslne	r6, r6, #22
 80003ac:	2a09      	cmp	r2, #9
 80003ae:	d909      	bls.n	80003c4 <HAL_RTC_SetAlarm_IT.constprop.0+0x48>
 80003b0:	2300      	movs	r3, #0
 80003b2:	3a0a      	subs	r2, #10
 80003b4:	b2d2      	uxtb	r2, r2
 80003b6:	2a09      	cmp	r2, #9
 80003b8:	f103 0301 	add.w	r3, r3, #1
 80003bc:	d8f9      	bhi.n	80003b2 <HAL_RTC_SetAlarm_IT.constprop.0+0x36>
 80003be:	ea42 1203 	orr.w	r2, r2, r3, lsl #4
 80003c2:	b2d2      	uxtb	r2, r2
 80003c4:	7843      	ldrb	r3, [r0, #1]
 80003c6:	2b09      	cmp	r3, #9
 80003c8:	ea4f 4202 	mov.w	r2, r2, lsl #16
 80003cc:	d909      	bls.n	80003e2 <HAL_RTC_SetAlarm_IT.constprop.0+0x66>
 80003ce:	2700      	movs	r7, #0
 80003d0:	3b0a      	subs	r3, #10
 80003d2:	b2db      	uxtb	r3, r3
 80003d4:	2b09      	cmp	r3, #9
 80003d6:	f107 0701 	add.w	r7, r7, #1
 80003da:	d8f9      	bhi.n	80003d0 <HAL_RTC_SetAlarm_IT.constprop.0+0x54>
 80003dc:	ea43 1307 	orr.w	r3, r3, r7, lsl #4
 80003e0:	b2db      	uxtb	r3, r3
 80003e2:	f890 e002 	ldrb.w	lr, [r0, #2]
 80003e6:	f1be 0f09 	cmp.w	lr, #9
 80003ea:	ea4f 2803 	mov.w	r8, r3, lsl #8
 80003ee:	d90d      	bls.n	800040c <HAL_RTC_SetAlarm_IT.constprop.0+0x90>
 80003f0:	2700      	movs	r7, #0
 80003f2:	f1ae 0e0a 	sub.w	lr, lr, #10
 80003f6:	fa5f fe8e 	uxtb.w	lr, lr
 80003fa:	f1be 0f09 	cmp.w	lr, #9
 80003fe:	f107 0701 	add.w	r7, r7, #1
 8000402:	d8f6      	bhi.n	80003f2 <HAL_RTC_SetAlarm_IT.constprop.0+0x76>
 8000404:	ea4e 1e07 	orr.w	lr, lr, r7, lsl #4
 8000408:	fa5f fe8e 	uxtb.w	lr, lr
 800040c:	f890 c024 	ldrb.w	ip, [r0, #36]	; 0x24
 8000410:	f1bc 0f09 	cmp.w	ip, #9
 8000414:	d90d      	bls.n	8000432 <HAL_RTC_SetAlarm_IT.constprop.0+0xb6>
 8000416:	2700      	movs	r7, #0
 8000418:	f1ac 0c0a 	sub.w	ip, ip, #10
 800041c:	fa5f fc8c 	uxtb.w	ip, ip
 8000420:	f1bc 0f09 	cmp.w	ip, #9
 8000424:	f107 0701 	add.w	r7, r7, #1
 8000428:	d8f6      	bhi.n	8000418 <HAL_RTC_SetAlarm_IT.constprop.0+0x9c>
 800042a:	ea4c 1c07 	orr.w	ip, ip, r7, lsl #4
 800042e:	fa5f fc8c 	uxtb.w	ip, ip
 8000432:	6943      	ldr	r3, [r0, #20]
 8000434:	6847      	ldr	r7, [r0, #4]
 8000436:	431d      	orrs	r5, r3
 8000438:	432e      	orrs	r6, r5
 800043a:	4332      	orrs	r2, r6
 800043c:	ea48 0302 	orr.w	r3, r8, r2
 8000440:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8000442:	69c6      	ldr	r6, [r0, #28]
 8000444:	25ca      	movs	r5, #202	; 0xca
 8000446:	2053      	movs	r0, #83	; 0x53
 8000448:	624d      	str	r5, [r1, #36]	; 0x24
 800044a:	ea43 0e0e 	orr.w	lr, r3, lr
 800044e:	6248      	str	r0, [r1, #36]	; 0x24
 8000450:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 8000454:	ea4e 630c 	orr.w	r3, lr, ip, lsl #24
 8000458:	688a      	ldr	r2, [r1, #8]
 800045a:	ea46 0607 	orr.w	r6, r6, r7
 800045e:	d039      	beq.n	80004d4 <HAL_RTC_SetAlarm_IT.constprop.0+0x158>
 8000460:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8000464:	608a      	str	r2, [r1, #8]
 8000466:	68ca      	ldr	r2, [r1, #12]
 8000468:	b2d2      	uxtb	r2, r2
 800046a:	f462 7220 	orn	r2, r2, #640	; 0x280
 800046e:	60ca      	str	r2, [r1, #12]
 8000470:	6825      	ldr	r5, [r4, #0]
 8000472:	e004      	b.n	800047e <HAL_RTC_SetAlarm_IT.constprop.0+0x102>
 8000474:	6820      	ldr	r0, [r4, #0]
 8000476:	1b40      	subs	r0, r0, r5
 8000478:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800047c:	d820      	bhi.n	80004c0 <HAL_RTC_SetAlarm_IT.constprop.0+0x144>
 800047e:	68ca      	ldr	r2, [r1, #12]
 8000480:	f012 0202 	ands.w	r2, r2, #2
 8000484:	d0f6      	beq.n	8000474 <HAL_RTC_SetAlarm_IT.constprop.0+0xf8>
 8000486:	620b      	str	r3, [r1, #32]
 8000488:	648e      	str	r6, [r1, #72]	; 0x48
 800048a:	688b      	ldr	r3, [r1, #8]
 800048c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000490:	608b      	str	r3, [r1, #8]
 8000492:	688b      	ldr	r3, [r1, #8]
 8000494:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000498:	608b      	str	r3, [r1, #8]
 800049a:	4b20      	ldr	r3, [pc, #128]	; (800051c <HAL_RTC_SetAlarm_IT.constprop.0+0x1a0>)
 800049c:	681a      	ldr	r2, [r3, #0]
 800049e:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 80004a2:	601a      	str	r2, [r3, #0]
 80004a4:	689a      	ldr	r2, [r3, #8]
 80004a6:	26ff      	movs	r6, #255	; 0xff
 80004a8:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 80004ac:	2501      	movs	r5, #1
 80004ae:	2000      	movs	r0, #0
 80004b0:	609a      	str	r2, [r3, #8]
 80004b2:	624e      	str	r6, [r1, #36]	; 0x24
 80004b4:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
 80004b8:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 80004bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80004c0:	2303      	movs	r3, #3
 80004c2:	20ff      	movs	r0, #255	; 0xff
 80004c4:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 80004c8:	6248      	str	r0, [r1, #36]	; 0x24
 80004ca:	4618      	mov	r0, r3
 80004cc:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 80004d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80004d4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80004d8:	608a      	str	r2, [r1, #8]
 80004da:	68ca      	ldr	r2, [r1, #12]
 80004dc:	b2d2      	uxtb	r2, r2
 80004de:	f462 72c0 	orn	r2, r2, #384	; 0x180
 80004e2:	60ca      	str	r2, [r1, #12]
 80004e4:	6825      	ldr	r5, [r4, #0]
 80004e6:	e004      	b.n	80004f2 <HAL_RTC_SetAlarm_IT.constprop.0+0x176>
 80004e8:	6820      	ldr	r0, [r4, #0]
 80004ea:	1b40      	subs	r0, r0, r5
 80004ec:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80004f0:	d8e6      	bhi.n	80004c0 <HAL_RTC_SetAlarm_IT.constprop.0+0x144>
 80004f2:	68ca      	ldr	r2, [r1, #12]
 80004f4:	f012 0201 	ands.w	r2, r2, #1
 80004f8:	d0f6      	beq.n	80004e8 <HAL_RTC_SetAlarm_IT.constprop.0+0x16c>
 80004fa:	61cb      	str	r3, [r1, #28]
 80004fc:	644e      	str	r6, [r1, #68]	; 0x44
 80004fe:	688b      	ldr	r3, [r1, #8]
 8000500:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000504:	608b      	str	r3, [r1, #8]
 8000506:	688b      	ldr	r3, [r1, #8]
 8000508:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800050c:	608b      	str	r3, [r1, #8]
 800050e:	e7c4      	b.n	800049a <HAL_RTC_SetAlarm_IT.constprop.0+0x11e>
 8000510:	2002      	movs	r0, #2
 8000512:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000516:	bf00      	nop
 8000518:	200000ac 	.word	0x200000ac
 800051c:	40010400 	.word	0x40010400

08000520 <HAL_RTC_WaitForSynchro.constprop.0>:
 8000520:	4909      	ldr	r1, [pc, #36]	; (8000548 <HAL_RTC_WaitForSynchro.constprop.0+0x28>)
 8000522:	684a      	ldr	r2, [r1, #4]
 8000524:	68d3      	ldr	r3, [r2, #12]
 8000526:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800052a:	60d3      	str	r3, [r2, #12]
 800052c:	6808      	ldr	r0, [r1, #0]
 800052e:	e004      	b.n	800053a <HAL_RTC_WaitForSynchro.constprop.0+0x1a>
 8000530:	680b      	ldr	r3, [r1, #0]
 8000532:	1a1b      	subs	r3, r3, r0
 8000534:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8000538:	d804      	bhi.n	8000544 <HAL_RTC_WaitForSynchro.constprop.0+0x24>
 800053a:	68d3      	ldr	r3, [r2, #12]
 800053c:	069b      	lsls	r3, r3, #26
 800053e:	d5f7      	bpl.n	8000530 <HAL_RTC_WaitForSynchro.constprop.0+0x10>
 8000540:	2000      	movs	r0, #0
 8000542:	4770      	bx	lr
 8000544:	2003      	movs	r0, #3
 8000546:	4770      	bx	lr
 8000548:	200000ac 	.word	0x200000ac

0800054c <RTC_ExitInitMode.constprop.0>:
 800054c:	b508      	push	{r3, lr}
 800054e:	4b11      	ldr	r3, [pc, #68]	; (8000594 <RTC_ExitInitMode.constprop.0+0x48>)
 8000550:	68da      	ldr	r2, [r3, #12]
 8000552:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8000556:	60da      	str	r2, [r3, #12]
 8000558:	689a      	ldr	r2, [r3, #8]
 800055a:	0692      	lsls	r2, r2, #26
 800055c:	d403      	bmi.n	8000566 <RTC_ExitInitMode.constprop.0+0x1a>
 800055e:	f7ff ffdf 	bl	8000520 <HAL_RTC_WaitForSynchro.constprop.0>
 8000562:	b988      	cbnz	r0, 8000588 <RTC_ExitInitMode.constprop.0+0x3c>
 8000564:	bd08      	pop	{r3, pc}
 8000566:	689a      	ldr	r2, [r3, #8]
 8000568:	f022 0220 	bic.w	r2, r2, #32
 800056c:	609a      	str	r2, [r3, #8]
 800056e:	f7ff ffd7 	bl	8000520 <HAL_RTC_WaitForSynchro.constprop.0>
 8000572:	b118      	cbz	r0, 800057c <RTC_ExitInitMode.constprop.0+0x30>
 8000574:	4b08      	ldr	r3, [pc, #32]	; (8000598 <RTC_ExitInitMode.constprop.0+0x4c>)
 8000576:	2003      	movs	r0, #3
 8000578:	f883 0025 	strb.w	r0, [r3, #37]	; 0x25
 800057c:	4a05      	ldr	r2, [pc, #20]	; (8000594 <RTC_ExitInitMode.constprop.0+0x48>)
 800057e:	6893      	ldr	r3, [r2, #8]
 8000580:	f043 0320 	orr.w	r3, r3, #32
 8000584:	6093      	str	r3, [r2, #8]
 8000586:	bd08      	pop	{r3, pc}
 8000588:	4b03      	ldr	r3, [pc, #12]	; (8000598 <RTC_ExitInitMode.constprop.0+0x4c>)
 800058a:	2003      	movs	r0, #3
 800058c:	f883 0025 	strb.w	r0, [r3, #37]	; 0x25
 8000590:	bd08      	pop	{r3, pc}
 8000592:	bf00      	nop
 8000594:	40002800 	.word	0x40002800
 8000598:	200000ac 	.word	0x200000ac

0800059c <RTC_EnterInitMode.constprop.0>:
 800059c:	490e      	ldr	r1, [pc, #56]	; (80005d8 <RTC_EnterInitMode.constprop.0+0x3c>)
 800059e:	684a      	ldr	r2, [r1, #4]
 80005a0:	68d0      	ldr	r0, [r2, #12]
 80005a2:	f010 0040 	ands.w	r0, r0, #64	; 0x40
 80005a6:	d001      	beq.n	80005ac <RTC_EnterInitMode.constprop.0+0x10>
 80005a8:	2000      	movs	r0, #0
 80005aa:	4770      	bx	lr
 80005ac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80005b0:	b430      	push	{r4, r5}
 80005b2:	60d3      	str	r3, [r2, #12]
 80005b4:	680c      	ldr	r4, [r1, #0]
 80005b6:	2503      	movs	r5, #3
 80005b8:	e009      	b.n	80005ce <RTC_EnterInitMode.constprop.0+0x32>
 80005ba:	2803      	cmp	r0, #3
 80005bc:	d00a      	beq.n	80005d4 <RTC_EnterInitMode.constprop.0+0x38>
 80005be:	680b      	ldr	r3, [r1, #0]
 80005c0:	1b1b      	subs	r3, r3, r4
 80005c2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80005c6:	bf84      	itt	hi
 80005c8:	f881 5025 	strbhi.w	r5, [r1, #37]	; 0x25
 80005cc:	2003      	movhi	r0, #3
 80005ce:	68d3      	ldr	r3, [r2, #12]
 80005d0:	065b      	lsls	r3, r3, #25
 80005d2:	d5f2      	bpl.n	80005ba <RTC_EnterInitMode.constprop.0+0x1e>
 80005d4:	bc30      	pop	{r4, r5}
 80005d6:	4770      	bx	lr
 80005d8:	200000ac 	.word	0x200000ac

080005dc <SPI_WaitFifoStateUntilTimeout.constprop.0>:
 80005dc:	b4f0      	push	{r4, r5, r6, r7}
 80005de:	4b31      	ldr	r3, [pc, #196]	; (80006a4 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xc8>)
 80005e0:	4e31      	ldr	r6, [pc, #196]	; (80006a8 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xcc>)
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	6805      	ldr	r5, [r0, #0]
 80005e6:	b082      	sub	sp, #8
 80005e8:	2400      	movs	r4, #0
 80005ea:	f88d 4003 	strb.w	r4, [sp, #3]
 80005ee:	6834      	ldr	r4, [r6, #0]
 80005f0:	6837      	ldr	r7, [r6, #0]
 80005f2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80005f6:	f1c4 0464 	rsb	r4, r4, #100	; 0x64
 80005fa:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 80005fe:	4422      	add	r2, r4
 8000600:	0d1b      	lsrs	r3, r3, #20
 8000602:	fb02 f303 	mul.w	r3, r2, r3
 8000606:	9301      	str	r3, [sp, #4]
 8000608:	68ab      	ldr	r3, [r5, #8]
 800060a:	4219      	tst	r1, r3
 800060c:	d10a      	bne.n	8000624 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x48>
 800060e:	e02c      	b.n	800066a <SPI_WaitFifoStateUntilTimeout.constprop.0+0x8e>
 8000610:	9c01      	ldr	r4, [sp, #4]
 8000612:	9b01      	ldr	r3, [sp, #4]
 8000614:	3b01      	subs	r3, #1
 8000616:	9301      	str	r3, [sp, #4]
 8000618:	68ab      	ldr	r3, [r5, #8]
 800061a:	2c00      	cmp	r4, #0
 800061c:	bf08      	it	eq
 800061e:	2200      	moveq	r2, #0
 8000620:	4219      	tst	r1, r3
 8000622:	d022      	beq.n	800066a <SPI_WaitFifoStateUntilTimeout.constprop.0+0x8e>
 8000624:	f5b1 6fc0 	cmp.w	r1, #1536	; 0x600
 8000628:	d105      	bne.n	8000636 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x5a>
 800062a:	7b2b      	ldrb	r3, [r5, #12]
 800062c:	b2db      	uxtb	r3, r3
 800062e:	f88d 3003 	strb.w	r3, [sp, #3]
 8000632:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8000636:	6833      	ldr	r3, [r6, #0]
 8000638:	1bdb      	subs	r3, r3, r7
 800063a:	429a      	cmp	r2, r3
 800063c:	d8e8      	bhi.n	8000610 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x34>
 800063e:	686b      	ldr	r3, [r5, #4]
 8000640:	6842      	ldr	r2, [r0, #4]
 8000642:	f023 03e0 	bic.w	r3, r3, #224	; 0xe0
 8000646:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800064a:	606b      	str	r3, [r5, #4]
 800064c:	d01a      	beq.n	8000684 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xa8>
 800064e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000650:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000654:	d00d      	beq.n	8000672 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x96>
 8000656:	2201      	movs	r2, #1
 8000658:	2300      	movs	r3, #0
 800065a:	f880 205d 	strb.w	r2, [r0, #93]	; 0x5d
 800065e:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 8000662:	2003      	movs	r0, #3
 8000664:	b002      	add	sp, #8
 8000666:	bcf0      	pop	{r4, r5, r6, r7}
 8000668:	4770      	bx	lr
 800066a:	2000      	movs	r0, #0
 800066c:	b002      	add	sp, #8
 800066e:	bcf0      	pop	{r4, r5, r6, r7}
 8000670:	4770      	bx	lr
 8000672:	682b      	ldr	r3, [r5, #0]
 8000674:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000678:	602b      	str	r3, [r5, #0]
 800067a:	682b      	ldr	r3, [r5, #0]
 800067c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000680:	602b      	str	r3, [r5, #0]
 8000682:	e7e8      	b.n	8000656 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x7a>
 8000684:	6883      	ldr	r3, [r0, #8]
 8000686:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800068a:	d002      	beq.n	8000692 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xb6>
 800068c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8000690:	d1dd      	bne.n	800064e <SPI_WaitFifoStateUntilTimeout.constprop.0+0x72>
 8000692:	682b      	ldr	r3, [r5, #0]
 8000694:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000698:	602b      	str	r3, [r5, #0]
 800069a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800069c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80006a0:	d1d9      	bne.n	8000656 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x7a>
 80006a2:	e7e6      	b.n	8000672 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x96>
 80006a4:	20000000 	.word	0x20000000
 80006a8:	200000ac 	.word	0x200000ac

080006ac <SPI_WaitFlagStateUntilTimeout.constprop.0>:
 80006ac:	b470      	push	{r4, r5, r6}
 80006ae:	4d29      	ldr	r5, [pc, #164]	; (8000754 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa8>)
 80006b0:	4b29      	ldr	r3, [pc, #164]	; (8000758 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xac>)
 80006b2:	682a      	ldr	r2, [r5, #0]
 80006b4:	681b      	ldr	r3, [r3, #0]
 80006b6:	6804      	ldr	r4, [r0, #0]
 80006b8:	682e      	ldr	r6, [r5, #0]
 80006ba:	f1c2 0264 	rsb	r2, r2, #100	; 0x64
 80006be:	4411      	add	r1, r2
 80006c0:	b083      	sub	sp, #12
 80006c2:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 80006c6:	fb01 f303 	mul.w	r3, r1, r3
 80006ca:	9301      	str	r3, [sp, #4]
 80006cc:	68a3      	ldr	r3, [r4, #8]
 80006ce:	061a      	lsls	r2, r3, #24
 80006d0:	d50d      	bpl.n	80006ee <SPI_WaitFlagStateUntilTimeout.constprop.0+0x42>
 80006d2:	682b      	ldr	r3, [r5, #0]
 80006d4:	1b9b      	subs	r3, r3, r6
 80006d6:	428b      	cmp	r3, r1
 80006d8:	d20d      	bcs.n	80006f6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4a>
 80006da:	9a01      	ldr	r2, [sp, #4]
 80006dc:	9b01      	ldr	r3, [sp, #4]
 80006de:	3b01      	subs	r3, #1
 80006e0:	9301      	str	r3, [sp, #4]
 80006e2:	68a3      	ldr	r3, [r4, #8]
 80006e4:	2a00      	cmp	r2, #0
 80006e6:	bf08      	it	eq
 80006e8:	2100      	moveq	r1, #0
 80006ea:	061b      	lsls	r3, r3, #24
 80006ec:	d4f1      	bmi.n	80006d2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x26>
 80006ee:	2000      	movs	r0, #0
 80006f0:	b003      	add	sp, #12
 80006f2:	bc70      	pop	{r4, r5, r6}
 80006f4:	4770      	bx	lr
 80006f6:	6863      	ldr	r3, [r4, #4]
 80006f8:	6842      	ldr	r2, [r0, #4]
 80006fa:	f023 03e0 	bic.w	r3, r3, #224	; 0xe0
 80006fe:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8000702:	6063      	str	r3, [r4, #4]
 8000704:	d016      	beq.n	8000734 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x88>
 8000706:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000708:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800070c:	d009      	beq.n	8000722 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x76>
 800070e:	2201      	movs	r2, #1
 8000710:	2300      	movs	r3, #0
 8000712:	f880 205d 	strb.w	r2, [r0, #93]	; 0x5d
 8000716:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 800071a:	2003      	movs	r0, #3
 800071c:	b003      	add	sp, #12
 800071e:	bc70      	pop	{r4, r5, r6}
 8000720:	4770      	bx	lr
 8000722:	6823      	ldr	r3, [r4, #0]
 8000724:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000728:	6023      	str	r3, [r4, #0]
 800072a:	6823      	ldr	r3, [r4, #0]
 800072c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000730:	6023      	str	r3, [r4, #0]
 8000732:	e7ec      	b.n	800070e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x62>
 8000734:	6883      	ldr	r3, [r0, #8]
 8000736:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800073a:	d002      	beq.n	8000742 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x96>
 800073c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8000740:	d1e1      	bne.n	8000706 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x5a>
 8000742:	6823      	ldr	r3, [r4, #0]
 8000744:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000748:	6023      	str	r3, [r4, #0]
 800074a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800074c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000750:	d1dd      	bne.n	800070e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x62>
 8000752:	e7e6      	b.n	8000722 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x76>
 8000754:	200000ac 	.word	0x200000ac
 8000758:	20000000 	.word	0x20000000

0800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>:
 800075c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000760:	4605      	mov	r5, r0
 8000762:	b087      	sub	sp, #28
 8000764:	2400      	movs	r4, #0
 8000766:	eb05 0e41 	add.w	lr, r5, r1, lsl #1
 800076a:	9002      	str	r0, [sp, #8]
 800076c:	9205      	str	r2, [sp, #20]
 800076e:	4610      	mov	r0, r2
 8000770:	9104      	str	r1, [sp, #16]
 8000772:	9303      	str	r3, [sp, #12]
 8000774:	f1ae 0e12 	sub.w	lr, lr, #18
 8000778:	1eaa      	subs	r2, r5, #2
 800077a:	4627      	mov	r7, r4
 800077c:	9401      	str	r4, [sp, #4]
 800077e:	46a1      	mov	r9, r4
 8000780:	46a2      	mov	sl, r4
 8000782:	f04f 0c01 	mov.w	ip, #1
 8000786:	f240 2bee 	movw	fp, #750	; 0x2ee
 800078a:	e014      	b.n	80007b6 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x5a>
 800078c:	f1ba 0f00 	cmp.w	sl, #0
 8000790:	d130      	bne.n	80007f4 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x98>
 8000792:	454b      	cmp	r3, r9
 8000794:	dd35      	ble.n	8000802 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xa6>
 8000796:	4699      	mov	r9, r3
 8000798:	2401      	movs	r4, #1
 800079a:	9e01      	ldr	r6, [sp, #4]
 800079c:	4276      	negs	r6, r6
 800079e:	42b3      	cmp	r3, r6
 80007a0:	bfbc      	itt	lt
 80007a2:	eba8 0305 	sublt.w	r3, r8, r5
 80007a6:	9301      	strlt	r3, [sp, #4]
 80007a8:	428f      	cmp	r7, r1
 80007aa:	bf38      	it	cc
 80007ac:	460f      	movcc	r7, r1
 80007ae:	4596      	cmp	lr, r2
 80007b0:	f100 0002 	add.w	r0, r0, #2
 80007b4:	d02b      	beq.n	800080e <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb2>
 80007b6:	8a55      	ldrh	r5, [r2, #18]
 80007b8:	f832 1f02 	ldrh.w	r1, [r2, #2]!
 80007bc:	1a6b      	subs	r3, r5, r1
 80007be:	f503 4600 	add.w	r6, r3, #32768	; 0x8000
 80007c2:	f5b6 3f80 	cmp.w	r6, #65536	; 0x10000
 80007c6:	bf38      	it	cc
 80007c8:	8003      	strhcc	r3, [r0, #0]
 80007ca:	4688      	mov	r8, r1
 80007cc:	bf2c      	ite	cs
 80007ce:	f04f 0c00 	movcs.w	ip, #0
 80007d2:	8811      	ldrhcc	r1, [r2, #0]
 80007d4:	455b      	cmp	r3, fp
 80007d6:	dcd9      	bgt.n	800078c <acc_cal_algorithms_calc_pulse_params.constprop.0+0x30>
 80007d8:	4e59      	ldr	r6, [pc, #356]	; (8000940 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x1e4>)
 80007da:	4599      	cmp	r9, r3
 80007dc:	bfb8      	it	lt
 80007de:	4699      	movlt	r9, r3
 80007e0:	42b3      	cmp	r3, r6
 80007e2:	dada      	bge.n	800079a <acc_cal_algorithms_calc_pulse_params.constprop.0+0x3e>
 80007e4:	2c00      	cmp	r4, #0
 80007e6:	bf0a      	itet	eq
 80007e8:	f04f 0c00 	moveq.w	ip, #0
 80007ec:	46a2      	movne	sl, r4
 80007ee:	f04f 0a01 	moveq.w	sl, #1
 80007f2:	e7d2      	b.n	800079a <acc_cal_algorithms_calc_pulse_params.constprop.0+0x3e>
 80007f4:	454b      	cmp	r3, r9
 80007f6:	dd06      	ble.n	8000806 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xaa>
 80007f8:	4699      	mov	r9, r3
 80007fa:	4654      	mov	r4, sl
 80007fc:	f04f 0c00 	mov.w	ip, #0
 8000800:	e7cb      	b.n	800079a <acc_cal_algorithms_calc_pulse_params.constprop.0+0x3e>
 8000802:	2401      	movs	r4, #1
 8000804:	e7c9      	b.n	800079a <acc_cal_algorithms_calc_pulse_params.constprop.0+0x3e>
 8000806:	4654      	mov	r4, sl
 8000808:	f04f 0c00 	mov.w	ip, #0
 800080c:	e7c5      	b.n	800079a <acc_cal_algorithms_calc_pulse_params.constprop.0+0x3e>
 800080e:	f1bc 0f00 	cmp.w	ip, #0
 8000812:	d105      	bne.n	8000820 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xc4>
 8000814:	f04f 0a00 	mov.w	sl, #0
 8000818:	4650      	mov	r0, sl
 800081a:	b007      	add	sp, #28
 800081c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000820:	2c00      	cmp	r4, #0
 8000822:	d0f7      	beq.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 8000824:	f1ba 0f00 	cmp.w	sl, #0
 8000828:	d0f4      	beq.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 800082a:	9a04      	ldr	r2, [sp, #16]
 800082c:	9e05      	ldr	r6, [sp, #20]
 800082e:	9704      	str	r7, [sp, #16]
 8000830:	2300      	movs	r3, #0
 8000832:	f8cd 9014 	str.w	r9, [sp, #20]
 8000836:	f1a2 0e1c 	sub.w	lr, r2, #28
 800083a:	3612      	adds	r6, #18
 800083c:	4698      	mov	r8, r3
 800083e:	469c      	mov	ip, r3
 8000840:	461d      	mov	r5, r3
 8000842:	461f      	mov	r7, r3
 8000844:	4699      	mov	r9, r3
 8000846:	f936 3f02 	ldrsh.w	r3, [r6, #2]!
 800084a:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800084e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8000852:	4630      	mov	r0, r6
 8000854:	4631      	mov	r1, r6
 8000856:	220a      	movs	r2, #10
 8000858:	f931 bd02 	ldrsh.w	fp, [r1, #-2]!
 800085c:	f930 4f02 	ldrsh.w	r4, [r0, #2]!
 8000860:	fb02 330b 	mla	r3, r2, fp, r3
 8000864:	f1a2 0b02 	sub.w	fp, r2, #2
 8000868:	3a01      	subs	r2, #1
 800086a:	fb0b 3304 	mla	r3, fp, r4, r3
 800086e:	d1f3      	bne.n	8000858 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xfc>
 8000870:	4563      	cmp	r3, ip
 8000872:	dc61      	bgt.n	8000938 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x1dc>
 8000874:	4543      	cmp	r3, r8
 8000876:	da01      	bge.n	800087c <acc_cal_algorithms_calc_pulse_params.constprop.0+0x120>
 8000878:	4698      	mov	r8, r3
 800087a:	46a9      	mov	r9, r5
 800087c:	3501      	adds	r5, #1
 800087e:	4575      	cmp	r5, lr
 8000880:	d1e1      	bne.n	8000846 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xea>
 8000882:	f24c 3350 	movw	r3, #50000	; 0xc350
 8000886:	459c      	cmp	ip, r3
 8000888:	4638      	mov	r0, r7
 800088a:	464c      	mov	r4, r9
 800088c:	9f04      	ldr	r7, [sp, #16]
 800088e:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8000892:	ddbf      	ble.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 8000894:	4b2b      	ldr	r3, [pc, #172]	; (8000944 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x1e8>)
 8000896:	4598      	cmp	r8, r3
 8000898:	dabc      	bge.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 800089a:	f1b9 0f00 	cmp.w	r9, #0
 800089e:	d0b9      	beq.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 80008a0:	9b01      	ldr	r3, [sp, #4]
 80008a2:	2b00      	cmp	r3, #0
 80008a4:	d0b6      	beq.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 80008a6:	9b02      	ldr	r3, [sp, #8]
 80008a8:	9911      	ldr	r1, [sp, #68]	; 0x44
 80008aa:	881b      	ldrh	r3, [r3, #0]
 80008ac:	00ff      	lsls	r7, r7, #3
 80008ae:	00db      	lsls	r3, r3, #3
 80008b0:	b141      	cbz	r1, 80008c4 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x168>
 80008b2:	42bb      	cmp	r3, r7
 80008b4:	d204      	bcs.n	80008c0 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x164>
 80008b6:	43da      	mvns	r2, r3
 80008b8:	444a      	add	r2, r9
 80008ba:	443a      	add	r2, r7
 80008bc:	fbb2 f2f9 	udiv	r2, r2, r9
 80008c0:	9911      	ldr	r1, [sp, #68]	; 0x44
 80008c2:	600a      	str	r2, [r1, #0]
 80008c4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80008c6:	2a00      	cmp	r2, #0
 80008c8:	d0a6      	beq.n	8000818 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xbc>
 80008ca:	9a03      	ldr	r2, [sp, #12]
 80008cc:	2a00      	cmp	r2, #0
 80008ce:	d0a3      	beq.n	8000818 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xbc>
 80008d0:	4602      	mov	r2, r0
 80008d2:	9902      	ldr	r1, [sp, #8]
 80008d4:	320e      	adds	r2, #14
 80008d6:	f831 1012 	ldrh.w	r1, [r1, r2, lsl #1]
 80008da:	ebb3 0fc1 	cmp.w	r3, r1, lsl #3
 80008de:	ea4f 00c1 	mov.w	r0, r1, lsl #3
 80008e2:	d205      	bcs.n	80008f0 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x194>
 80008e4:	43db      	mvns	r3, r3
 80008e6:	444b      	add	r3, r9
 80008e8:	4403      	add	r3, r0
 80008ea:	fbb3 f3f9 	udiv	r3, r3, r9
 80008ee:	1ad2      	subs	r2, r2, r3
 80008f0:	9b02      	ldr	r3, [sp, #8]
 80008f2:	f104 090e 	add.w	r9, r4, #14
 80008f6:	f833 3019 	ldrh.w	r3, [r3, r9, lsl #1]
 80008fa:	ebb7 0fc3 	cmp.w	r7, r3, lsl #3
 80008fe:	ea4f 01c3 	mov.w	r1, r3, lsl #3
 8000902:	d907      	bls.n	8000914 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x1b8>
 8000904:	9801      	ldr	r0, [sp, #4]
 8000906:	1e43      	subs	r3, r0, #1
 8000908:	443b      	add	r3, r7
 800090a:	1a5b      	subs	r3, r3, r1
 800090c:	fbb3 f3f0 	udiv	r3, r3, r0
 8000910:	eba9 0903 	sub.w	r9, r9, r3
 8000914:	2a00      	cmp	r2, #0
 8000916:	f6ff af7d 	blt.w	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 800091a:	f1b9 0f00 	cmp.w	r9, #0
 800091e:	f6ff af79 	blt.w	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 8000922:	454a      	cmp	r2, r9
 8000924:	f73f af76 	bgt.w	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 8000928:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800092a:	eba9 0902 	sub.w	r9, r9, r2
 800092e:	f8c3 9000 	str.w	r9, [r3]
 8000932:	9b03      	ldr	r3, [sp, #12]
 8000934:	601a      	str	r2, [r3, #0]
 8000936:	e76f      	b.n	8000818 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xbc>
 8000938:	469c      	mov	ip, r3
 800093a:	462f      	mov	r7, r5
 800093c:	e79e      	b.n	800087c <acc_cal_algorithms_calc_pulse_params.constprop.0+0x120>
 800093e:	bf00      	nop
 8000940:	fffffd12 	.word	0xfffffd12
 8000944:	ffff3cb0 	.word	0xffff3cb0

08000948 <acc_diagnostic_log_array.constprop.0>:
 8000948:	4b03      	ldr	r3, [pc, #12]	; (8000958 <acc_diagnostic_log_array.constprop.0+0x10>)
 800094a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800094c:	b113      	cbz	r3, 8000954 <acc_diagnostic_log_array.constprop.0+0xc>
 800094e:	68db      	ldr	r3, [r3, #12]
 8000950:	4902      	ldr	r1, [pc, #8]	; (800095c <acc_diagnostic_log_array.constprop.0+0x14>)
 8000952:	4718      	bx	r3
 8000954:	4770      	bx	lr
 8000956:	bf00      	nop
 8000958:	200000ac 	.word	0x200000ac
 800095c:	0800acb8 	.word	0x0800acb8

08000960 <acc_cal_algorithms_phase_unwrap.constprop.0>:
 8000960:	b470      	push	{r4, r5, r6}
 8000962:	4e12      	ldr	r6, [pc, #72]	; (80009ac <acc_cal_algorithms_phase_unwrap.constprop.0+0x4c>)
 8000964:	4d12      	ldr	r5, [pc, #72]	; (80009b0 <acc_cal_algorithms_phase_unwrap.constprop.0+0x50>)
 8000966:	f100 04bc 	add.w	r4, r0, #188	; 0xbc
 800096a:	2100      	movs	r1, #0
 800096c:	6843      	ldr	r3, [r0, #4]
 800096e:	440b      	add	r3, r1
 8000970:	4602      	mov	r2, r0
 8000972:	f840 3f04 	str.w	r3, [r0, #4]!
 8000976:	6812      	ldr	r2, [r2, #0]
 8000978:	1a9a      	subs	r2, r3, r2
 800097a:	42b2      	cmp	r2, r6
 800097c:	dd09      	ble.n	8000992 <acc_cal_algorithms_phase_unwrap.constprop.0+0x32>
 800097e:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8000982:	f5a3 23c9 	sub.w	r3, r3, #411648	; 0x64800
 8000986:	3b7e      	subs	r3, #126	; 0x7e
 8000988:	f5a1 21c9 	sub.w	r1, r1, #411648	; 0x64800
 800098c:	6003      	str	r3, [r0, #0]
 800098e:	397e      	subs	r1, #126	; 0x7e
 8000990:	1a9a      	subs	r2, r3, r2
 8000992:	42aa      	cmp	r2, r5
 8000994:	da06      	bge.n	80009a4 <acc_cal_algorithms_phase_unwrap.constprop.0+0x44>
 8000996:	f503 23c9 	add.w	r3, r3, #411648	; 0x64800
 800099a:	337e      	adds	r3, #126	; 0x7e
 800099c:	f501 21c9 	add.w	r1, r1, #411648	; 0x64800
 80009a0:	6003      	str	r3, [r0, #0]
 80009a2:	317e      	adds	r1, #126	; 0x7e
 80009a4:	4284      	cmp	r4, r0
 80009a6:	d1e1      	bne.n	800096c <acc_cal_algorithms_phase_unwrap.constprop.0+0xc>
 80009a8:	bc70      	pop	{r4, r5, r6}
 80009aa:	4770      	bx	lr
 80009ac:	0003243f 	.word	0x0003243f
 80009b0:	fffcdbc1 	.word	0xfffcdbc1

080009b4 <diagnostic_log_data_i16.part.0>:
 80009b4:	4b05      	ldr	r3, [pc, #20]	; (80009cc <diagnostic_log_data_i16.part.0+0x18>)
 80009b6:	4a06      	ldr	r2, [pc, #24]	; (80009d0 <diagnostic_log_data_i16.part.0+0x1c>)
 80009b8:	4906      	ldr	r1, [pc, #24]	; (80009d4 <diagnostic_log_data_i16.part.0+0x20>)
 80009ba:	b410      	push	{r4}
 80009bc:	6c1c      	ldr	r4, [r3, #64]	; 0x40
 80009be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80009c0:	46a4      	mov	ip, r4
 80009c2:	2002      	movs	r0, #2
 80009c4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80009c8:	4760      	bx	ip
 80009ca:	bf00      	nop
 80009cc:	200000ac 	.word	0x200000ac
 80009d0:	0800b384 	.word	0x0800b384
 80009d4:	0800a2cc 	.word	0x0800a2cc

080009d8 <acc_diagnostic_log_data_i16>:
 80009d8:	4b02      	ldr	r3, [pc, #8]	; (80009e4 <acc_diagnostic_log_data_i16+0xc>)
 80009da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009dc:	b10b      	cbz	r3, 80009e2 <acc_diagnostic_log_data_i16+0xa>
 80009de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80009e0:	4718      	bx	r3
 80009e2:	4770      	bx	lr
 80009e4:	200000ac 	.word	0x200000ac

080009e8 <acc_diagnostic_log_data_u16>:
 80009e8:	4b02      	ldr	r3, [pc, #8]	; (80009f4 <acc_diagnostic_log_data_u16+0xc>)
 80009ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009ec:	b10b      	cbz	r3, 80009f2 <acc_diagnostic_log_data_u16+0xa>
 80009ee:	6a1b      	ldr	r3, [r3, #32]
 80009f0:	4718      	bx	r3
 80009f2:	4770      	bx	lr
 80009f4:	200000ac 	.word	0x200000ac

080009f8 <acc_diagnostic_log_scalar>:
 80009f8:	4b02      	ldr	r3, [pc, #8]	; (8000a04 <acc_diagnostic_log_scalar+0xc>)
 80009fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009fc:	b10b      	cbz	r3, 8000a02 <acc_diagnostic_log_scalar+0xa>
 80009fe:	695b      	ldr	r3, [r3, #20]
 8000a00:	4718      	bx	r3
 8000a02:	4770      	bx	lr
 8000a04:	200000ac 	.word	0x200000ac

08000a08 <acc_diagnostic_log_set_scope>:
 8000a08:	4b02      	ldr	r3, [pc, #8]	; (8000a14 <acc_diagnostic_log_set_scope+0xc>)
 8000a0a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000a0c:	b10b      	cbz	r3, 8000a12 <acc_diagnostic_log_set_scope+0xa>
 8000a0e:	681b      	ldr	r3, [r3, #0]
 8000a10:	4718      	bx	r3
 8000a12:	4770      	bx	lr
 8000a14:	200000ac 	.word	0x200000ac

08000a18 <adl_add_value_to_buffer>:
 8000a18:	4b18      	ldr	r3, [pc, #96]	; (8000a7c <adl_add_value_to_buffer+0x64>)
 8000a1a:	f8df c064 	ldr.w	ip, [pc, #100]	; 8000a80 <adl_add_value_to_buffer+0x68>
 8000a1e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a22:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8000a24:	1873      	adds	r3, r6, r1
 8000a26:	1e5c      	subs	r4, r3, #1
 8000a28:	46a6      	mov	lr, r4
 8000a2a:	2200      	movs	r2, #0
 8000a2c:	fbac 7500 	umull	r7, r5, ip, r0
 8000a30:	08ed      	lsrs	r5, r5, #3
 8000a32:	eb05 0785 	add.w	r7, r5, r5, lsl #2
 8000a36:	eba0 0747 	sub.w	r7, r0, r7, lsl #1
 8000a3a:	4680      	mov	r8, r0
 8000a3c:	3730      	adds	r7, #48	; 0x30
 8000a3e:	f1b8 0f09 	cmp.w	r8, #9
 8000a42:	4628      	mov	r0, r5
 8000a44:	f80e 7f01 	strb.w	r7, [lr, #1]!
 8000a48:	4615      	mov	r5, r2
 8000a4a:	f102 0201 	add.w	r2, r2, #1
 8000a4e:	d8ed      	bhi.n	8000a2c <adl_add_value_to_buffer+0x14>
 8000a50:	2000      	movs	r0, #0
 8000a52:	5498      	strb	r0, [r3, r2]
 8000a54:	4610      	mov	r0, r2
 8000a56:	4418      	add	r0, r3
 8000a58:	eb03 0355 	add.w	r3, r3, r5, lsr #1
 8000a5c:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 8000a60:	f810 7d01 	ldrb.w	r7, [r0, #-1]!
 8000a64:	7027      	strb	r7, [r4, #0]
 8000a66:	429c      	cmp	r4, r3
 8000a68:	7005      	strb	r5, [r0, #0]
 8000a6a:	d1f7      	bne.n	8000a5c <adl_add_value_to_buffer+0x44>
 8000a6c:	4411      	add	r1, r2
 8000a6e:	1c48      	adds	r0, r1, #1
 8000a70:	222c      	movs	r2, #44	; 0x2c
 8000a72:	2300      	movs	r3, #0
 8000a74:	5472      	strb	r2, [r6, r1]
 8000a76:	5433      	strb	r3, [r6, r0]
 8000a78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000a7c:	200000ac 	.word	0x200000ac
 8000a80:	cccccccd 	.word	0xcccccccd

08000a84 <diagnostic_log_scalar>:
 8000a84:	b510      	push	{r4, lr}
 8000a86:	4a07      	ldr	r2, [pc, #28]	; (8000aa4 <diagnostic_log_scalar+0x20>)
 8000a88:	f892 4048 	ldrb.w	r4, [r2, #72]	; 0x48
 8000a8c:	2c01      	cmp	r4, #1
 8000a8e:	b082      	sub	sp, #8
 8000a90:	d906      	bls.n	8000aa0 <diagnostic_log_scalar+0x1c>
 8000a92:	9100      	str	r1, [sp, #0]
 8000a94:	6c14      	ldr	r4, [r2, #64]	; 0x40
 8000a96:	4904      	ldr	r1, [pc, #16]	; (8000aa8 <diagnostic_log_scalar+0x24>)
 8000a98:	4a04      	ldr	r2, [pc, #16]	; (8000aac <diagnostic_log_scalar+0x28>)
 8000a9a:	4603      	mov	r3, r0
 8000a9c:	2002      	movs	r0, #2
 8000a9e:	47a0      	blx	r4
 8000aa0:	b002      	add	sp, #8
 8000aa2:	bd10      	pop	{r4, pc}
 8000aa4:	200000ac 	.word	0x200000ac
 8000aa8:	0800a2cc 	.word	0x0800a2cc
 8000aac:	0800a2d0 	.word	0x0800a2d0

08000ab0 <diagnostic_log_array_sub_name>:
 8000ab0:	b530      	push	{r4, r5, lr}
 8000ab2:	4c08      	ldr	r4, [pc, #32]	; (8000ad4 <diagnostic_log_array_sub_name+0x24>)
 8000ab4:	f894 5048 	ldrb.w	r5, [r4, #72]	; 0x48
 8000ab8:	2d01      	cmp	r5, #1
 8000aba:	b083      	sub	sp, #12
 8000abc:	d907      	bls.n	8000ace <diagnostic_log_array_sub_name+0x1e>
 8000abe:	e9cd 1200 	strd	r1, r2, [sp]
 8000ac2:	4603      	mov	r3, r0
 8000ac4:	6c24      	ldr	r4, [r4, #64]	; 0x40
 8000ac6:	4a04      	ldr	r2, [pc, #16]	; (8000ad8 <diagnostic_log_array_sub_name+0x28>)
 8000ac8:	4904      	ldr	r1, [pc, #16]	; (8000adc <diagnostic_log_array_sub_name+0x2c>)
 8000aca:	2002      	movs	r0, #2
 8000acc:	47a0      	blx	r4
 8000ace:	b003      	add	sp, #12
 8000ad0:	bd30      	pop	{r4, r5, pc}
 8000ad2:	bf00      	nop
 8000ad4:	200000ac 	.word	0x200000ac
 8000ad8:	0800a2e4 	.word	0x0800a2e4
 8000adc:	0800a2cc 	.word	0x0800a2cc

08000ae0 <diagnostic_log_array>:
 8000ae0:	b510      	push	{r4, lr}
 8000ae2:	4a07      	ldr	r2, [pc, #28]	; (8000b00 <diagnostic_log_array+0x20>)
 8000ae4:	f892 4048 	ldrb.w	r4, [r2, #72]	; 0x48
 8000ae8:	2c01      	cmp	r4, #1
 8000aea:	b082      	sub	sp, #8
 8000aec:	d906      	bls.n	8000afc <diagnostic_log_array+0x1c>
 8000aee:	9100      	str	r1, [sp, #0]
 8000af0:	6c14      	ldr	r4, [r2, #64]	; 0x40
 8000af2:	4904      	ldr	r1, [pc, #16]	; (8000b04 <diagnostic_log_array+0x24>)
 8000af4:	4a04      	ldr	r2, [pc, #16]	; (8000b08 <diagnostic_log_array+0x28>)
 8000af6:	4603      	mov	r3, r0
 8000af8:	2002      	movs	r0, #2
 8000afa:	47a0      	blx	r4
 8000afc:	b002      	add	sp, #8
 8000afe:	bd10      	pop	{r4, pc}
 8000b00:	200000ac 	.word	0x200000ac
 8000b04:	0800a2cc 	.word	0x0800a2cc
 8000b08:	0800a2fc 	.word	0x0800a2fc

08000b0c <diagnostic_log_set_parameter>:
 8000b0c:	b510      	push	{r4, lr}
 8000b0e:	4a07      	ldr	r2, [pc, #28]	; (8000b2c <diagnostic_log_set_parameter+0x20>)
 8000b10:	f892 4048 	ldrb.w	r4, [r2, #72]	; 0x48
 8000b14:	2c01      	cmp	r4, #1
 8000b16:	b082      	sub	sp, #8
 8000b18:	d906      	bls.n	8000b28 <diagnostic_log_set_parameter+0x1c>
 8000b1a:	9100      	str	r1, [sp, #0]
 8000b1c:	6c14      	ldr	r4, [r2, #64]	; 0x40
 8000b1e:	4904      	ldr	r1, [pc, #16]	; (8000b30 <diagnostic_log_set_parameter+0x24>)
 8000b20:	4a04      	ldr	r2, [pc, #16]	; (8000b34 <diagnostic_log_set_parameter+0x28>)
 8000b22:	4603      	mov	r3, r0
 8000b24:	2002      	movs	r0, #2
 8000b26:	47a0      	blx	r4
 8000b28:	b002      	add	sp, #8
 8000b2a:	bd10      	pop	{r4, pc}
 8000b2c:	200000ac 	.word	0x200000ac
 8000b30:	0800a2cc 	.word	0x0800a2cc
 8000b34:	0800a310 	.word	0x0800a310

08000b38 <diagnostic_log_declare_parameter>:
 8000b38:	b530      	push	{r4, r5, lr}
 8000b3a:	4c08      	ldr	r4, [pc, #32]	; (8000b5c <diagnostic_log_declare_parameter+0x24>)
 8000b3c:	f894 5048 	ldrb.w	r5, [r4, #72]	; 0x48
 8000b40:	2d01      	cmp	r5, #1
 8000b42:	b083      	sub	sp, #12
 8000b44:	d907      	bls.n	8000b56 <diagnostic_log_declare_parameter+0x1e>
 8000b46:	e9cd 1200 	strd	r1, r2, [sp]
 8000b4a:	4603      	mov	r3, r0
 8000b4c:	6c24      	ldr	r4, [r4, #64]	; 0x40
 8000b4e:	4a04      	ldr	r2, [pc, #16]	; (8000b60 <diagnostic_log_declare_parameter+0x28>)
 8000b50:	4904      	ldr	r1, [pc, #16]	; (8000b64 <diagnostic_log_declare_parameter+0x2c>)
 8000b52:	2002      	movs	r0, #2
 8000b54:	47a0      	blx	r4
 8000b56:	b003      	add	sp, #12
 8000b58:	bd30      	pop	{r4, r5, pc}
 8000b5a:	bf00      	nop
 8000b5c:	200000ac 	.word	0x200000ac
 8000b60:	0800a320 	.word	0x0800a320
 8000b64:	0800a2cc 	.word	0x0800a2cc

08000b68 <diagnostic_log_set_scope>:
 8000b68:	4a07      	ldr	r2, [pc, #28]	; (8000b88 <diagnostic_log_set_scope+0x20>)
 8000b6a:	f892 1048 	ldrb.w	r1, [r2, #72]	; 0x48
 8000b6e:	2901      	cmp	r1, #1
 8000b70:	d909      	bls.n	8000b86 <diagnostic_log_set_scope+0x1e>
 8000b72:	b410      	push	{r4}
 8000b74:	6c14      	ldr	r4, [r2, #64]	; 0x40
 8000b76:	4905      	ldr	r1, [pc, #20]	; (8000b8c <diagnostic_log_set_scope+0x24>)
 8000b78:	4a05      	ldr	r2, [pc, #20]	; (8000b90 <diagnostic_log_set_scope+0x28>)
 8000b7a:	4603      	mov	r3, r0
 8000b7c:	46a4      	mov	ip, r4
 8000b7e:	2002      	movs	r0, #2
 8000b80:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000b84:	4760      	bx	ip
 8000b86:	4770      	bx	lr
 8000b88:	200000ac 	.word	0x200000ac
 8000b8c:	0800a2cc 	.word	0x0800a2cc
 8000b90:	0800a338 	.word	0x0800a338

08000b94 <acc_utils_transfer_buffer_to_uint32>:
 8000b94:	b17a      	cbz	r2, 8000bb6 <acc_utils_transfer_buffer_to_uint32+0x22>
 8000b96:	b410      	push	{r4}
 8000b98:	3904      	subs	r1, #4
 8000b9a:	eb00 0482 	add.w	r4, r0, r2, lsl #2
 8000b9e:	8802      	ldrh	r2, [r0, #0]
 8000ba0:	8843      	ldrh	r3, [r0, #2]
 8000ba2:	3004      	adds	r0, #4
 8000ba4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000ba8:	4284      	cmp	r4, r0
 8000baa:	f841 3f04 	str.w	r3, [r1, #4]!
 8000bae:	d1f6      	bne.n	8000b9e <acc_utils_transfer_buffer_to_uint32+0xa>
 8000bb0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000bb4:	4770      	bx	lr
 8000bb6:	4770      	bx	lr

08000bb8 <acc_confprogram_copy>:
 8000bb8:	b152      	cbz	r2, 8000bd0 <acc_confprogram_copy+0x18>
 8000bba:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8000bbe:	3804      	subs	r0, #4
 8000bc0:	f850 3f04 	ldr.w	r3, [r0, #4]!
 8000bc4:	804b      	strh	r3, [r1, #2]
 8000bc6:	0c1b      	lsrs	r3, r3, #16
 8000bc8:	800b      	strh	r3, [r1, #0]
 8000bca:	3104      	adds	r1, #4
 8000bcc:	4291      	cmp	r1, r2
 8000bce:	d1f7      	bne.n	8000bc0 <acc_confprogram_copy+0x8>
 8000bd0:	4770      	bx	lr
 8000bd2:	bf00      	nop

08000bd4 <acc_cpd_pll_divisors_calculate>:
 8000bd4:	edd0 7a00 	vldr	s15, [r0]
 8000bd8:	ed9f 6a61 	vldr	s12, [pc, #388]	; 8000d60 <acc_cpd_pll_divisors_calculate+0x18c>
 8000bdc:	eddf 6a61 	vldr	s13, [pc, #388]	; 8000d64 <acc_cpd_pll_divisors_calculate+0x190>
 8000be0:	ee86 7a27 	vdiv.f32	s14, s12, s15
 8000be4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000be6:	4606      	mov	r6, r0
 8000be8:	b083      	sub	sp, #12
 8000bea:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8000bee:	ee37 7a06 	vadd.f32	s14, s14, s12
 8000bf2:	eef4 7ae6 	vcmpe.f32	s15, s13
 8000bf6:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 8000bfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000bfe:	ee17 3a10 	vmov	r3, s14
 8000c02:	b29c      	uxth	r4, r3
 8000c04:	dc06      	bgt.n	8000c14 <acc_cpd_pll_divisors_calculate+0x40>
 8000c06:	ed9f 7a58 	vldr	s14, [pc, #352]	; 8000d68 <acc_cpd_pll_divisors_calculate+0x194>
 8000c0a:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000c0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c12:	d571      	bpl.n	8000cf8 <acc_cpd_pll_divisors_calculate+0x124>
 8000c14:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8000c18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c1c:	ed9f 7a53 	vldr	s14, [pc, #332]	; 8000d6c <acc_cpd_pll_divisors_calculate+0x198>
 8000c20:	bf4c      	ite	mi
 8000c22:	4b53      	ldrmi	r3, [pc, #332]	; (8000d70 <acc_cpd_pll_divisors_calculate+0x19c>)
 8000c24:	4b53      	ldrpl	r3, [pc, #332]	; (8000d74 <acc_cpd_pll_divisors_calculate+0x1a0>)
 8000c26:	ed9f 6a51 	vldr	s12, [pc, #324]	; 8000d6c <acc_cpd_pll_divisors_calculate+0x198>
 8000c2a:	eddf 6a53 	vldr	s13, [pc, #332]	; 8000d78 <acc_cpd_pll_divisors_calculate+0x1a4>
 8000c2e:	4d53      	ldr	r5, [pc, #332]	; (8000d7c <acc_cpd_pll_divisors_calculate+0x1a8>)
 8000c30:	4953      	ldr	r1, [pc, #332]	; (8000d80 <acc_cpd_pll_divisors_calculate+0x1ac>)
 8000c32:	6c2f      	ldr	r7, [r5, #64]	; 0x40
 8000c34:	bf48      	it	mi
 8000c36:	eef1 7a67 	vnegmi.f32	s15, s15
 8000c3a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8000c3e:	2000      	movs	r0, #0
 8000c40:	eebc 7ae7 	vcvt.u32.f32	s14, s15
 8000c44:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8000c48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c4c:	ee17 2a10 	vmov	r2, s14
 8000c50:	bf4c      	ite	mi
 8000c52:	eeb1 7a67 	vnegmi.f32	s14, s15
 8000c56:	eeb0 7a67 	vmovpl.f32	s14, s15
 8000c5a:	ee37 7a06 	vadd.f32	s14, s14, s12
 8000c5e:	9200      	str	r2, [sp, #0]
 8000c60:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 8000c64:	4a47      	ldr	r2, [pc, #284]	; (8000d84 <acc_cpd_pll_divisors_calculate+0x1b0>)
 8000c66:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8000c6a:	3c10      	subs	r4, #16
 8000c6c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000c70:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8000c74:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000c78:	edcd 7a01 	vstr	s15, [sp, #4]
 8000c7c:	47b8      	blx	r7
 8000c7e:	2cef      	cmp	r4, #239	; 0xef
 8000c80:	d937      	bls.n	8000cf2 <acc_cpd_pll_divisors_calculate+0x11e>
 8000c82:	edd6 7a00 	vldr	s15, [r6]
 8000c86:	ed9f 7a39 	vldr	s14, [pc, #228]	; 8000d6c <acc_cpd_pll_divisors_calculate+0x198>
 8000c8a:	ed9f 6a38 	vldr	s12, [pc, #224]	; 8000d6c <acc_cpd_pll_divisors_calculate+0x198>
 8000c8e:	eddf 6a3a 	vldr	s13, [pc, #232]	; 8000d78 <acc_cpd_pll_divisors_calculate+0x1a4>
 8000c92:	6c2c      	ldr	r4, [r5, #64]	; 0x40
 8000c94:	493a      	ldr	r1, [pc, #232]	; (8000d80 <acc_cpd_pll_divisors_calculate+0x1ac>)
 8000c96:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8000c9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c9e:	bf48      	it	mi
 8000ca0:	eef1 7a67 	vnegmi.f32	s15, s15
 8000ca4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8000ca8:	bf4c      	ite	mi
 8000caa:	4b31      	ldrmi	r3, [pc, #196]	; (8000d70 <acc_cpd_pll_divisors_calculate+0x19c>)
 8000cac:	4b31      	ldrpl	r3, [pc, #196]	; (8000d74 <acc_cpd_pll_divisors_calculate+0x1a0>)
 8000cae:	eebc 7ae7 	vcvt.u32.f32	s14, s15
 8000cb2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8000cb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000cba:	ee17 2a10 	vmov	r2, s14
 8000cbe:	bf4c      	ite	mi
 8000cc0:	eeb1 7a67 	vnegmi.f32	s14, s15
 8000cc4:	eeb0 7a67 	vmovpl.f32	s14, s15
 8000cc8:	ee37 7a06 	vadd.f32	s14, s14, s12
 8000ccc:	9200      	str	r2, [sp, #0]
 8000cce:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 8000cd2:	4a2c      	ldr	r2, [pc, #176]	; (8000d84 <acc_cpd_pll_divisors_calculate+0x1b0>)
 8000cd4:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8000cd8:	2000      	movs	r0, #0
 8000cda:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000cde:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8000ce2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000ce6:	edcd 7a01 	vstr	s15, [sp, #4]
 8000cea:	47a0      	blx	r4
 8000cec:	2000      	movs	r0, #0
 8000cee:	b003      	add	sp, #12
 8000cf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000cf2:	2000      	movs	r0, #0
 8000cf4:	b003      	add	sp, #12
 8000cf6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000cf8:	f1a4 0310 	sub.w	r3, r4, #16
 8000cfc:	b29b      	uxth	r3, r3
 8000cfe:	2bef      	cmp	r3, #239	; 0xef
 8000d00:	d901      	bls.n	8000d06 <acc_cpd_pll_divisors_calculate+0x132>
 8000d02:	4d1e      	ldr	r5, [pc, #120]	; (8000d7c <acc_cpd_pll_divisors_calculate+0x1a8>)
 8000d04:	e7bf      	b.n	8000c86 <acc_cpd_pll_divisors_calculate+0xb2>
 8000d06:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000d0a:	eddf 6a1f 	vldr	s13, [pc, #124]	; 8000d88 <acc_cpd_pll_divisors_calculate+0x1b4>
 8000d0e:	ed9f 7a1f 	vldr	s14, [pc, #124]	; 8000d8c <acc_cpd_pll_divisors_calculate+0x1b8>
 8000d12:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8000d16:	2c3f      	cmp	r4, #63	; 0x3f
 8000d18:	ee77 7a87 	vadd.f32	s15, s15, s14
 8000d1c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000d20:	ee17 2a90 	vmov	r2, s15
 8000d24:	810a      	strh	r2, [r1, #8]
 8000d26:	d912      	bls.n	8000d4e <acc_cpd_pll_divisors_calculate+0x17a>
 8000d28:	2cbf      	cmp	r4, #191	; 0xbf
 8000d2a:	f04f 0301 	mov.w	r3, #1
 8000d2e:	bf98      	it	ls
 8000d30:	f1a4 0240 	subls.w	r2, r4, #64	; 0x40
 8000d34:	804b      	strh	r3, [r1, #2]
 8000d36:	bf8c      	ite	hi
 8000d38:	08e2      	lsrhi	r2, r4, #3
 8000d3a:	f3c2 02cf 	ubfxls	r2, r2, #3, #16
 8000d3e:	f004 0307 	and.w	r3, r4, #7
 8000d42:	808a      	strh	r2, [r1, #4]
 8000d44:	80cb      	strh	r3, [r1, #6]
 8000d46:	2001      	movs	r0, #1
 8000d48:	800c      	strh	r4, [r1, #0]
 8000d4a:	b003      	add	sp, #12
 8000d4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d4e:	2200      	movs	r2, #0
 8000d50:	2c2f      	cmp	r4, #47	; 0x2f
 8000d52:	bf88      	it	hi
 8000d54:	4623      	movhi	r3, r4
 8000d56:	808b      	strh	r3, [r1, #4]
 8000d58:	804a      	strh	r2, [r1, #2]
 8000d5a:	80ca      	strh	r2, [r1, #6]
 8000d5c:	e7f3      	b.n	8000d46 <acc_cpd_pll_divisors_calculate+0x172>
 8000d5e:	bf00      	nop
 8000d60:	4f1502f9 	.word	0x4f1502f9
 8000d64:	4c989680 	.word	0x4c989680
 8000d68:	4b989680 	.word	0x4b989680
 8000d6c:	350637bd 	.word	0x350637bd
 8000d70:	0800a348 	.word	0x0800a348
 8000d74:	0800acb8 	.word	0x0800acb8
 8000d78:	49742400 	.word	0x49742400
 8000d7c:	200000ac 	.word	0x200000ac
 8000d80:	0800a378 	.word	0x0800a378
 8000d84:	0800a34c 	.word	0x0800a34c
 8000d88:	b55b38e8 	.word	0xb55b38e8
 8000d8c:	427c0000 	.word	0x427c0000

08000d90 <acc_confprogram_modify_runif>:
 8000d90:	b570      	push	{r4, r5, r6, lr}
 8000d92:	eb00 0442 	add.w	r4, r0, r2, lsl #1
 8000d96:	b082      	sub	sp, #8
 8000d98:	2201      	movs	r2, #1
 8000d9a:	460e      	mov	r6, r1
 8000d9c:	4620      	mov	r0, r4
 8000d9e:	a901      	add	r1, sp, #4
 8000da0:	461d      	mov	r5, r3
 8000da2:	f7ff fef7 	bl	8000b94 <acc_utils_transfer_buffer_to_uint32>
 8000da6:	9a01      	ldr	r2, [sp, #4]
 8000da8:	f022 020f 	bic.w	r2, r2, #15
 8000dac:	b105      	cbz	r5, 8000db0 <acc_confprogram_modify_runif+0x20>
 8000dae:	4332      	orrs	r2, r6
 8000db0:	9200      	str	r2, [sp, #0]
 8000db2:	4621      	mov	r1, r4
 8000db4:	2201      	movs	r2, #1
 8000db6:	4668      	mov	r0, sp
 8000db8:	f7ff fefe 	bl	8000bb8 <acc_confprogram_copy>
 8000dbc:	b002      	add	sp, #8
 8000dbe:	bd70      	pop	{r4, r5, r6, pc}

08000dc0 <acc_confprogram_patch_offset>:
 8000dc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000dc4:	b087      	sub	sp, #28
 8000dc6:	f8bd 7040 	ldrh.w	r7, [sp, #64]	; 0x40
 8000dca:	f8dd a044 	ldr.w	sl, [sp, #68]	; 0x44
 8000dce:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 8000dd2:	887b      	ldrh	r3, [r7, #2]
 8000dd4:	b383      	cbz	r3, 8000e38 <acc_confprogram_patch_offset+0x78>
 8000dd6:	4681      	mov	r9, r0
 8000dd8:	460e      	mov	r6, r1
 8000dda:	eb01 0802 	add.w	r8, r1, r2
 8000dde:	2500      	movs	r5, #0
 8000de0:	f04f 0b01 	mov.w	fp, #1
 8000de4:	687a      	ldr	r2, [r7, #4]
 8000de6:	f852 4025 	ldr.w	r4, [r2, r5, lsl #2]
 8000dea:	0062      	lsls	r2, r4, #1
 8000dec:	b292      	uxth	r2, r2
 8000dee:	42b2      	cmp	r2, r6
 8000df0:	f3c4 7001 	ubfx	r0, r4, #28, #2
 8000df4:	d31d      	bcc.n	8000e32 <acc_confprogram_patch_offset+0x72>
 8000df6:	4542      	cmp	r2, r8
 8000df8:	da1b      	bge.n	8000e32 <acc_confprogram_patch_offset+0x72>
 8000dfa:	2801      	cmp	r0, #1
 8000dfc:	d00c      	beq.n	8000e18 <acc_confprogram_patch_offset+0x58>
 8000dfe:	2802      	cmp	r0, #2
 8000e00:	d036      	beq.n	8000e70 <acc_confprogram_patch_offset+0xb0>
 8000e02:	b1e8      	cbz	r0, 8000e40 <acc_confprogram_patch_offset+0x80>
 8000e04:	4b34      	ldr	r3, [pc, #208]	; (8000ed8 <acc_confprogram_patch_offset+0x118>)
 8000e06:	4a35      	ldr	r2, [pc, #212]	; (8000edc <acc_confprogram_patch_offset+0x11c>)
 8000e08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000e0a:	4935      	ldr	r1, [pc, #212]	; (8000ee0 <acc_confprogram_patch_offset+0x120>)
 8000e0c:	2000      	movs	r0, #0
 8000e0e:	4798      	blx	r3
 8000e10:	2000      	movs	r0, #0
 8000e12:	b007      	add	sp, #28
 8000e14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e18:	f1ba 0300 	subs.w	r3, sl, #0
 8000e1c:	eba2 0206 	sub.w	r2, r2, r6
 8000e20:	bf18      	it	ne
 8000e22:	2301      	movne	r3, #1
 8000e24:	b292      	uxth	r2, r2
 8000e26:	f3c4 4103 	ubfx	r1, r4, #16, #4
 8000e2a:	4648      	mov	r0, r9
 8000e2c:	f7ff ffb0 	bl	8000d90 <acc_confprogram_modify_runif>
 8000e30:	887b      	ldrh	r3, [r7, #2]
 8000e32:	3501      	adds	r5, #1
 8000e34:	42ab      	cmp	r3, r5
 8000e36:	d8d5      	bhi.n	8000de4 <acc_confprogram_patch_offset+0x24>
 8000e38:	2001      	movs	r0, #1
 8000e3a:	b007      	add	sp, #28
 8000e3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e40:	f3c4 5344 	ubfx	r3, r4, #21, #5
 8000e44:	fa0b fc03 	lsl.w	ip, fp, r3
 8000e48:	1b92      	subs	r2, r2, r6
 8000e4a:	45e2      	cmp	sl, ip
 8000e4c:	b291      	uxth	r1, r2
 8000e4e:	d31e      	bcc.n	8000e8e <acc_confprogram_patch_offset+0xce>
 8000e50:	f10c 33ff 	add.w	r3, ip, #4294967295	; 0xffffffff
 8000e54:	4a20      	ldr	r2, [pc, #128]	; (8000ed8 <acc_confprogram_patch_offset+0x118>)
 8000e56:	9301      	str	r3, [sp, #4]
 8000e58:	f8cd a000 	str.w	sl, [sp]
 8000e5c:	6c14      	ldr	r4, [r2, #64]	; 0x40
 8000e5e:	4a21      	ldr	r2, [pc, #132]	; (8000ee4 <acc_confprogram_patch_offset+0x124>)
 8000e60:	9002      	str	r0, [sp, #8]
 8000e62:	460b      	mov	r3, r1
 8000e64:	491e      	ldr	r1, [pc, #120]	; (8000ee0 <acc_confprogram_patch_offset+0x120>)
 8000e66:	47a0      	blx	r4
 8000e68:	9802      	ldr	r0, [sp, #8]
 8000e6a:	b007      	add	sp, #28
 8000e6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e70:	1b92      	subs	r2, r2, r6
 8000e72:	faba f38a 	clz	r3, sl
 8000e76:	095b      	lsrs	r3, r3, #5
 8000e78:	b292      	uxth	r2, r2
 8000e7a:	f3c4 4103 	ubfx	r1, r4, #16, #4
 8000e7e:	4648      	mov	r0, r9
 8000e80:	f7ff ff86 	bl	8000d90 <acc_confprogram_modify_runif>
 8000e84:	887b      	ldrh	r3, [r7, #2]
 8000e86:	3501      	adds	r5, #1
 8000e88:	42ab      	cmp	r3, r5
 8000e8a:	d8ab      	bhi.n	8000de4 <acc_confprogram_patch_offset+0x24>
 8000e8c:	e7d4      	b.n	8000e38 <acc_confprogram_patch_offset+0x78>
 8000e8e:	eb09 0041 	add.w	r0, r9, r1, lsl #1
 8000e92:	2201      	movs	r2, #1
 8000e94:	a904      	add	r1, sp, #16
 8000e96:	9303      	str	r3, [sp, #12]
 8000e98:	9002      	str	r0, [sp, #8]
 8000e9a:	f7ff fe7b 	bl	8000b94 <acc_utils_transfer_buffer_to_uint32>
 8000e9e:	9b03      	ldr	r3, [sp, #12]
 8000ea0:	9802      	ldr	r0, [sp, #8]
 8000ea2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000ea6:	f1c3 0320 	rsb	r3, r3, #32
 8000eaa:	f3c4 4404 	ubfx	r4, r4, #16, #5
 8000eae:	fa22 f303 	lsr.w	r3, r2, r3
 8000eb2:	9a04      	ldr	r2, [sp, #16]
 8000eb4:	40a3      	lsls	r3, r4
 8000eb6:	ea22 0203 	bic.w	r2, r2, r3
 8000eba:	fa0a f404 	lsl.w	r4, sl, r4
 8000ebe:	4601      	mov	r1, r0
 8000ec0:	4314      	orrs	r4, r2
 8000ec2:	a805      	add	r0, sp, #20
 8000ec4:	2201      	movs	r2, #1
 8000ec6:	9405      	str	r4, [sp, #20]
 8000ec8:	f7ff fe76 	bl	8000bb8 <acc_confprogram_copy>
 8000ecc:	887b      	ldrh	r3, [r7, #2]
 8000ece:	3501      	adds	r5, #1
 8000ed0:	42ab      	cmp	r3, r5
 8000ed2:	d887      	bhi.n	8000de4 <acc_confprogram_patch_offset+0x24>
 8000ed4:	e7b0      	b.n	8000e38 <acc_confprogram_patch_offset+0x78>
 8000ed6:	bf00      	nop
 8000ed8:	200000ac 	.word	0x200000ac
 8000edc:	0800a3d0 	.word	0x0800a3d0
 8000ee0:	0800a3c4 	.word	0x0800a3c4
 8000ee4:	0800a38c 	.word	0x0800a38c

08000ee8 <acc_rss_integration_mem_free>:
 8000ee8:	b110      	cbz	r0, 8000ef0 <acc_rss_integration_mem_free+0x8>
 8000eea:	4b02      	ldr	r3, [pc, #8]	; (8000ef4 <acc_rss_integration_mem_free+0xc>)
 8000eec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000eee:	4718      	bx	r3
 8000ef0:	4770      	bx	lr
 8000ef2:	bf00      	nop
 8000ef4:	200000ac 	.word	0x200000ac

08000ef8 <acc_rss_integration_mem_alloc_debug>:
 8000ef8:	b538      	push	{r3, r4, r5, lr}
 8000efa:	4d06      	ldr	r5, [pc, #24]	; (8000f14 <acc_rss_integration_mem_alloc_debug+0x1c>)
 8000efc:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8000efe:	4798      	blx	r3
 8000f00:	4604      	mov	r4, r0
 8000f02:	b108      	cbz	r0, 8000f08 <acc_rss_integration_mem_alloc_debug+0x10>
 8000f04:	4620      	mov	r0, r4
 8000f06:	bd38      	pop	{r3, r4, r5, pc}
 8000f08:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8000f0a:	4a03      	ldr	r2, [pc, #12]	; (8000f18 <acc_rss_integration_mem_alloc_debug+0x20>)
 8000f0c:	4903      	ldr	r1, [pc, #12]	; (8000f1c <acc_rss_integration_mem_alloc_debug+0x24>)
 8000f0e:	4798      	blx	r3
 8000f10:	4620      	mov	r0, r4
 8000f12:	bd38      	pop	{r3, r4, r5, pc}
 8000f14:	200000ac 	.word	0x200000ac
 8000f18:	0800a3f4 	.word	0x0800a3f4
 8000f1c:	0800a404 	.word	0x0800a404

08000f20 <acc_rss_integration_sensor_device_transfer>:
 8000f20:	f8df c064 	ldr.w	ip, [pc, #100]	; 8000f88 <acc_rss_integration_sensor_device_transfer+0x68>
 8000f24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f28:	f8dc 5044 	ldr.w	r5, [ip, #68]	; 0x44
 8000f2c:	b11d      	cbz	r5, 8000f36 <acc_rss_integration_sensor_device_transfer+0x16>
 8000f2e:	462b      	mov	r3, r5
 8000f30:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f34:	4718      	bx	r3
 8000f36:	b312      	cbz	r2, 8000f7e <acc_rss_integration_sensor_device_transfer+0x5e>
 8000f38:	0052      	lsls	r2, r2, #1
 8000f3a:	f1a1 0802 	sub.w	r8, r1, #2
 8000f3e:	f1a2 0902 	sub.w	r9, r2, #2
 8000f42:	460e      	mov	r6, r1
 8000f44:	469a      	mov	sl, r3
 8000f46:	4607      	mov	r7, r0
 8000f48:	4449      	add	r1, r9
 8000f4a:	4644      	mov	r4, r8
 8000f4c:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 8000f50:	ba6d      	rev16	r5, r5
 8000f52:	428c      	cmp	r4, r1
 8000f54:	8025      	strh	r5, [r4, #0]
 8000f56:	d1f9      	bne.n	8000f4c <acc_rss_integration_sensor_device_transfer+0x2c>
 8000f58:	f8dc 403c 	ldr.w	r4, [ip, #60]	; 0x3c
 8000f5c:	4638      	mov	r0, r7
 8000f5e:	4631      	mov	r1, r6
 8000f60:	47a0      	blx	r4
 8000f62:	f1ba 0f00 	cmp.w	sl, #0
 8000f66:	d101      	bne.n	8000f6c <acc_rss_integration_sensor_device_transfer+0x4c>
 8000f68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f6c:	444e      	add	r6, r9
 8000f6e:	f838 3f02 	ldrh.w	r3, [r8, #2]!
 8000f72:	ba5b      	rev16	r3, r3
 8000f74:	45b0      	cmp	r8, r6
 8000f76:	f8a8 3000 	strh.w	r3, [r8]
 8000f7a:	d1f8      	bne.n	8000f6e <acc_rss_integration_sensor_device_transfer+0x4e>
 8000f7c:	e7f4      	b.n	8000f68 <acc_rss_integration_sensor_device_transfer+0x48>
 8000f7e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f82:	f8dc 303c 	ldr.w	r3, [ip, #60]	; 0x3c
 8000f86:	4718      	bx	r3
 8000f88:	200000ac 	.word	0x200000ac

08000f8c <acc_sensor_a121_conf_write_instr>:
 8000f8c:	b570      	push	{r4, r5, r6, lr}
 8000f8e:	2501      	movs	r5, #1
 8000f90:	b084      	sub	sp, #16
 8000f92:	f441 43a0 	orr.w	r3, r1, #20480	; 0x5000
 8000f96:	4604      	mov	r4, r0
 8000f98:	4616      	mov	r6, r2
 8000f9a:	a903      	add	r1, sp, #12
 8000f9c:	462a      	mov	r2, r5
 8000f9e:	a801      	add	r0, sp, #4
 8000fa0:	f8ad 3008 	strh.w	r3, [sp, #8]
 8000fa4:	9601      	str	r6, [sp, #4]
 8000fa6:	f8ad 500a 	strh.w	r5, [sp, #10]
 8000faa:	f7ff fe05 	bl	8000bb8 <acc_confprogram_copy>
 8000fae:	4620      	mov	r0, r4
 8000fb0:	a902      	add	r1, sp, #8
 8000fb2:	2300      	movs	r3, #0
 8000fb4:	2204      	movs	r2, #4
 8000fb6:	f7ff ffb3 	bl	8000f20 <acc_rss_integration_sensor_device_transfer>
 8000fba:	b004      	add	sp, #16
 8000fbc:	bd70      	pop	{r4, r5, r6, pc}
 8000fbe:	bf00      	nop

08000fc0 <acc_sensor_a121_buffer_write.constprop.0>:
 8000fc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000fc4:	4c1d      	ldr	r4, [pc, #116]	; (800103c <acc_sensor_a121_buffer_write.constprop.0+0x7c>)
 8000fc6:	8e24      	ldrh	r4, [r4, #48]	; 0x30
 8000fc8:	b085      	sub	sp, #20
 8000fca:	3c06      	subs	r4, #6
 8000fcc:	9202      	str	r2, [sp, #8]
 8000fce:	08a2      	lsrs	r2, r4, #2
 8000fd0:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
 8000fd4:	9201      	str	r2, [sp, #4]
 8000fd6:	9303      	str	r3, [sp, #12]
 8000fd8:	b363      	cbz	r3, 8001034 <acc_sensor_a121_buffer_write.constprop.0+0x74>
 8000fda:	4682      	mov	sl, r0
 8000fdc:	460f      	mov	r7, r1
 8000fde:	f101 0b06 	add.w	fp, r1, #6
 8000fe2:	4699      	mov	r9, r3
 8000fe4:	2500      	movs	r5, #0
 8000fe6:	9b01      	ldr	r3, [sp, #4]
 8000fe8:	807d      	strh	r5, [r7, #2]
 8000fea:	454b      	cmp	r3, r9
 8000fec:	bf28      	it	cs
 8000fee:	464b      	movcs	r3, r9
 8000ff0:	005c      	lsls	r4, r3, #1
 8000ff2:	461e      	mov	r6, r3
 8000ff4:	1e63      	subs	r3, r4, #1
 8000ff6:	80bb      	strh	r3, [r7, #4]
 8000ff8:	9b02      	ldr	r3, [sp, #8]
 8000ffa:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000ffe:	eb03 0085 	add.w	r0, r3, r5, lsl #2
 8001002:	803a      	strh	r2, [r7, #0]
 8001004:	3403      	adds	r4, #3
 8001006:	4632      	mov	r2, r6
 8001008:	4659      	mov	r1, fp
 800100a:	f7ff fdd5 	bl	8000bb8 <acc_confprogram_copy>
 800100e:	4622      	mov	r2, r4
 8001010:	2300      	movs	r3, #0
 8001012:	4639      	mov	r1, r7
 8001014:	4650      	mov	r0, sl
 8001016:	f7ff ff83 	bl	8000f20 <acc_rss_integration_sensor_device_transfer>
 800101a:	e9d8 2300 	ldrd	r2, r3, [r8]
 800101e:	3301      	adds	r3, #1
 8001020:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8001024:	e9c8 4300 	strd	r4, r3, [r8]
 8001028:	9b03      	ldr	r3, [sp, #12]
 800102a:	4435      	add	r5, r6
 800102c:	429d      	cmp	r5, r3
 800102e:	eba9 0906 	sub.w	r9, r9, r6
 8001032:	d3d8      	bcc.n	8000fe6 <acc_sensor_a121_buffer_write.constprop.0+0x26>
 8001034:	b005      	add	sp, #20
 8001036:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800103a:	bf00      	nop
 800103c:	200000ac 	.word	0x200000ac

08001040 <acc_sensor_reg_field_write>:
 8001040:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001044:	b082      	sub	sp, #8
 8001046:	461d      	mov	r5, r3
 8001048:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 800104c:	f8bd 4028 	ldrh.w	r4, [sp, #40]	; 0x28
 8001050:	f8ad 3000 	strh.w	r3, [sp]
 8001054:	2700      	movs	r7, #0
 8001056:	468a      	mov	sl, r1
 8001058:	4691      	mov	r9, r2
 800105a:	4669      	mov	r1, sp
 800105c:	2301      	movs	r3, #1
 800105e:	2203      	movs	r2, #3
 8001060:	4680      	mov	r8, r0
 8001062:	f8ad 7002 	strh.w	r7, [sp, #2]
 8001066:	f8ad 7004 	strh.w	r7, [sp, #4]
 800106a:	f7ff ff59 	bl	8000f20 <acc_rss_integration_sensor_device_transfer>
 800106e:	f9bd 6004 	ldrsh.w	r6, [sp, #4]
 8001072:	fa04 f10a 	lsl.w	r1, r4, sl
 8001076:	4071      	eors	r1, r6
 8001078:	ea01 0409 	and.w	r4, r1, r9
 800107c:	f445 5580 	orr.w	r5, r5, #4096	; 0x1000
 8001080:	4640      	mov	r0, r8
 8001082:	463b      	mov	r3, r7
 8001084:	4669      	mov	r1, sp
 8001086:	4074      	eors	r4, r6
 8001088:	2202      	movs	r2, #2
 800108a:	f8ad 5000 	strh.w	r5, [sp]
 800108e:	f8ad 4002 	strh.w	r4, [sp, #2]
 8001092:	f7ff ff45 	bl	8000f20 <acc_rss_integration_sensor_device_transfer>
 8001096:	b002      	add	sp, #8
 8001098:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800109c <acc_sensor_protocol_a121_init_interrupts>:
 800109c:	b530      	push	{r4, r5, lr}
 800109e:	b083      	sub	sp, #12
 80010a0:	2500      	movs	r5, #0
 80010a2:	4629      	mov	r1, r5
 80010a4:	9500      	str	r5, [sp, #0]
 80010a6:	237b      	movs	r3, #123	; 0x7b
 80010a8:	22ff      	movs	r2, #255	; 0xff
 80010aa:	4604      	mov	r4, r0
 80010ac:	f7ff ffc8 	bl	8001040 <acc_sensor_reg_field_write>
 80010b0:	2101      	movs	r1, #1
 80010b2:	4620      	mov	r0, r4
 80010b4:	9100      	str	r1, [sp, #0]
 80010b6:	238b      	movs	r3, #139	; 0x8b
 80010b8:	2202      	movs	r2, #2
 80010ba:	f7ff ffc1 	bl	8001040 <acc_sensor_reg_field_write>
 80010be:	9500      	str	r5, [sp, #0]
 80010c0:	4620      	mov	r0, r4
 80010c2:	238b      	movs	r3, #139	; 0x8b
 80010c4:	2280      	movs	r2, #128	; 0x80
 80010c6:	2107      	movs	r1, #7
 80010c8:	f7ff ffba 	bl	8001040 <acc_sensor_reg_field_write>
 80010cc:	b003      	add	sp, #12
 80010ce:	bd30      	pop	{r4, r5, pc}

080010d0 <acc_sensor_reg_write>:
 80010d0:	b530      	push	{r4, r5, lr}
 80010d2:	b083      	sub	sp, #12
 80010d4:	f441 5480 	orr.w	r4, r1, #4096	; 0x1000
 80010d8:	4615      	mov	r5, r2
 80010da:	2300      	movs	r3, #0
 80010dc:	2202      	movs	r2, #2
 80010de:	a901      	add	r1, sp, #4
 80010e0:	f8ad 4004 	strh.w	r4, [sp, #4]
 80010e4:	f8ad 5006 	strh.w	r5, [sp, #6]
 80010e8:	f7ff ff1a 	bl	8000f20 <acc_rss_integration_sensor_device_transfer>
 80010ec:	b003      	add	sp, #12
 80010ee:	bd30      	pop	{r4, r5, pc}

080010f0 <acc_sensor_reg_read>:
 80010f0:	b530      	push	{r4, r5, lr}
 80010f2:	b083      	sub	sp, #12
 80010f4:	f441 5140 	orr.w	r1, r1, #12288	; 0x3000
 80010f8:	4614      	mov	r4, r2
 80010fa:	2500      	movs	r5, #0
 80010fc:	f8ad 1000 	strh.w	r1, [sp]
 8001100:	2301      	movs	r3, #1
 8001102:	2203      	movs	r2, #3
 8001104:	4669      	mov	r1, sp
 8001106:	f8ad 5002 	strh.w	r5, [sp, #2]
 800110a:	f8ad 5004 	strh.w	r5, [sp, #4]
 800110e:	f7ff ff07 	bl	8000f20 <acc_rss_integration_sensor_device_transfer>
 8001112:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001116:	8023      	strh	r3, [r4, #0]
 8001118:	b003      	add	sp, #12
 800111a:	bd30      	pop	{r4, r5, pc}

0800111c <acc_sensor_protocol_a121_run_program>:
 800111c:	b570      	push	{r4, r5, r6, lr}
 800111e:	b082      	sub	sp, #8
 8001120:	f10d 0206 	add.w	r2, sp, #6
 8001124:	460e      	mov	r6, r1
 8001126:	2400      	movs	r4, #0
 8001128:	211c      	movs	r1, #28
 800112a:	4605      	mov	r5, r0
 800112c:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001130:	f7ff ffde 	bl	80010f0 <acc_sensor_reg_read>
 8001134:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8001138:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800113c:	d10c      	bne.n	8001158 <acc_sensor_protocol_a121_run_program+0x3c>
 800113e:	4628      	mov	r0, r5
 8001140:	211b      	movs	r1, #27
 8001142:	f7ff ffc5 	bl	80010d0 <acc_sensor_reg_write>
 8001146:	4628      	mov	r0, r5
 8001148:	f446 6200 	orr.w	r2, r6, #2048	; 0x800
 800114c:	211b      	movs	r1, #27
 800114e:	f7ff ffbf 	bl	80010d0 <acc_sensor_reg_write>
 8001152:	2001      	movs	r0, #1
 8001154:	b002      	add	sp, #8
 8001156:	bd70      	pop	{r4, r5, r6, pc}
 8001158:	4b04      	ldr	r3, [pc, #16]	; (800116c <acc_sensor_protocol_a121_run_program+0x50>)
 800115a:	4a05      	ldr	r2, [pc, #20]	; (8001170 <acc_sensor_protocol_a121_run_program+0x54>)
 800115c:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 800115e:	4905      	ldr	r1, [pc, #20]	; (8001174 <acc_sensor_protocol_a121_run_program+0x58>)
 8001160:	4620      	mov	r0, r4
 8001162:	462b      	mov	r3, r5
 8001164:	47b0      	blx	r6
 8001166:	4620      	mov	r0, r4
 8001168:	b002      	add	sp, #8
 800116a:	bd70      	pop	{r4, r5, r6, pc}
 800116c:	200000ac 	.word	0x200000ac
 8001170:	0800a414 	.word	0x0800a414
 8001174:	0800a444 	.word	0x0800a444

08001178 <acc_sensor_protocol_a121_prepare_load>:
 8001178:	b570      	push	{r4, r5, r6, lr}
 800117a:	b082      	sub	sp, #8
 800117c:	f10d 0206 	add.w	r2, sp, #6
 8001180:	2400      	movs	r4, #0
 8001182:	2137      	movs	r1, #55	; 0x37
 8001184:	4605      	mov	r5, r0
 8001186:	f8ad 4006 	strh.w	r4, [sp, #6]
 800118a:	f7ff ffb1 	bl	80010f0 <acc_sensor_reg_read>
 800118e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001192:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 8001196:	b9b3      	cbnz	r3, 80011c6 <acc_sensor_protocol_a121_prepare_load+0x4e>
 8001198:	f10d 0206 	add.w	r2, sp, #6
 800119c:	2400      	movs	r4, #0
 800119e:	211c      	movs	r1, #28
 80011a0:	4628      	mov	r0, r5
 80011a2:	f8ad 4006 	strh.w	r4, [sp, #6]
 80011a6:	f7ff ffa3 	bl	80010f0 <acc_sensor_reg_read>
 80011aa:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80011ae:	051b      	lsls	r3, r3, #20
 80011b0:	d515      	bpl.n	80011de <acc_sensor_protocol_a121_prepare_load+0x66>
 80011b2:	4b0e      	ldr	r3, [pc, #56]	; (80011ec <acc_sensor_protocol_a121_prepare_load+0x74>)
 80011b4:	4a0e      	ldr	r2, [pc, #56]	; (80011f0 <acc_sensor_protocol_a121_prepare_load+0x78>)
 80011b6:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 80011b8:	490e      	ldr	r1, [pc, #56]	; (80011f4 <acc_sensor_protocol_a121_prepare_load+0x7c>)
 80011ba:	4620      	mov	r0, r4
 80011bc:	462b      	mov	r3, r5
 80011be:	47b0      	blx	r6
 80011c0:	4620      	mov	r0, r4
 80011c2:	b002      	add	sp, #8
 80011c4:	bd70      	pop	{r4, r5, r6, pc}
 80011c6:	4b09      	ldr	r3, [pc, #36]	; (80011ec <acc_sensor_protocol_a121_prepare_load+0x74>)
 80011c8:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 80011cc:	2a00      	cmp	r2, #0
 80011ce:	d0e3      	beq.n	8001198 <acc_sensor_protocol_a121_prepare_load+0x20>
 80011d0:	6c1c      	ldr	r4, [r3, #64]	; 0x40
 80011d2:	4a09      	ldr	r2, [pc, #36]	; (80011f8 <acc_sensor_protocol_a121_prepare_load+0x80>)
 80011d4:	4907      	ldr	r1, [pc, #28]	; (80011f4 <acc_sensor_protocol_a121_prepare_load+0x7c>)
 80011d6:	462b      	mov	r3, r5
 80011d8:	2001      	movs	r0, #1
 80011da:	47a0      	blx	r4
 80011dc:	e7dc      	b.n	8001198 <acc_sensor_protocol_a121_prepare_load+0x20>
 80011de:	4628      	mov	r0, r5
 80011e0:	f7ff ff5c 	bl	800109c <acc_sensor_protocol_a121_init_interrupts>
 80011e4:	2001      	movs	r0, #1
 80011e6:	b002      	add	sp, #8
 80011e8:	bd70      	pop	{r4, r5, r6, pc}
 80011ea:	bf00      	nop
 80011ec:	200000ac 	.word	0x200000ac
 80011f0:	0800a488 	.word	0x0800a488
 80011f4:	0800a444 	.word	0x0800a444
 80011f8:	0800a45c 	.word	0x0800a45c

080011fc <acc_sensor_a121_load_confmem>:
 80011fc:	b4f0      	push	{r4, r5, r6, r7}
 80011fe:	4d0c      	ldr	r5, [pc, #48]	; (8001230 <acc_sensor_a121_load_confmem+0x34>)
 8001200:	8e2f      	ldrh	r7, [r5, #48]	; 0x30
 8001202:	1c9e      	adds	r6, r3, #2
 8001204:	ebb7 0f46 	cmp.w	r7, r6, lsl #1
 8001208:	d205      	bcs.n	8001216 <acc_sensor_a121_load_confmem+0x1a>
 800120a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800120c:	4a09      	ldr	r2, [pc, #36]	; (8001234 <acc_sensor_a121_load_confmem+0x38>)
 800120e:	490a      	ldr	r1, [pc, #40]	; (8001238 <acc_sensor_a121_load_confmem+0x3c>)
 8001210:	bcf0      	pop	{r4, r5, r6, r7}
 8001212:	2000      	movs	r0, #0
 8001214:	4718      	bx	r3
 8001216:	4614      	mov	r4, r2
 8001218:	f441 41a0 	orr.w	r1, r1, #20480	; 0x5000
 800121c:	3b01      	subs	r3, #1
 800121e:	8011      	strh	r1, [r2, #0]
 8001220:	8053      	strh	r3, [r2, #2]
 8001222:	4621      	mov	r1, r4
 8001224:	f026 4200 	bic.w	r2, r6, #2147483648	; 0x80000000
 8001228:	2300      	movs	r3, #0
 800122a:	bcf0      	pop	{r4, r5, r6, r7}
 800122c:	e678      	b.n	8000f20 <acc_rss_integration_sensor_device_transfer>
 800122e:	bf00      	nop
 8001230:	200000ac 	.word	0x200000ac
 8001234:	0800a4b8 	.word	0x0800a4b8
 8001238:	0800a4d8 	.word	0x0800a4d8

0800123c <acc_cpd_assembly_test_load_program>:
 800123c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001240:	f8df a1ac 	ldr.w	sl, [pc, #428]	; 80013f0 <acc_cpd_assembly_test_load_program+0x1b4>
 8001244:	b091      	sub	sp, #68	; 0x44
 8001246:	f8ba 7030 	ldrh.w	r7, [sl, #48]	; 0x30
 800124a:	9104      	str	r1, [sp, #16]
 800124c:	4615      	mov	r5, r2
 800124e:	461e      	mov	r6, r3
 8001250:	9007      	str	r0, [sp, #28]
 8001252:	f7ff ff91 	bl	8001178 <acc_sensor_protocol_a121_prepare_load>
 8001256:	4604      	mov	r4, r0
 8001258:	b918      	cbnz	r0, 8001262 <acc_cpd_assembly_test_load_program+0x26>
 800125a:	4620      	mov	r0, r4
 800125c:	b011      	add	sp, #68	; 0x44
 800125e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001262:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 8001266:	2b03      	cmp	r3, #3
 8001268:	d905      	bls.n	8001276 <acc_cpd_assembly_test_load_program+0x3a>
 800126a:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 800126e:	4a5b      	ldr	r2, [pc, #364]	; (80013dc <acc_cpd_assembly_test_load_program+0x1a0>)
 8001270:	495b      	ldr	r1, [pc, #364]	; (80013e0 <acc_cpd_assembly_test_load_program+0x1a4>)
 8001272:	2004      	movs	r0, #4
 8001274:	4798      	blx	r3
 8001276:	edd6 7a00 	vldr	s15, [r6]
 800127a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800127e:	a90d      	add	r1, sp, #52	; 0x34
 8001280:	a80c      	add	r0, sp, #48	; 0x30
 8001282:	edcd 7a0c 	vstr	s15, [sp, #48]	; 0x30
 8001286:	f7ff fca5 	bl	8000bd4 <acc_cpd_pll_divisors_calculate>
 800128a:	4604      	mov	r4, r0
 800128c:	2800      	cmp	r0, #0
 800128e:	d0e4      	beq.n	800125a <acc_cpd_assembly_test_load_program+0x1e>
 8001290:	6833      	ldr	r3, [r6, #0]
 8001292:	4a54      	ldr	r2, [pc, #336]	; (80013e4 <acc_cpd_assembly_test_load_program+0x1a8>)
 8001294:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8001298:	9108      	str	r1, [sp, #32]
 800129a:	fba2 2303 	umull	r2, r3, r2, r3
 800129e:	0c9b      	lsrs	r3, r3, #18
 80012a0:	086d      	lsrs	r5, r5, #1
 80012a2:	087f      	lsrs	r7, r7, #1
 80012a4:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80012a8:	42bd      	cmp	r5, r7
 80012aa:	9305      	str	r3, [sp, #20]
 80012ac:	4b4e      	ldr	r3, [pc, #312]	; (80013e8 <acc_cpd_assembly_test_load_program+0x1ac>)
 80012ae:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80012b2:	9109      	str	r1, [sp, #36]	; 0x24
 80012b4:	bf28      	it	cs
 80012b6:	463d      	movcs	r5, r7
 80012b8:	f8bd 103a 	ldrh.w	r1, [sp, #58]	; 0x3a
 80012bc:	910a      	str	r1, [sp, #40]	; 0x28
 80012be:	3d02      	subs	r5, #2
 80012c0:	f603 3834 	addw	r8, r3, #2868	; 0xb34
 80012c4:	9b04      	ldr	r3, [sp, #16]
 80012c6:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80012ca:	910b      	str	r1, [sp, #44]	; 0x2c
 80012cc:	f025 0201 	bic.w	r2, r5, #1
 80012d0:	f240 579a 	movw	r7, #1434	; 0x59a
 80012d4:	9206      	str	r2, [sp, #24]
 80012d6:	fa1f fb82 	uxth.w	fp, r2
 80012da:	1d1e      	adds	r6, r3, #4
 80012dc:	2500      	movs	r5, #0
 80012de:	9703      	str	r7, [sp, #12]
 80012e0:	9b06      	ldr	r3, [sp, #24]
 80012e2:	9a03      	ldr	r2, [sp, #12]
 80012e4:	f5c5 69b3 	rsb	r9, r5, #1432	; 0x598
 80012e8:	f109 0902 	add.w	r9, r9, #2
 80012ec:	454b      	cmp	r3, r9
 80012ee:	bf98      	it	ls
 80012f0:	465a      	movls	r2, fp
 80012f2:	4b3d      	ldr	r3, [pc, #244]	; (80013e8 <acc_cpd_assembly_test_load_program+0x1ac>)
 80012f4:	086c      	lsrs	r4, r5, #1
 80012f6:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 80012fa:	4691      	mov	r9, r2
 80012fc:	4631      	mov	r1, r6
 80012fe:	0852      	lsrs	r2, r2, #1
 8001300:	f7ff fc5a 	bl	8000bb8 <acc_confprogram_copy>
 8001304:	9b05      	ldr	r3, [sp, #20]
 8001306:	9301      	str	r3, [sp, #4]
 8001308:	231a      	movs	r3, #26
 800130a:	9300      	str	r3, [sp, #0]
 800130c:	464a      	mov	r2, r9
 800130e:	4643      	mov	r3, r8
 8001310:	4629      	mov	r1, r5
 8001312:	4630      	mov	r0, r6
 8001314:	f7ff fd54 	bl	8000dc0 <acc_confprogram_patch_offset>
 8001318:	b958      	cbnz	r0, 8001332 <acc_cpd_assembly_test_load_program+0xf6>
 800131a:	2400      	movs	r4, #0
 800131c:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 8001320:	2b03      	cmp	r3, #3
 8001322:	d99a      	bls.n	800125a <acc_cpd_assembly_test_load_program+0x1e>
 8001324:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8001328:	4a30      	ldr	r2, [pc, #192]	; (80013ec <acc_cpd_assembly_test_load_program+0x1b0>)
 800132a:	492d      	ldr	r1, [pc, #180]	; (80013e0 <acc_cpd_assembly_test_load_program+0x1a4>)
 800132c:	2004      	movs	r0, #4
 800132e:	4798      	blx	r3
 8001330:	e793      	b.n	800125a <acc_cpd_assembly_test_load_program+0x1e>
 8001332:	9a08      	ldr	r2, [sp, #32]
 8001334:	2313      	movs	r3, #19
 8001336:	e9cd 3200 	strd	r3, r2, [sp]
 800133a:	4629      	mov	r1, r5
 800133c:	4643      	mov	r3, r8
 800133e:	464a      	mov	r2, r9
 8001340:	4630      	mov	r0, r6
 8001342:	f7ff fd3d 	bl	8000dc0 <acc_confprogram_patch_offset>
 8001346:	4686      	mov	lr, r0
 8001348:	f04f 0c11 	mov.w	ip, #17
 800134c:	4643      	mov	r3, r8
 800134e:	464a      	mov	r2, r9
 8001350:	4629      	mov	r1, r5
 8001352:	4630      	mov	r0, r6
 8001354:	f1be 0f00 	cmp.w	lr, #0
 8001358:	d0df      	beq.n	800131a <acc_cpd_assembly_test_load_program+0xde>
 800135a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800135c:	e9cd c700 	strd	ip, r7, [sp]
 8001360:	f7ff fd2e 	bl	8000dc0 <acc_confprogram_patch_offset>
 8001364:	4686      	mov	lr, r0
 8001366:	f04f 0c12 	mov.w	ip, #18
 800136a:	4643      	mov	r3, r8
 800136c:	464a      	mov	r2, r9
 800136e:	4629      	mov	r1, r5
 8001370:	4630      	mov	r0, r6
 8001372:	f1be 0f00 	cmp.w	lr, #0
 8001376:	d0d0      	beq.n	800131a <acc_cpd_assembly_test_load_program+0xde>
 8001378:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800137a:	e9cd c700 	strd	ip, r7, [sp]
 800137e:	f7ff fd1f 	bl	8000dc0 <acc_confprogram_patch_offset>
 8001382:	4686      	mov	lr, r0
 8001384:	f04f 0c10 	mov.w	ip, #16
 8001388:	4643      	mov	r3, r8
 800138a:	464a      	mov	r2, r9
 800138c:	4629      	mov	r1, r5
 800138e:	4630      	mov	r0, r6
 8001390:	f1be 0f00 	cmp.w	lr, #0
 8001394:	d0c1      	beq.n	800131a <acc_cpd_assembly_test_load_program+0xde>
 8001396:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8001398:	e9cd c700 	strd	ip, r7, [sp]
 800139c:	f7ff fd10 	bl	8000dc0 <acc_confprogram_patch_offset>
 80013a0:	4684      	mov	ip, r0
 80013a2:	4621      	mov	r1, r4
 80013a4:	4664      	mov	r4, ip
 80013a6:	9a04      	ldr	r2, [sp, #16]
 80013a8:	9807      	ldr	r0, [sp, #28]
 80013aa:	464b      	mov	r3, r9
 80013ac:	b16c      	cbz	r4, 80013ca <acc_cpd_assembly_test_load_program+0x18e>
 80013ae:	445d      	add	r5, fp
 80013b0:	f7ff ff24 	bl	80011fc <acc_sensor_a121_load_confmem>
 80013b4:	b2ad      	uxth	r5, r5
 80013b6:	f240 5399 	movw	r3, #1433	; 0x599
 80013ba:	429d      	cmp	r5, r3
 80013bc:	9b03      	ldr	r3, [sp, #12]
 80013be:	eba3 070b 	sub.w	r7, r3, fp
 80013c2:	d8ab      	bhi.n	800131c <acc_cpd_assembly_test_load_program+0xe0>
 80013c4:	b2bb      	uxth	r3, r7
 80013c6:	9303      	str	r3, [sp, #12]
 80013c8:	e78a      	b.n	80012e0 <acc_cpd_assembly_test_load_program+0xa4>
 80013ca:	eb0b 0305 	add.w	r3, fp, r5
 80013ce:	b29b      	uxth	r3, r3
 80013d0:	f240 5299 	movw	r2, #1433	; 0x599
 80013d4:	4293      	cmp	r3, r2
 80013d6:	d9a0      	bls.n	800131a <acc_cpd_assembly_test_load_program+0xde>
 80013d8:	e7a0      	b.n	800131c <acc_cpd_assembly_test_load_program+0xe0>
 80013da:	bf00      	nop
 80013dc:	0800a4ec 	.word	0x0800a4ec
 80013e0:	0800a51c 	.word	0x0800a51c
 80013e4:	431bde83 	.word	0x431bde83
 80013e8:	080079a8 	.word	0x080079a8
 80013ec:	0800a530 	.word	0x0800a530
 80013f0:	200000ac 	.word	0x200000ac

080013f4 <least_sqr_fit>:
 80013f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80013f8:	eb02 0c42 	add.w	ip, r2, r2, lsl #1
 80013fc:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
 8001400:	b08d      	sub	sp, #52	; 0x34
 8001402:	2600      	movs	r6, #0
 8001404:	4683      	mov	fp, r0
 8001406:	4682      	mov	sl, r0
 8001408:	4680      	mov	r8, r0
 800140a:	4667      	mov	r7, ip
 800140c:	46b1      	mov	r9, r6
 800140e:	a803      	add	r0, sp, #12
 8001410:	ea4f 0589 	mov.w	r5, r9, lsl #2
 8001414:	4686      	mov	lr, r0
 8001416:	ed9f 7a57 	vldr	s14, [pc, #348]	; 8001574 <least_sqr_fit+0x180>
 800141a:	4643      	mov	r3, r8
 800141c:	b16a      	cbz	r2, 800143a <least_sqr_fit+0x46>
 800141e:	199c      	adds	r4, r3, r6
 8001420:	442c      	add	r4, r5
 8001422:	edd4 7a00 	vldr	s15, [r4]
 8001426:	461c      	mov	r4, r3
 8001428:	edd4 6a00 	vldr	s13, [r4]
 800142c:	330c      	adds	r3, #12
 800142e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8001432:	42bb      	cmp	r3, r7
 8001434:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001438:	d1f1      	bne.n	800141e <least_sqr_fit+0x2a>
 800143a:	3504      	adds	r5, #4
 800143c:	2d0c      	cmp	r5, #12
 800143e:	ecae 7a01 	vstmia	lr!, {s14}
 8001442:	d1e8      	bne.n	8001416 <least_sqr_fit+0x22>
 8001444:	f109 0901 	add.w	r9, r9, #1
 8001448:	f1b9 0f03 	cmp.w	r9, #3
 800144c:	f100 0010 	add.w	r0, r0, #16
 8001450:	f108 0804 	add.w	r8, r8, #4
 8001454:	f1a6 0604 	sub.w	r6, r6, #4
 8001458:	f107 0704 	add.w	r7, r7, #4
 800145c:	d1d8      	bne.n	8001410 <least_sqr_fit+0x1c>
 800145e:	ed9d 6a04 	vldr	s12, [sp, #16]
 8001462:	eddd 5a05 	vldr	s11, [sp, #20]
 8001466:	eddd 6a08 	vldr	s13, [sp, #32]
 800146a:	4668      	mov	r0, sp
 800146c:	f10b 040c 	add.w	r4, fp, #12
 8001470:	eddf 7a40 	vldr	s15, [pc, #256]	; 8001574 <least_sqr_fit+0x180>
 8001474:	4653      	mov	r3, sl
 8001476:	b13a      	cbz	r2, 8001488 <least_sqr_fit+0x94>
 8001478:	461d      	mov	r5, r3
 800147a:	ed95 7a00 	vldr	s14, [r5]
 800147e:	330c      	adds	r3, #12
 8001480:	4563      	cmp	r3, ip
 8001482:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001486:	d1f7      	bne.n	8001478 <least_sqr_fit+0x84>
 8001488:	f10a 0a04 	add.w	sl, sl, #4
 800148c:	45a2      	cmp	sl, r4
 800148e:	ece0 7a01 	vstmia	r0!, {s15}
 8001492:	f10c 0c04 	add.w	ip, ip, #4
 8001496:	d1eb      	bne.n	8001470 <least_sqr_fit+0x7c>
 8001498:	eddd 7a03 	vldr	s15, [sp, #12]
 800149c:	eef5 7a40 	vcmp.f32	s15, #0.0
 80014a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80014a4:	d010      	beq.n	80014c8 <least_sqr_fit+0xd4>
 80014a6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80014aa:	ee87 4a27 	vdiv.f32	s8, s14, s15
 80014ae:	eddd 7a07 	vldr	s15, [sp, #28]
 80014b2:	ee66 4a04 	vmul.f32	s9, s12, s8
 80014b6:	ee26 5a24 	vmul.f32	s10, s12, s9
 80014ba:	ee77 7ac5 	vsub.f32	s15, s15, s10
 80014be:	eef5 7a40 	vcmp.f32	s15, #0.0
 80014c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80014c6:	d106      	bne.n	80014d6 <least_sqr_fit+0xe2>
 80014c8:	2000      	movs	r0, #0
 80014ca:	2300      	movs	r3, #0
 80014cc:	f8cb 3000 	str.w	r3, [fp]
 80014d0:	b00d      	add	sp, #52	; 0x34
 80014d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80014d6:	eec7 2a27 	vdiv.f32	s5, s14, s15
 80014da:	ee65 3a84 	vmul.f32	s7, s11, s8
 80014de:	ee25 7aa4 	vmul.f32	s14, s11, s9
 80014e2:	ee66 7a23 	vmul.f32	s15, s12, s7
 80014e6:	ed9d 5a0b 	vldr	s10, [sp, #44]	; 0x2c
 80014ea:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80014ee:	ee36 7ac7 	vsub.f32	s14, s13, s14
 80014f2:	ee67 7aa2 	vmul.f32	s15, s15, s5
 80014f6:	ee65 6aa3 	vmul.f32	s13, s11, s7
 80014fa:	ee75 6a66 	vsub.f32	s13, s10, s13
 80014fe:	ee27 5a27 	vmul.f32	s10, s14, s15
 8001502:	ee76 6ac5 	vsub.f32	s13, s13, s10
 8001506:	eef5 6a40 	vcmp.f32	s13, #0.0
 800150a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800150e:	d0db      	beq.n	80014c8 <least_sqr_fit+0xd4>
 8001510:	ed9d 5a00 	vldr	s10, [sp]
 8001514:	ed9d 3a01 	vldr	s6, [sp, #4]
 8001518:	ed9d 2a02 	vldr	s4, [sp, #8]
 800151c:	ee64 4a85 	vmul.f32	s9, s9, s10
 8001520:	ee63 3a85 	vmul.f32	s7, s7, s10
 8001524:	ee73 4a64 	vsub.f32	s9, s6, s9
 8001528:	2001      	movs	r0, #1
 800152a:	ee67 7aa4 	vmul.f32	s15, s15, s9
 800152e:	2300      	movs	r3, #0
 8001530:	ee72 7a67 	vsub.f32	s15, s4, s15
 8001534:	ee77 3ae3 	vsub.f32	s7, s15, s7
 8001538:	eec3 7aa6 	vdiv.f32	s15, s7, s13
 800153c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001540:	edc1 7a02 	vstr	s15, [r1, #8]
 8001544:	ee34 7ac7 	vsub.f32	s14, s9, s14
 8001548:	ee65 5aa7 	vmul.f32	s11, s11, s15
 800154c:	ee67 7a22 	vmul.f32	s15, s14, s5
 8001550:	ee26 6a27 	vmul.f32	s12, s12, s15
 8001554:	edc1 7a01 	vstr	s15, [r1, #4]
 8001558:	ee35 6a46 	vsub.f32	s12, s10, s12
 800155c:	ee76 5a65 	vsub.f32	s11, s12, s11
 8001560:	ee25 4a84 	vmul.f32	s8, s11, s8
 8001564:	ed81 4a00 	vstr	s8, [r1]
 8001568:	f8cb 3000 	str.w	r3, [fp]
 800156c:	b00d      	add	sp, #52	; 0x34
 800156e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001572:	bf00      	nop
 8001574:	00000000 	.word	0x00000000

08001578 <acc_cal_algorithms_atan2_q16>:
 8001578:	2800      	cmp	r0, #0
 800157a:	bfb8      	it	lt
 800157c:	4240      	neglt	r0, r0
 800157e:	b470      	push	{r4, r5, r6}
 8001580:	bfba      	itte	lt
 8001582:	b200      	sxthlt	r0, r0
 8001584:	2401      	movlt	r4, #1
 8001586:	2400      	movge	r4, #0
 8001588:	2900      	cmp	r1, #0
 800158a:	db3f      	blt.n	800160c <acc_cal_algorithms_atan2_q16+0x94>
 800158c:	4288      	cmp	r0, r1
 800158e:	db38      	blt.n	8001602 <acc_cal_algorithms_atan2_q16+0x8a>
 8001590:	2200      	movs	r2, #0
 8001592:	4603      	mov	r3, r0
 8001594:	b368      	cbz	r0, 80015f2 <acc_cal_algorithms_atan2_q16+0x7a>
 8001596:	4608      	mov	r0, r1
 8001598:	2600      	movs	r6, #0
 800159a:	f643 4528 	movw	r5, #15400	; 0x3c28
 800159e:	0400      	lsls	r0, r0, #16
 80015a0:	fbb0 f1f3 	udiv	r1, r0, r3
 80015a4:	42a9      	cmp	r1, r5
 80015a6:	d94a      	bls.n	800163e <acc_cal_algorithms_atan2_q16+0xc6>
 80015a8:	f246 33d6 	movw	r3, #25558	; 0x63d6
 80015ac:	4299      	cmp	r1, r3
 80015ae:	d936      	bls.n	800161e <acc_cal_algorithms_atan2_q16+0xa6>
 80015b0:	f648 0372 	movw	r3, #34930	; 0x8872
 80015b4:	4299      	cmp	r1, r3
 80015b6:	d944      	bls.n	8001642 <acc_cal_algorithms_atan2_q16+0xca>
 80015b8:	f64a 4349 	movw	r3, #44105	; 0xac49
 80015bc:	4299      	cmp	r1, r3
 80015be:	d942      	bls.n	8001646 <acc_cal_algorithms_atan2_q16+0xce>
 80015c0:	f24d 03a3 	movw	r3, #53411	; 0xd0a3
 80015c4:	4299      	cmp	r1, r3
 80015c6:	d940      	bls.n	800164a <acc_cal_algorithms_atan2_q16+0xd2>
 80015c8:	f24f 734b 	movw	r3, #63307	; 0xf74b
 80015cc:	4299      	cmp	r1, r3
 80015ce:	bf98      	it	ls
 80015d0:	2005      	movls	r0, #5
 80015d2:	d925      	bls.n	8001620 <acc_cal_algorithms_atan2_q16+0xa8>
 80015d4:	f24f 754c 	movw	r5, #63308	; 0xf74c
 80015d8:	f248 2333 	movw	r3, #33331	; 0x8233
 80015dc:	f24c 40a3 	movw	r0, #50339	; 0xc4a3
 80015e0:	1b49      	subs	r1, r1, r5
 80015e2:	fb03 f101 	mul.w	r1, r3, r1
 80015e6:	eb00 4011 	add.w	r0, r0, r1, lsr #16
 80015ea:	b116      	cbz	r6, 80015f2 <acc_cal_algorithms_atan2_q16+0x7a>
 80015ec:	f5c0 30c9 	rsb	r0, r0, #102912	; 0x19200
 80015f0:	301f      	adds	r0, #31
 80015f2:	b114      	cbz	r4, 80015fa <acc_cal_algorithms_atan2_q16+0x82>
 80015f4:	f5c0 3049 	rsb	r0, r0, #205824	; 0x32400
 80015f8:	303f      	adds	r0, #63	; 0x3f
 80015fa:	b102      	cbz	r2, 80015fe <acc_cal_algorithms_atan2_q16+0x86>
 80015fc:	4240      	negs	r0, r0
 80015fe:	bc70      	pop	{r4, r5, r6}
 8001600:	4770      	bx	lr
 8001602:	460b      	mov	r3, r1
 8001604:	b9c1      	cbnz	r1, 8001638 <acc_cal_algorithms_atan2_q16+0xc0>
 8001606:	4812      	ldr	r0, [pc, #72]	; (8001650 <acc_cal_algorithms_atan2_q16+0xd8>)
 8001608:	460a      	mov	r2, r1
 800160a:	e7f2      	b.n	80015f2 <acc_cal_algorithms_atan2_q16+0x7a>
 800160c:	4249      	negs	r1, r1
 800160e:	b209      	sxth	r1, r1
 8001610:	4288      	cmp	r0, r1
 8001612:	f04f 0201 	mov.w	r2, #1
 8001616:	dabc      	bge.n	8001592 <acc_cal_algorithms_atan2_q16+0x1a>
 8001618:	460b      	mov	r3, r1
 800161a:	4616      	mov	r6, r2
 800161c:	e7bd      	b.n	800159a <acc_cal_algorithms_atan2_q16+0x22>
 800161e:	2001      	movs	r0, #1
 8001620:	4b0c      	ldr	r3, [pc, #48]	; (8001654 <acc_cal_algorithms_atan2_q16+0xdc>)
 8001622:	eb03 05c0 	add.w	r5, r3, r0, lsl #3
 8001626:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 800162a:	f8d5 0c28 	ldr.w	r0, [r5, #3112]	; 0xc28
 800162e:	f8d3 3c5c 	ldr.w	r3, [r3, #3164]	; 0xc5c
 8001632:	f8d5 5c24 	ldr.w	r5, [r5, #3108]	; 0xc24
 8001636:	e7d3      	b.n	80015e0 <acc_cal_algorithms_atan2_q16+0x68>
 8001638:	2200      	movs	r2, #0
 800163a:	2601      	movs	r6, #1
 800163c:	e7ad      	b.n	800159a <acc_cal_algorithms_atan2_q16+0x22>
 800163e:	2000      	movs	r0, #0
 8001640:	e7ee      	b.n	8001620 <acc_cal_algorithms_atan2_q16+0xa8>
 8001642:	2002      	movs	r0, #2
 8001644:	e7ec      	b.n	8001620 <acc_cal_algorithms_atan2_q16+0xa8>
 8001646:	2003      	movs	r0, #3
 8001648:	e7ea      	b.n	8001620 <acc_cal_algorithms_atan2_q16+0xa8>
 800164a:	2004      	movs	r0, #4
 800164c:	e7e8      	b.n	8001620 <acc_cal_algorithms_atan2_q16+0xa8>
 800164e:	bf00      	nop
 8001650:	0001921f 	.word	0x0001921f
 8001654:	080079a8 	.word	0x080079a8

08001658 <test_interrupt>:
 8001658:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800165c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800165e:	b086      	sub	sp, #24
 8001660:	2b00      	cmp	r3, #0
 8001662:	d05c      	beq.n	800171e <test_interrupt+0xc6>
 8001664:	2b01      	cmp	r3, #1
 8001666:	4604      	mov	r4, r0
 8001668:	d068      	beq.n	800173c <test_interrupt+0xe4>
 800166a:	2200      	movs	r2, #0
 800166c:	f8ad 200c 	strh.w	r2, [sp, #12]
 8001670:	07da      	lsls	r2, r3, #31
 8001672:	d402      	bmi.n	800167a <test_interrupt+0x22>
 8001674:	2b0c      	cmp	r3, #12
 8001676:	f240 8093 	bls.w	80017a0 <test_interrupt+0x148>
 800167a:	2600      	movs	r6, #0
 800167c:	6820      	ldr	r0, [r4, #0]
 800167e:	f8ad 600e 	strh.w	r6, [sp, #14]
 8001682:	f10d 020e 	add.w	r2, sp, #14
 8001686:	f240 1113 	movw	r1, #275	; 0x113
 800168a:	f8ad 6010 	strh.w	r6, [sp, #16]
 800168e:	f8ad 6012 	strh.w	r6, [sp, #18]
 8001692:	f8ad 6014 	strh.w	r6, [sp, #20]
 8001696:	f7ff fd2b 	bl	80010f0 <acc_sensor_reg_read>
 800169a:	6820      	ldr	r0, [r4, #0]
 800169c:	aa04      	add	r2, sp, #16
 800169e:	f44f 718a 	mov.w	r1, #276	; 0x114
 80016a2:	f7ff fd25 	bl	80010f0 <acc_sensor_reg_read>
 80016a6:	6820      	ldr	r0, [r4, #0]
 80016a8:	f10d 0212 	add.w	r2, sp, #18
 80016ac:	2133      	movs	r1, #51	; 0x33
 80016ae:	f7ff fd1f 	bl	80010f0 <acc_sensor_reg_read>
 80016b2:	6820      	ldr	r0, [r4, #0]
 80016b4:	aa05      	add	r2, sp, #20
 80016b6:	2132      	movs	r1, #50	; 0x32
 80016b8:	f7ff fd1a 	bl	80010f0 <acc_sensor_reg_read>
 80016bc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80016c0:	2b02      	cmp	r3, #2
 80016c2:	d05e      	beq.n	8001782 <test_interrupt+0x12a>
 80016c4:	2b03      	cmp	r3, #3
 80016c6:	d154      	bne.n	8001772 <test_interrupt+0x11a>
 80016c8:	aa05      	add	r2, sp, #20
 80016ca:	6820      	ldr	r0, [r4, #0]
 80016cc:	2132      	movs	r1, #50	; 0x32
 80016ce:	f7ff fd0f 	bl	80010f0 <acc_sensor_reg_read>
 80016d2:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80016d6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80016d8:	4293      	cmp	r3, r2
 80016da:	d07a      	beq.n	80017d2 <test_interrupt+0x17a>
 80016dc:	4d55      	ldr	r5, [pc, #340]	; (8001834 <test_interrupt+0x1dc>)
 80016de:	9200      	str	r2, [sp, #0]
 80016e0:	6c2d      	ldr	r5, [r5, #64]	; 0x40
 80016e2:	4a55      	ldr	r2, [pc, #340]	; (8001838 <test_interrupt+0x1e0>)
 80016e4:	4955      	ldr	r1, [pc, #340]	; (800183c <test_interrupt+0x1e4>)
 80016e6:	4630      	mov	r0, r6
 80016e8:	47a8      	blx	r5
 80016ea:	2504      	movs	r5, #4
 80016ec:	6820      	ldr	r0, [r4, #0]
 80016ee:	aa03      	add	r2, sp, #12
 80016f0:	2145      	movs	r1, #69	; 0x45
 80016f2:	f7ff fcfd 	bl	80010f0 <acc_sensor_reg_read>
 80016f6:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80016fa:	2b00      	cmp	r3, #0
 80016fc:	f040 8095 	bne.w	800182a <test_interrupt+0x1d2>
 8001700:	4d4c      	ldr	r5, [pc, #304]	; (8001834 <test_interrupt+0x1dc>)
 8001702:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001704:	4a4e      	ldr	r2, [pc, #312]	; (8001840 <test_interrupt+0x1e8>)
 8001706:	494d      	ldr	r1, [pc, #308]	; (800183c <test_interrupt+0x1e4>)
 8001708:	2000      	movs	r0, #0
 800170a:	4798      	blx	r3
 800170c:	2504      	movs	r5, #4
 800170e:	2100      	movs	r1, #0
 8001710:	484c      	ldr	r0, [pc, #304]	; (8001844 <test_interrupt+0x1ec>)
 8001712:	f7ff f971 	bl	80009f8 <acc_diagnostic_log_scalar>
 8001716:	4628      	mov	r0, r5
 8001718:	b006      	add	sp, #24
 800171a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800171e:	4b45      	ldr	r3, [pc, #276]	; (8001834 <test_interrupt+0x1dc>)
 8001720:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 8001724:	2a01      	cmp	r2, #1
 8001726:	d91f      	bls.n	8001768 <test_interrupt+0x110>
 8001728:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800172a:	4a47      	ldr	r2, [pc, #284]	; (8001848 <test_interrupt+0x1f0>)
 800172c:	4943      	ldr	r1, [pc, #268]	; (800183c <test_interrupt+0x1e4>)
 800172e:	2002      	movs	r0, #2
 8001730:	4798      	blx	r3
 8001732:	2501      	movs	r5, #1
 8001734:	4628      	mov	r0, r5
 8001736:	b006      	add	sp, #24
 8001738:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800173c:	4d3d      	ldr	r5, [pc, #244]	; (8001834 <test_interrupt+0x1dc>)
 800173e:	f895 3048 	ldrb.w	r3, [r5, #72]	; 0x48
 8001742:	2b01      	cmp	r3, #1
 8001744:	d904      	bls.n	8001750 <test_interrupt+0xf8>
 8001746:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001748:	4a40      	ldr	r2, [pc, #256]	; (800184c <test_interrupt+0x1f4>)
 800174a:	493c      	ldr	r1, [pc, #240]	; (800183c <test_interrupt+0x1e4>)
 800174c:	2002      	movs	r0, #2
 800174e:	4798      	blx	r3
 8001750:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8001752:	9305      	str	r3, [sp, #20]
 8001754:	e9d4 1203 	ldrd	r1, r2, [r4, #12]
 8001758:	6820      	ldr	r0, [r4, #0]
 800175a:	ab05      	add	r3, sp, #20
 800175c:	f7ff fd6e 	bl	800123c <acc_cpd_assembly_test_load_program>
 8001760:	bb60      	cbnz	r0, 80017bc <test_interrupt+0x164>
 8001762:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001764:	4a3a      	ldr	r2, [pc, #232]	; (8001850 <test_interrupt+0x1f8>)
 8001766:	e7ce      	b.n	8001706 <test_interrupt+0xae>
 8001768:	2501      	movs	r5, #1
 800176a:	4628      	mov	r0, r5
 800176c:	b006      	add	sp, #24
 800176e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001772:	4d30      	ldr	r5, [pc, #192]	; (8001834 <test_interrupt+0x1dc>)
 8001774:	4a37      	ldr	r2, [pc, #220]	; (8001854 <test_interrupt+0x1fc>)
 8001776:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001778:	4930      	ldr	r1, [pc, #192]	; (800183c <test_interrupt+0x1e4>)
 800177a:	4630      	mov	r0, r6
 800177c:	4798      	blx	r3
 800177e:	2504      	movs	r5, #4
 8001780:	e7b4      	b.n	80016ec <test_interrupt+0x94>
 8001782:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8001786:	f243 0239 	movw	r2, #12345	; 0x3039
 800178a:	4293      	cmp	r3, r2
 800178c:	d01f      	beq.n	80017ce <test_interrupt+0x176>
 800178e:	4d29      	ldr	r5, [pc, #164]	; (8001834 <test_interrupt+0x1dc>)
 8001790:	9200      	str	r2, [sp, #0]
 8001792:	6c2d      	ldr	r5, [r5, #64]	; 0x40
 8001794:	4a30      	ldr	r2, [pc, #192]	; (8001858 <test_interrupt+0x200>)
 8001796:	4929      	ldr	r1, [pc, #164]	; (800183c <test_interrupt+0x1e4>)
 8001798:	4630      	mov	r0, r6
 800179a:	47a8      	blx	r5
 800179c:	2504      	movs	r5, #4
 800179e:	e7a5      	b.n	80016ec <test_interrupt+0x94>
 80017a0:	6800      	ldr	r0, [r0, #0]
 80017a2:	aa03      	add	r2, sp, #12
 80017a4:	2145      	movs	r1, #69	; 0x45
 80017a6:	f7ff fca3 	bl	80010f0 <acc_sensor_reg_read>
 80017aa:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80017ae:	2b00      	cmp	r3, #0
 80017b0:	d0a6      	beq.n	8001700 <test_interrupt+0xa8>
 80017b2:	2502      	movs	r5, #2
 80017b4:	4628      	mov	r0, r5
 80017b6:	b006      	add	sp, #24
 80017b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80017bc:	6820      	ldr	r0, [r4, #0]
 80017be:	f240 1163 	movw	r1, #355	; 0x163
 80017c2:	f7ff fcab 	bl	800111c <acc_sensor_protocol_a121_run_program>
 80017c6:	2800      	cmp	r0, #0
 80017c8:	d0cb      	beq.n	8001762 <test_interrupt+0x10a>
 80017ca:	2502      	movs	r5, #2
 80017cc:	e7f2      	b.n	80017b4 <test_interrupt+0x15c>
 80017ce:	2503      	movs	r5, #3
 80017d0:	e78c      	b.n	80016ec <test_interrupt+0x94>
 80017d2:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 80017d6:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 80017da:	4d16      	ldr	r5, [pc, #88]	; (8001834 <test_interrupt+0x1dc>)
 80017dc:	440a      	add	r2, r1
 80017de:	f895 1048 	ldrb.w	r1, [r5, #72]	; 0x48
 80017e2:	3201      	adds	r2, #1
 80017e4:	3b03      	subs	r3, #3
 80017e6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80017ea:	2901      	cmp	r1, #1
 80017ec:	fa1f f882 	uxth.w	r8, r2
 80017f0:	f3c3 064f 	ubfx	r6, r3, #1, #16
 80017f4:	ea4f 0253 	mov.w	r2, r3, lsr #1
 80017f8:	d907      	bls.n	800180a <test_interrupt+0x1b2>
 80017fa:	f8cd 8000 	str.w	r8, [sp]
 80017fe:	b293      	uxth	r3, r2
 8001800:	490e      	ldr	r1, [pc, #56]	; (800183c <test_interrupt+0x1e4>)
 8001802:	4a16      	ldr	r2, [pc, #88]	; (800185c <test_interrupt+0x204>)
 8001804:	6c2f      	ldr	r7, [r5, #64]	; 0x40
 8001806:	2002      	movs	r0, #2
 8001808:	47b8      	blx	r7
 800180a:	b14e      	cbz	r6, 8001820 <test_interrupt+0x1c8>
 800180c:	6820      	ldr	r0, [r4, #0]
 800180e:	aa03      	add	r2, sp, #12
 8001810:	2145      	movs	r1, #69	; 0x45
 8001812:	f7ff fc6d 	bl	80010f0 <acc_sensor_reg_read>
 8001816:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800181a:	2b00      	cmp	r3, #0
 800181c:	d1c9      	bne.n	80017b2 <test_interrupt+0x15a>
 800181e:	e770      	b.n	8001702 <test_interrupt+0xaa>
 8001820:	480f      	ldr	r0, [pc, #60]	; (8001860 <test_interrupt+0x208>)
 8001822:	4641      	mov	r1, r8
 8001824:	f7ff f8e8 	bl	80009f8 <acc_diagnostic_log_scalar>
 8001828:	e7f0      	b.n	800180c <test_interrupt+0x1b4>
 800182a:	1eeb      	subs	r3, r5, #3
 800182c:	4259      	negs	r1, r3
 800182e:	4159      	adcs	r1, r3
 8001830:	e76e      	b.n	8001710 <test_interrupt+0xb8>
 8001832:	bf00      	nop
 8001834:	200000ac 	.word	0x200000ac
 8001838:	0800a620 	.word	0x0800a620
 800183c:	0800a574 	.word	0x0800a574
 8001840:	0800a5bc 	.word	0x0800a5bc
 8001844:	0800a6a8 	.word	0x0800a6a8
 8001848:	0800a55c 	.word	0x0800a55c
 800184c:	0800a588 	.word	0x0800a588
 8001850:	0800a5a0 	.word	0x0800a5a0
 8001854:	0800a684 	.word	0x0800a684
 8001858:	0800a654 	.word	0x0800a654
 800185c:	0800a5d8 	.word	0x0800a5d8
 8001860:	0800a608 	.word	0x0800a608

08001864 <test_enable_pin>:
 8001864:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001868:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800186a:	b087      	sub	sp, #28
 800186c:	4605      	mov	r5, r0
 800186e:	b183      	cbz	r3, 8001892 <test_enable_pin+0x2e>
 8001870:	2b01      	cmp	r3, #1
 8001872:	d04f      	beq.n	8001914 <test_enable_pin+0xb0>
 8001874:	4b3e      	ldr	r3, [pc, #248]	; (8001970 <test_enable_pin+0x10c>)
 8001876:	4a3f      	ldr	r2, [pc, #252]	; (8001974 <test_enable_pin+0x110>)
 8001878:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800187a:	493f      	ldr	r1, [pc, #252]	; (8001978 <test_enable_pin+0x114>)
 800187c:	2000      	movs	r0, #0
 800187e:	4798      	blx	r3
 8001880:	2504      	movs	r5, #4
 8001882:	2100      	movs	r1, #0
 8001884:	483d      	ldr	r0, [pc, #244]	; (800197c <test_enable_pin+0x118>)
 8001886:	f7ff f8b7 	bl	80009f8 <acc_diagnostic_log_scalar>
 800188a:	4628      	mov	r0, r5
 800188c:	b007      	add	sp, #28
 800188e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001892:	4f37      	ldr	r7, [pc, #220]	; (8001970 <test_enable_pin+0x10c>)
 8001894:	f897 3048 	ldrb.w	r3, [r7, #72]	; 0x48
 8001898:	2b01      	cmp	r3, #1
 800189a:	d904      	bls.n	80018a6 <test_enable_pin+0x42>
 800189c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800189e:	4a38      	ldr	r2, [pc, #224]	; (8001980 <test_enable_pin+0x11c>)
 80018a0:	4935      	ldr	r1, [pc, #212]	; (8001978 <test_enable_pin+0x114>)
 80018a2:	2002      	movs	r0, #2
 80018a4:	4798      	blx	r3
 80018a6:	4837      	ldr	r0, [pc, #220]	; (8001984 <test_enable_pin+0x120>)
 80018a8:	f7ff f8ae 	bl	8000a08 <acc_diagnostic_log_set_scope>
 80018ac:	4b36      	ldr	r3, [pc, #216]	; (8001988 <test_enable_pin+0x124>)
 80018ae:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80018b0:	ac06      	add	r4, sp, #24
 80018b2:	f10d 0806 	add.w	r8, sp, #6
 80018b6:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 80018ba:	4646      	mov	r6, r8
 80018bc:	242c      	movs	r4, #44	; 0x2c
 80018be:	4621      	mov	r1, r4
 80018c0:	3401      	adds	r4, #1
 80018c2:	f836 2f02 	ldrh.w	r2, [r6, #2]!
 80018c6:	6828      	ldr	r0, [r5, #0]
 80018c8:	b2a4      	uxth	r4, r4
 80018ca:	f7ff fc01 	bl	80010d0 <acc_sensor_reg_write>
 80018ce:	2c34      	cmp	r4, #52	; 0x34
 80018d0:	d1f5      	bne.n	80018be <test_enable_pin+0x5a>
 80018d2:	262c      	movs	r6, #44	; 0x2c
 80018d4:	2401      	movs	r4, #1
 80018d6:	f04f 0900 	mov.w	r9, #0
 80018da:	f10d 0206 	add.w	r2, sp, #6
 80018de:	4631      	mov	r1, r6
 80018e0:	6828      	ldr	r0, [r5, #0]
 80018e2:	f8ad 9006 	strh.w	r9, [sp, #6]
 80018e6:	3601      	adds	r6, #1
 80018e8:	f7ff fc02 	bl	80010f0 <acc_sensor_reg_read>
 80018ec:	f838 2f02 	ldrh.w	r2, [r8, #2]!
 80018f0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80018f4:	b2b6      	uxth	r6, r6
 80018f6:	429a      	cmp	r2, r3
 80018f8:	bf18      	it	ne
 80018fa:	2400      	movne	r4, #0
 80018fc:	2e34      	cmp	r6, #52	; 0x34
 80018fe:	d1ec      	bne.n	80018da <test_enable_pin+0x76>
 8001900:	2c00      	cmp	r4, #0
 8001902:	d131      	bne.n	8001968 <test_enable_pin+0x104>
 8001904:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8001906:	4a21      	ldr	r2, [pc, #132]	; (800198c <test_enable_pin+0x128>)
 8001908:	491b      	ldr	r1, [pc, #108]	; (8001978 <test_enable_pin+0x114>)
 800190a:	4620      	mov	r0, r4
 800190c:	4798      	blx	r3
 800190e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8001910:	4a1f      	ldr	r2, [pc, #124]	; (8001990 <test_enable_pin+0x12c>)
 8001912:	e7b2      	b.n	800187a <test_enable_pin+0x16>
 8001914:	4f16      	ldr	r7, [pc, #88]	; (8001970 <test_enable_pin+0x10c>)
 8001916:	f897 3048 	ldrb.w	r3, [r7, #72]	; 0x48
 800191a:	2b01      	cmp	r3, #1
 800191c:	d904      	bls.n	8001928 <test_enable_pin+0xc4>
 800191e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8001920:	4a1c      	ldr	r2, [pc, #112]	; (8001994 <test_enable_pin+0x130>)
 8001922:	4915      	ldr	r1, [pc, #84]	; (8001978 <test_enable_pin+0x114>)
 8001924:	2002      	movs	r0, #2
 8001926:	4798      	blx	r3
 8001928:	262c      	movs	r6, #44	; 0x2c
 800192a:	2401      	movs	r4, #1
 800192c:	f04f 0800 	mov.w	r8, #0
 8001930:	4631      	mov	r1, r6
 8001932:	6828      	ldr	r0, [r5, #0]
 8001934:	f8ad 8008 	strh.w	r8, [sp, #8]
 8001938:	aa02      	add	r2, sp, #8
 800193a:	f7ff fbd9 	bl	80010f0 <acc_sensor_reg_read>
 800193e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8001942:	3601      	adds	r6, #1
 8001944:	2b00      	cmp	r3, #0
 8001946:	b2b6      	uxth	r6, r6
 8001948:	bf18      	it	ne
 800194a:	2400      	movne	r4, #0
 800194c:	2e34      	cmp	r6, #52	; 0x34
 800194e:	d1ef      	bne.n	8001930 <test_enable_pin+0xcc>
 8001950:	b93c      	cbnz	r4, 8001962 <test_enable_pin+0xfe>
 8001952:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8001954:	4a10      	ldr	r2, [pc, #64]	; (8001998 <test_enable_pin+0x134>)
 8001956:	4908      	ldr	r1, [pc, #32]	; (8001978 <test_enable_pin+0x114>)
 8001958:	4620      	mov	r0, r4
 800195a:	4798      	blx	r3
 800195c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800195e:	4a0f      	ldr	r2, [pc, #60]	; (800199c <test_enable_pin+0x138>)
 8001960:	e78b      	b.n	800187a <test_enable_pin+0x16>
 8001962:	2101      	movs	r1, #1
 8001964:	2503      	movs	r5, #3
 8001966:	e78d      	b.n	8001884 <test_enable_pin+0x20>
 8001968:	2100      	movs	r1, #0
 800196a:	2501      	movs	r5, #1
 800196c:	e78a      	b.n	8001884 <test_enable_pin+0x20>
 800196e:	bf00      	nop
 8001970:	200000ac 	.word	0x200000ac
 8001974:	0800a768 	.word	0x0800a768
 8001978:	0800a574 	.word	0x0800a574
 800197c:	0800a788 	.word	0x0800a788
 8001980:	0800a6c0 	.word	0x0800a6c0
 8001984:	0800a6d8 	.word	0x0800a6d8
 8001988:	08008620 	.word	0x08008620
 800198c:	0800a6e8 	.word	0x0800a6e8
 8001990:	0800a704 	.word	0x0800a704
 8001994:	0800a724 	.word	0x0800a724
 8001998:	0800a73c 	.word	0x0800a73c
 800199c:	0800a750 	.word	0x0800a750

080019a0 <test_basic_read>:
 80019a0:	b570      	push	{r4, r5, r6, lr}
 80019a2:	4e19      	ldr	r6, [pc, #100]	; (8001a08 <test_basic_read+0x68>)
 80019a4:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 80019a8:	2b01      	cmp	r3, #1
 80019aa:	b082      	sub	sp, #8
 80019ac:	4605      	mov	r5, r0
 80019ae:	d904      	bls.n	80019ba <test_basic_read+0x1a>
 80019b0:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80019b2:	4a16      	ldr	r2, [pc, #88]	; (8001a0c <test_basic_read+0x6c>)
 80019b4:	4916      	ldr	r1, [pc, #88]	; (8001a10 <test_basic_read+0x70>)
 80019b6:	2002      	movs	r0, #2
 80019b8:	4798      	blx	r3
 80019ba:	4816      	ldr	r0, [pc, #88]	; (8001a14 <test_basic_read+0x74>)
 80019bc:	2400      	movs	r4, #0
 80019be:	f7ff f823 	bl	8000a08 <acc_diagnostic_log_set_scope>
 80019c2:	f10d 0206 	add.w	r2, sp, #6
 80019c6:	6828      	ldr	r0, [r5, #0]
 80019c8:	f8ad 4006 	strh.w	r4, [sp, #6]
 80019cc:	4621      	mov	r1, r4
 80019ce:	f7ff fb8f 	bl	80010f0 <acc_sensor_reg_read>
 80019d2:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80019d6:	f241 2310 	movw	r3, #4624	; 0x1210
 80019da:	429a      	cmp	r2, r3
 80019dc:	d00c      	beq.n	80019f8 <test_basic_read+0x58>
 80019de:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80019e0:	4a0d      	ldr	r2, [pc, #52]	; (8001a18 <test_basic_read+0x78>)
 80019e2:	490b      	ldr	r1, [pc, #44]	; (8001a10 <test_basic_read+0x70>)
 80019e4:	4620      	mov	r0, r4
 80019e6:	4798      	blx	r3
 80019e8:	480c      	ldr	r0, [pc, #48]	; (8001a1c <test_basic_read+0x7c>)
 80019ea:	4621      	mov	r1, r4
 80019ec:	f7ff f804 	bl	80009f8 <acc_diagnostic_log_scalar>
 80019f0:	2504      	movs	r5, #4
 80019f2:	4628      	mov	r0, r5
 80019f4:	b002      	add	sp, #8
 80019f6:	bd70      	pop	{r4, r5, r6, pc}
 80019f8:	4808      	ldr	r0, [pc, #32]	; (8001a1c <test_basic_read+0x7c>)
 80019fa:	2101      	movs	r1, #1
 80019fc:	f7fe fffc 	bl	80009f8 <acc_diagnostic_log_scalar>
 8001a00:	2503      	movs	r5, #3
 8001a02:	4628      	mov	r0, r5
 8001a04:	b002      	add	sp, #8
 8001a06:	bd70      	pop	{r4, r5, r6, pc}
 8001a08:	200000ac 	.word	0x200000ac
 8001a0c:	0800a7a0 	.word	0x0800a7a0
 8001a10:	0800a574 	.word	0x0800a574
 8001a14:	0800a7b4 	.word	0x0800a7b4
 8001a18:	0800a7c4 	.word	0x0800a7c4
 8001a1c:	0800a7e8 	.word	0x0800a7e8

08001a20 <acc_sensor_destroy>:
 8001a20:	b510      	push	{r4, lr}
 8001a22:	b120      	cbz	r0, 8001a2e <acc_sensor_destroy+0xe>
 8001a24:	4b0b      	ldr	r3, [pc, #44]	; (8001a54 <acc_sensor_destroy+0x34>)
 8001a26:	6802      	ldr	r2, [r0, #0]
 8001a28:	429a      	cmp	r2, r3
 8001a2a:	4604      	mov	r4, r0
 8001a2c:	d007      	beq.n	8001a3e <acc_sensor_destroy+0x1e>
 8001a2e:	4b0a      	ldr	r3, [pc, #40]	; (8001a58 <acc_sensor_destroy+0x38>)
 8001a30:	4a0a      	ldr	r2, [pc, #40]	; (8001a5c <acc_sensor_destroy+0x3c>)
 8001a32:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a34:	490a      	ldr	r1, [pc, #40]	; (8001a60 <acc_sensor_destroy+0x40>)
 8001a36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001a3a:	2000      	movs	r0, #0
 8001a3c:	4718      	bx	r3
 8001a3e:	6900      	ldr	r0, [r0, #16]
 8001a40:	2300      	movs	r3, #0
 8001a42:	6023      	str	r3, [r4, #0]
 8001a44:	b108      	cbz	r0, 8001a4a <acc_sensor_destroy+0x2a>
 8001a46:	f7ff fa4f 	bl	8000ee8 <acc_rss_integration_mem_free>
 8001a4a:	4620      	mov	r0, r4
 8001a4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001a50:	f7ff ba4a 	b.w	8000ee8 <acc_rss_integration_mem_free>
 8001a54:	1337b00e 	.word	0x1337b00e
 8001a58:	200000ac 	.word	0x200000ac
 8001a5c:	0800a804 	.word	0x0800a804
 8001a60:	0800a81c 	.word	0x0800a81c

08001a64 <UART_DMAAbortOnError>:
 8001a64:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8001a66:	2200      	movs	r2, #0
 8001a68:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8001a6c:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8001a70:	4770      	bx	lr
 8001a72:	bf00      	nop

08001a74 <SPI_DMAError>:
 8001a74:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8001a76:	6819      	ldr	r1, [r3, #0]
 8001a78:	684a      	ldr	r2, [r1, #4]
 8001a7a:	f022 0203 	bic.w	r2, r2, #3
 8001a7e:	b410      	push	{r4}
 8001a80:	604a      	str	r2, [r1, #4]
 8001a82:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8001a84:	2401      	movs	r4, #1
 8001a86:	f042 0210 	orr.w	r2, r2, #16
 8001a8a:	661a      	str	r2, [r3, #96]	; 0x60
 8001a8c:	f883 405d 	strb.w	r4, [r3, #93]	; 0x5d
 8001a90:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001a94:	4770      	bx	lr
 8001a96:	bf00      	nop

08001a98 <SPI_DMAHalfReceiveCplt>:
 8001a98:	4770      	bx	lr
 8001a9a:	bf00      	nop

08001a9c <SPI_DMAHalfTransmitReceiveCplt>:
 8001a9c:	4770      	bx	lr
 8001a9e:	bf00      	nop

08001aa0 <SPI_DMATransmitReceiveCplt>:
 8001aa0:	b570      	push	{r4, r5, r6, lr}
 8001aa2:	6803      	ldr	r3, [r0, #0]
 8001aa4:	4d1b      	ldr	r5, [pc, #108]	; (8001b14 <SPI_DMATransmitReceiveCplt+0x74>)
 8001aa6:	682e      	ldr	r6, [r5, #0]
 8001aa8:	681b      	ldr	r3, [r3, #0]
 8001aaa:	069b      	lsls	r3, r3, #26
 8001aac:	d42e      	bmi.n	8001b0c <SPI_DMATransmitReceiveCplt+0x6c>
 8001aae:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8001ab0:	6822      	ldr	r2, [r4, #0]
 8001ab2:	6853      	ldr	r3, [r2, #4]
 8001ab4:	f023 0320 	bic.w	r3, r3, #32
 8001ab8:	6053      	str	r3, [r2, #4]
 8001aba:	4620      	mov	r0, r4
 8001abc:	4632      	mov	r2, r6
 8001abe:	f44f 51c0 	mov.w	r1, #6144	; 0x1800
 8001ac2:	f7fe fd8b 	bl	80005dc <SPI_WaitFifoStateUntilTimeout.constprop.0>
 8001ac6:	b958      	cbnz	r0, 8001ae0 <SPI_DMATransmitReceiveCplt+0x40>
 8001ac8:	4631      	mov	r1, r6
 8001aca:	4620      	mov	r0, r4
 8001acc:	f7fe fdee 	bl	80006ac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8001ad0:	b930      	cbnz	r0, 8001ae0 <SPI_DMATransmitReceiveCplt+0x40>
 8001ad2:	4632      	mov	r2, r6
 8001ad4:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8001ad8:	4620      	mov	r0, r4
 8001ada:	f7fe fd7f 	bl	80005dc <SPI_WaitFifoStateUntilTimeout.constprop.0>
 8001ade:	b138      	cbz	r0, 8001af0 <SPI_DMATransmitReceiveCplt+0x50>
 8001ae0:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8001ae2:	f043 0320 	orr.w	r3, r3, #32
 8001ae6:	6623      	str	r3, [r4, #96]	; 0x60
 8001ae8:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8001aea:	f043 0320 	orr.w	r3, r3, #32
 8001aee:	6623      	str	r3, [r4, #96]	; 0x60
 8001af0:	6821      	ldr	r1, [r4, #0]
 8001af2:	684b      	ldr	r3, [r1, #4]
 8001af4:	2200      	movs	r2, #0
 8001af6:	f023 0303 	bic.w	r3, r3, #3
 8001afa:	2001      	movs	r0, #1
 8001afc:	604b      	str	r3, [r1, #4]
 8001afe:	87e2      	strh	r2, [r4, #62]	; 0x3e
 8001b00:	f8a4 2046 	strh.w	r2, [r4, #70]	; 0x46
 8001b04:	f884 005d 	strb.w	r0, [r4, #93]	; 0x5d
 8001b08:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8001b0a:	b913      	cbnz	r3, 8001b12 <SPI_DMATransmitReceiveCplt+0x72>
 8001b0c:	2301      	movs	r3, #1
 8001b0e:	f885 3050 	strb.w	r3, [r5, #80]	; 0x50
 8001b12:	bd70      	pop	{r4, r5, r6, pc}
 8001b14:	200000ac 	.word	0x200000ac

08001b18 <SPI_DMAReceiveCplt>:
 8001b18:	b538      	push	{r3, r4, r5, lr}
 8001b1a:	4a2e      	ldr	r2, [pc, #184]	; (8001bd4 <SPI_DMAReceiveCplt+0xbc>)
 8001b1c:	6803      	ldr	r3, [r0, #0]
 8001b1e:	6815      	ldr	r5, [r2, #0]
 8001b20:	681b      	ldr	r3, [r3, #0]
 8001b22:	069b      	lsls	r3, r3, #26
 8001b24:	d41f      	bmi.n	8001b66 <SPI_DMAReceiveCplt+0x4e>
 8001b26:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8001b28:	6823      	ldr	r3, [r4, #0]
 8001b2a:	68a2      	ldr	r2, [r4, #8]
 8001b2c:	6858      	ldr	r0, [r3, #4]
 8001b2e:	f020 0020 	bic.w	r0, r0, #32
 8001b32:	6058      	str	r0, [r3, #4]
 8001b34:	b1c2      	cbz	r2, 8001b68 <SPI_DMAReceiveCplt+0x50>
 8001b36:	6859      	ldr	r1, [r3, #4]
 8001b38:	6860      	ldr	r0, [r4, #4]
 8001b3a:	f021 0101 	bic.w	r1, r1, #1
 8001b3e:	f5b0 7f82 	cmp.w	r0, #260	; 0x104
 8001b42:	6059      	str	r1, [r3, #4]
 8001b44:	d035      	beq.n	8001bb2 <SPI_DMAReceiveCplt+0x9a>
 8001b46:	4629      	mov	r1, r5
 8001b48:	4620      	mov	r0, r4
 8001b4a:	f7fe fdaf 	bl	80006ac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8001b4e:	b9c8      	cbnz	r0, 8001b84 <SPI_DMAReceiveCplt+0x6c>
 8001b50:	6863      	ldr	r3, [r4, #4]
 8001b52:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8001b56:	d01c      	beq.n	8001b92 <SPI_DMAReceiveCplt+0x7a>
 8001b58:	2301      	movs	r3, #1
 8001b5a:	2200      	movs	r2, #0
 8001b5c:	f8a4 2046 	strh.w	r2, [r4, #70]	; 0x46
 8001b60:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 8001b64:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8001b66:	bd38      	pop	{r3, r4, r5, pc}
 8001b68:	6862      	ldr	r2, [r4, #4]
 8001b6a:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8001b6e:	685a      	ldr	r2, [r3, #4]
 8001b70:	d027      	beq.n	8001bc2 <SPI_DMAReceiveCplt+0xaa>
 8001b72:	f022 0201 	bic.w	r2, r2, #1
 8001b76:	605a      	str	r2, [r3, #4]
 8001b78:	4629      	mov	r1, r5
 8001b7a:	4620      	mov	r0, r4
 8001b7c:	f7fe fd96 	bl	80006ac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8001b80:	2800      	cmp	r0, #0
 8001b82:	d0e5      	beq.n	8001b50 <SPI_DMAReceiveCplt+0x38>
 8001b84:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8001b86:	f043 0320 	orr.w	r3, r3, #32
 8001b8a:	6623      	str	r3, [r4, #96]	; 0x60
 8001b8c:	2320      	movs	r3, #32
 8001b8e:	6623      	str	r3, [r4, #96]	; 0x60
 8001b90:	e7e2      	b.n	8001b58 <SPI_DMAReceiveCplt+0x40>
 8001b92:	68a3      	ldr	r3, [r4, #8]
 8001b94:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8001b98:	d002      	beq.n	8001ba0 <SPI_DMAReceiveCplt+0x88>
 8001b9a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001b9e:	d1db      	bne.n	8001b58 <SPI_DMAReceiveCplt+0x40>
 8001ba0:	462a      	mov	r2, r5
 8001ba2:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8001ba6:	4620      	mov	r0, r4
 8001ba8:	f7fe fd18 	bl	80005dc <SPI_WaitFifoStateUntilTimeout.constprop.0>
 8001bac:	2800      	cmp	r0, #0
 8001bae:	d0d3      	beq.n	8001b58 <SPI_DMAReceiveCplt+0x40>
 8001bb0:	e7e8      	b.n	8001b84 <SPI_DMAReceiveCplt+0x6c>
 8001bb2:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8001bb6:	d108      	bne.n	8001bca <SPI_DMAReceiveCplt+0xb2>
 8001bb8:	681a      	ldr	r2, [r3, #0]
 8001bba:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8001bbe:	601a      	str	r2, [r3, #0]
 8001bc0:	e7c1      	b.n	8001b46 <SPI_DMAReceiveCplt+0x2e>
 8001bc2:	f022 0203 	bic.w	r2, r2, #3
 8001bc6:	605a      	str	r2, [r3, #4]
 8001bc8:	e7bd      	b.n	8001b46 <SPI_DMAReceiveCplt+0x2e>
 8001bca:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8001bce:	d0f3      	beq.n	8001bb8 <SPI_DMAReceiveCplt+0xa0>
 8001bd0:	e7b9      	b.n	8001b46 <SPI_DMAReceiveCplt+0x2e>
 8001bd2:	bf00      	nop
 8001bd4:	200000ac 	.word	0x200000ac

08001bd8 <RCCEx_PLLSAI1_Config>:
 8001bd8:	4a44      	ldr	r2, [pc, #272]	; (8001cec <RCCEx_PLLSAI1_Config+0x114>)
 8001bda:	68d3      	ldr	r3, [r2, #12]
 8001bdc:	b430      	push	{r4, r5}
 8001bde:	079c      	lsls	r4, r3, #30
 8001be0:	d008      	beq.n	8001bf4 <RCCEx_PLLSAI1_Config+0x1c>
 8001be2:	68d3      	ldr	r3, [r2, #12]
 8001be4:	6804      	ldr	r4, [r0, #0]
 8001be6:	f003 0303 	and.w	r3, r3, #3
 8001bea:	42a3      	cmp	r3, r4
 8001bec:	d047      	beq.n	8001c7e <RCCEx_PLLSAI1_Config+0xa6>
 8001bee:	2001      	movs	r0, #1
 8001bf0:	bc30      	pop	{r4, r5}
 8001bf2:	4770      	bx	lr
 8001bf4:	6803      	ldr	r3, [r0, #0]
 8001bf6:	2b02      	cmp	r3, #2
 8001bf8:	d052      	beq.n	8001ca0 <RCCEx_PLLSAI1_Config+0xc8>
 8001bfa:	2b03      	cmp	r3, #3
 8001bfc:	d049      	beq.n	8001c92 <RCCEx_PLLSAI1_Config+0xba>
 8001bfe:	2b01      	cmp	r3, #1
 8001c00:	d1f5      	bne.n	8001bee <RCCEx_PLLSAI1_Config+0x16>
 8001c02:	6812      	ldr	r2, [r2, #0]
 8001c04:	0792      	lsls	r2, r2, #30
 8001c06:	d5f2      	bpl.n	8001bee <RCCEx_PLLSAI1_Config+0x16>
 8001c08:	4d38      	ldr	r5, [pc, #224]	; (8001cec <RCCEx_PLLSAI1_Config+0x114>)
 8001c0a:	6844      	ldr	r4, [r0, #4]
 8001c0c:	68ea      	ldr	r2, [r5, #12]
 8001c0e:	f022 0273 	bic.w	r2, r2, #115	; 0x73
 8001c12:	4313      	orrs	r3, r2
 8001c14:	3c01      	subs	r4, #1
 8001c16:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 8001c1a:	60eb      	str	r3, [r5, #12]
 8001c1c:	4c33      	ldr	r4, [pc, #204]	; (8001cec <RCCEx_PLLSAI1_Config+0x114>)
 8001c1e:	4a34      	ldr	r2, [pc, #208]	; (8001cf0 <RCCEx_PLLSAI1_Config+0x118>)
 8001c20:	6823      	ldr	r3, [r4, #0]
 8001c22:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8001c26:	6023      	str	r3, [r4, #0]
 8001c28:	6815      	ldr	r5, [r2, #0]
 8001c2a:	e003      	b.n	8001c34 <RCCEx_PLLSAI1_Config+0x5c>
 8001c2c:	6813      	ldr	r3, [r2, #0]
 8001c2e:	1b5b      	subs	r3, r3, r5
 8001c30:	2b02      	cmp	r3, #2
 8001c32:	d839      	bhi.n	8001ca8 <RCCEx_PLLSAI1_Config+0xd0>
 8001c34:	6823      	ldr	r3, [r4, #0]
 8001c36:	011b      	lsls	r3, r3, #4
 8001c38:	d4f8      	bmi.n	8001c2c <RCCEx_PLLSAI1_Config+0x54>
 8001c3a:	2900      	cmp	r1, #0
 8001c3c:	d136      	bne.n	8001cac <RCCEx_PLLSAI1_Config+0xd4>
 8001c3e:	e9d0 5302 	ldrd	r5, r3, [r0, #8]
 8001c42:	6921      	ldr	r1, [r4, #16]
 8001c44:	06db      	lsls	r3, r3, #27
 8001c46:	f021 4178 	bic.w	r1, r1, #4160749568	; 0xf8000000
 8001c4a:	f421 41fe 	bic.w	r1, r1, #32512	; 0x7f00
 8001c4e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8001c52:	430b      	orrs	r3, r1
 8001c54:	6123      	str	r3, [r4, #16]
 8001c56:	4925      	ldr	r1, [pc, #148]	; (8001cec <RCCEx_PLLSAI1_Config+0x114>)
 8001c58:	680b      	ldr	r3, [r1, #0]
 8001c5a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8001c5e:	600b      	str	r3, [r1, #0]
 8001c60:	6814      	ldr	r4, [r2, #0]
 8001c62:	e003      	b.n	8001c6c <RCCEx_PLLSAI1_Config+0x94>
 8001c64:	6813      	ldr	r3, [r2, #0]
 8001c66:	1b1b      	subs	r3, r3, r4
 8001c68:	2b02      	cmp	r3, #2
 8001c6a:	d81d      	bhi.n	8001ca8 <RCCEx_PLLSAI1_Config+0xd0>
 8001c6c:	680b      	ldr	r3, [r1, #0]
 8001c6e:	011b      	lsls	r3, r3, #4
 8001c70:	d5f8      	bpl.n	8001c64 <RCCEx_PLLSAI1_Config+0x8c>
 8001c72:	6982      	ldr	r2, [r0, #24]
 8001c74:	690b      	ldr	r3, [r1, #16]
 8001c76:	4313      	orrs	r3, r2
 8001c78:	610b      	str	r3, [r1, #16]
 8001c7a:	2000      	movs	r0, #0
 8001c7c:	e7b8      	b.n	8001bf0 <RCCEx_PLLSAI1_Config+0x18>
 8001c7e:	2b00      	cmp	r3, #0
 8001c80:	d0b5      	beq.n	8001bee <RCCEx_PLLSAI1_Config+0x16>
 8001c82:	68d3      	ldr	r3, [r2, #12]
 8001c84:	6842      	ldr	r2, [r0, #4]
 8001c86:	f3c3 1302 	ubfx	r3, r3, #4, #3
 8001c8a:	3301      	adds	r3, #1
 8001c8c:	4293      	cmp	r3, r2
 8001c8e:	d1ae      	bne.n	8001bee <RCCEx_PLLSAI1_Config+0x16>
 8001c90:	e7c4      	b.n	8001c1c <RCCEx_PLLSAI1_Config+0x44>
 8001c92:	6814      	ldr	r4, [r2, #0]
 8001c94:	03a4      	lsls	r4, r4, #14
 8001c96:	d4b7      	bmi.n	8001c08 <RCCEx_PLLSAI1_Config+0x30>
 8001c98:	6812      	ldr	r2, [r2, #0]
 8001c9a:	0352      	lsls	r2, r2, #13
 8001c9c:	d5a7      	bpl.n	8001bee <RCCEx_PLLSAI1_Config+0x16>
 8001c9e:	e7b3      	b.n	8001c08 <RCCEx_PLLSAI1_Config+0x30>
 8001ca0:	6812      	ldr	r2, [r2, #0]
 8001ca2:	0555      	lsls	r5, r2, #21
 8001ca4:	d5a3      	bpl.n	8001bee <RCCEx_PLLSAI1_Config+0x16>
 8001ca6:	e7af      	b.n	8001c08 <RCCEx_PLLSAI1_Config+0x30>
 8001ca8:	2003      	movs	r0, #3
 8001caa:	e7a1      	b.n	8001bf0 <RCCEx_PLLSAI1_Config+0x18>
 8001cac:	2901      	cmp	r1, #1
 8001cae:	6923      	ldr	r3, [r4, #16]
 8001cb0:	d00d      	beq.n	8001cce <RCCEx_PLLSAI1_Config+0xf6>
 8001cb2:	6941      	ldr	r1, [r0, #20]
 8001cb4:	6885      	ldr	r5, [r0, #8]
 8001cb6:	f023 63c0 	bic.w	r3, r3, #100663296	; 0x6000000
 8001cba:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8001cbe:	0849      	lsrs	r1, r1, #1
 8001cc0:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8001cc4:	3901      	subs	r1, #1
 8001cc6:	ea43 6341 	orr.w	r3, r3, r1, lsl #25
 8001cca:	6123      	str	r3, [r4, #16]
 8001ccc:	e7c3      	b.n	8001c56 <RCCEx_PLLSAI1_Config+0x7e>
 8001cce:	6901      	ldr	r1, [r0, #16]
 8001cd0:	6885      	ldr	r5, [r0, #8]
 8001cd2:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
 8001cd6:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8001cda:	0849      	lsrs	r1, r1, #1
 8001cdc:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8001ce0:	3901      	subs	r1, #1
 8001ce2:	ea43 5341 	orr.w	r3, r3, r1, lsl #21
 8001ce6:	6123      	str	r3, [r4, #16]
 8001ce8:	e7b5      	b.n	8001c56 <RCCEx_PLLSAI1_Config+0x7e>
 8001cea:	bf00      	nop
 8001cec:	40021000 	.word	0x40021000
 8001cf0:	200000ac 	.word	0x200000ac

08001cf4 <HAL_RCCEx_PeriphCLKConfig>:
 8001cf4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001cf6:	6803      	ldr	r3, [r0, #0]
 8001cf8:	f413 6700 	ands.w	r7, r3, #2048	; 0x800
 8001cfc:	b083      	sub	sp, #12
 8001cfe:	4604      	mov	r4, r0
 8001d00:	d00c      	beq.n	8001d1c <HAL_RCCEx_PeriphCLKConfig+0x28>
 8001d02:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8001d04:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8001d08:	f000 8132 	beq.w	8001f70 <HAL_RCCEx_PeriphCLKConfig+0x27c>
 8001d0c:	f5b1 0f40 	cmp.w	r1, #12582912	; 0xc00000
 8001d10:	f000 8106 	beq.w	8001f20 <HAL_RCCEx_PeriphCLKConfig+0x22c>
 8001d14:	2900      	cmp	r1, #0
 8001d16:	f000 8123 	beq.w	8001f60 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 8001d1a:	2701      	movs	r7, #1
 8001d1c:	0398      	lsls	r0, r3, #14
 8001d1e:	d54f      	bpl.n	8001dc0 <HAL_RCCEx_PeriphCLKConfig+0xcc>
 8001d20:	4aa4      	ldr	r2, [pc, #656]	; (8001fb4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001d22:	6d91      	ldr	r1, [r2, #88]	; 0x58
 8001d24:	00c9      	lsls	r1, r1, #3
 8001d26:	f140 80ef 	bpl.w	8001f08 <HAL_RCCEx_PeriphCLKConfig+0x214>
 8001d2a:	2000      	movs	r0, #0
 8001d2c:	49a2      	ldr	r1, [pc, #648]	; (8001fb8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8001d2e:	4da3      	ldr	r5, [pc, #652]	; (8001fbc <HAL_RCCEx_PeriphCLKConfig+0x2c8>)
 8001d30:	680a      	ldr	r2, [r1, #0]
 8001d32:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001d36:	600a      	str	r2, [r1, #0]
 8001d38:	682e      	ldr	r6, [r5, #0]
 8001d3a:	e004      	b.n	8001d46 <HAL_RCCEx_PeriphCLKConfig+0x52>
 8001d3c:	682a      	ldr	r2, [r5, #0]
 8001d3e:	1b92      	subs	r2, r2, r6
 8001d40:	2a02      	cmp	r2, #2
 8001d42:	f200 80f8 	bhi.w	8001f36 <HAL_RCCEx_PeriphCLKConfig+0x242>
 8001d46:	680a      	ldr	r2, [r1, #0]
 8001d48:	05d2      	lsls	r2, r2, #23
 8001d4a:	d5f7      	bpl.n	8001d3c <HAL_RCCEx_PeriphCLKConfig+0x48>
 8001d4c:	bbaf      	cbnz	r7, 8001dba <HAL_RCCEx_PeriphCLKConfig+0xc6>
 8001d4e:	4a99      	ldr	r2, [pc, #612]	; (8001fb4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001d50:	6da6      	ldr	r6, [r4, #88]	; 0x58
 8001d52:	f8d2 1090 	ldr.w	r1, [r2, #144]	; 0x90
 8001d56:	f411 7140 	ands.w	r1, r1, #768	; 0x300
 8001d5a:	d026      	beq.n	8001daa <HAL_RCCEx_PeriphCLKConfig+0xb6>
 8001d5c:	428e      	cmp	r6, r1
 8001d5e:	d024      	beq.n	8001daa <HAL_RCCEx_PeriphCLKConfig+0xb6>
 8001d60:	f8d2 6090 	ldr.w	r6, [r2, #144]	; 0x90
 8001d64:	f8d2 1090 	ldr.w	r1, [r2, #144]	; 0x90
 8001d68:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
 8001d6c:	f8c2 1090 	str.w	r1, [r2, #144]	; 0x90
 8001d70:	f8d2 1090 	ldr.w	r1, [r2, #144]	; 0x90
 8001d74:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
 8001d78:	f8c2 1090 	str.w	r1, [r2, #144]	; 0x90
 8001d7c:	f426 7c40 	bic.w	ip, r6, #768	; 0x300
 8001d80:	07f1      	lsls	r1, r6, #31
 8001d82:	f8c2 c090 	str.w	ip, [r2, #144]	; 0x90
 8001d86:	d50f      	bpl.n	8001da8 <HAL_RCCEx_PeriphCLKConfig+0xb4>
 8001d88:	f8d5 c000 	ldr.w	ip, [r5]
 8001d8c:	4611      	mov	r1, r2
 8001d8e:	f241 3688 	movw	r6, #5000	; 0x1388
 8001d92:	e005      	b.n	8001da0 <HAL_RCCEx_PeriphCLKConfig+0xac>
 8001d94:	682a      	ldr	r2, [r5, #0]
 8001d96:	eba2 020c 	sub.w	r2, r2, ip
 8001d9a:	42b2      	cmp	r2, r6
 8001d9c:	f200 80cb 	bhi.w	8001f36 <HAL_RCCEx_PeriphCLKConfig+0x242>
 8001da0:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001da4:	0792      	lsls	r2, r2, #30
 8001da6:	d5f5      	bpl.n	8001d94 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8001da8:	6da6      	ldr	r6, [r4, #88]	; 0x58
 8001daa:	4982      	ldr	r1, [pc, #520]	; (8001fb4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001dac:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001db0:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8001db4:	4332      	orrs	r2, r6
 8001db6:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
 8001dba:	2800      	cmp	r0, #0
 8001dbc:	f040 80bf 	bne.w	8001f3e <HAL_RCCEx_PeriphCLKConfig+0x24a>
 8001dc0:	07d9      	lsls	r1, r3, #31
 8001dc2:	d508      	bpl.n	8001dd6 <HAL_RCCEx_PeriphCLKConfig+0xe2>
 8001dc4:	497b      	ldr	r1, [pc, #492]	; (8001fb4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001dc6:	6a20      	ldr	r0, [r4, #32]
 8001dc8:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001dcc:	f022 0203 	bic.w	r2, r2, #3
 8001dd0:	4302      	orrs	r2, r0
 8001dd2:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001dd6:	079a      	lsls	r2, r3, #30
 8001dd8:	d508      	bpl.n	8001dec <HAL_RCCEx_PeriphCLKConfig+0xf8>
 8001dda:	4976      	ldr	r1, [pc, #472]	; (8001fb4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001ddc:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8001dde:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001de2:	f022 020c 	bic.w	r2, r2, #12
 8001de6:	4302      	orrs	r2, r0
 8001de8:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001dec:	075e      	lsls	r6, r3, #29
 8001dee:	d508      	bpl.n	8001e02 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8001df0:	4970      	ldr	r1, [pc, #448]	; (8001fb4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001df2:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8001df4:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001df8:	f022 0230 	bic.w	r2, r2, #48	; 0x30
 8001dfc:	4302      	orrs	r2, r0
 8001dfe:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001e02:	069d      	lsls	r5, r3, #26
 8001e04:	d508      	bpl.n	8001e18 <HAL_RCCEx_PeriphCLKConfig+0x124>
 8001e06:	496b      	ldr	r1, [pc, #428]	; (8001fb4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001e08:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8001e0a:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001e0e:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8001e12:	4302      	orrs	r2, r0
 8001e14:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001e18:	0598      	lsls	r0, r3, #22
 8001e1a:	d508      	bpl.n	8001e2e <HAL_RCCEx_PeriphCLKConfig+0x13a>
 8001e1c:	4965      	ldr	r1, [pc, #404]	; (8001fb4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001e1e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8001e20:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001e24:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8001e28:	4302      	orrs	r2, r0
 8001e2a:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001e2e:	0559      	lsls	r1, r3, #21
 8001e30:	d508      	bpl.n	8001e44 <HAL_RCCEx_PeriphCLKConfig+0x150>
 8001e32:	4960      	ldr	r1, [pc, #384]	; (8001fb4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001e34:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8001e36:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001e3a:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8001e3e:	4302      	orrs	r2, r0
 8001e40:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001e44:	065a      	lsls	r2, r3, #25
 8001e46:	d508      	bpl.n	8001e5a <HAL_RCCEx_PeriphCLKConfig+0x166>
 8001e48:	495a      	ldr	r1, [pc, #360]	; (8001fb4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001e4a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8001e4c:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001e50:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8001e54:	4302      	orrs	r2, r0
 8001e56:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001e5a:	061e      	lsls	r6, r3, #24
 8001e5c:	d508      	bpl.n	8001e70 <HAL_RCCEx_PeriphCLKConfig+0x17c>
 8001e5e:	4955      	ldr	r1, [pc, #340]	; (8001fb4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001e60:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8001e62:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001e66:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8001e6a:	4302      	orrs	r2, r0
 8001e6c:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001e70:	05dd      	lsls	r5, r3, #23
 8001e72:	d508      	bpl.n	8001e86 <HAL_RCCEx_PeriphCLKConfig+0x192>
 8001e74:	494f      	ldr	r1, [pc, #316]	; (8001fb4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001e76:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8001e78:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001e7c:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8001e80:	4302      	orrs	r2, r0
 8001e82:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001e86:	0318      	lsls	r0, r3, #12
 8001e88:	d50e      	bpl.n	8001ea8 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8001e8a:	4a4a      	ldr	r2, [pc, #296]	; (8001fb4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001e8c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8001e8e:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001e92:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8001e96:	430b      	orrs	r3, r1
 8001e98:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
 8001e9c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8001ea0:	d053      	beq.n	8001f4a <HAL_RCCEx_PeriphCLKConfig+0x256>
 8001ea2:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
 8001ea6:	d073      	beq.n	8001f90 <HAL_RCCEx_PeriphCLKConfig+0x29c>
 8001ea8:	6823      	ldr	r3, [r4, #0]
 8001eaa:	0359      	lsls	r1, r3, #13
 8001eac:	d50f      	bpl.n	8001ece <HAL_RCCEx_PeriphCLKConfig+0x1da>
 8001eae:	4a41      	ldr	r2, [pc, #260]	; (8001fb4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001eb0:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8001eb2:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001eb6:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8001eba:	430b      	orrs	r3, r1
 8001ebc:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
 8001ec0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8001ec4:	d046      	beq.n	8001f54 <HAL_RCCEx_PeriphCLKConfig+0x260>
 8001ec6:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
 8001eca:	d069      	beq.n	8001fa0 <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 8001ecc:	6823      	ldr	r3, [r4, #0]
 8001ece:	045a      	lsls	r2, r3, #17
 8001ed0:	d50c      	bpl.n	8001eec <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 8001ed2:	4938      	ldr	r1, [pc, #224]	; (8001fb4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001ed4:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8001ed6:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 8001eda:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8001ede:	4313      	orrs	r3, r2
 8001ee0:	f1b2 5f80 	cmp.w	r2, #268435456	; 0x10000000
 8001ee4:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8001ee8:	d049      	beq.n	8001f7e <HAL_RCCEx_PeriphCLKConfig+0x28a>
 8001eea:	6823      	ldr	r3, [r4, #0]
 8001eec:	041b      	lsls	r3, r3, #16
 8001eee:	d508      	bpl.n	8001f02 <HAL_RCCEx_PeriphCLKConfig+0x20e>
 8001ef0:	4a30      	ldr	r2, [pc, #192]	; (8001fb4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001ef2:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8001ef4:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001ef8:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8001efc:	430b      	orrs	r3, r1
 8001efe:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8001f02:	4638      	mov	r0, r7
 8001f04:	b003      	add	sp, #12
 8001f06:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f08:	6d91      	ldr	r1, [r2, #88]	; 0x58
 8001f0a:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001f0e:	6591      	str	r1, [r2, #88]	; 0x58
 8001f10:	6d92      	ldr	r2, [r2, #88]	; 0x58
 8001f12:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8001f16:	9201      	str	r2, [sp, #4]
 8001f18:	9a01      	ldr	r2, [sp, #4]
 8001f1a:	2001      	movs	r0, #1
 8001f1c:	e706      	b.n	8001d2c <HAL_RCCEx_PeriphCLKConfig+0x38>
 8001f1e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8001f20:	4a24      	ldr	r2, [pc, #144]	; (8001fb4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f22:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001f26:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8001f2a:	4319      	orrs	r1, r3
 8001f2c:	f8c2 1088 	str.w	r1, [r2, #136]	; 0x88
 8001f30:	6823      	ldr	r3, [r4, #0]
 8001f32:	2700      	movs	r7, #0
 8001f34:	e6f2      	b.n	8001d1c <HAL_RCCEx_PeriphCLKConfig+0x28>
 8001f36:	2703      	movs	r7, #3
 8001f38:	2800      	cmp	r0, #0
 8001f3a:	f43f af41 	beq.w	8001dc0 <HAL_RCCEx_PeriphCLKConfig+0xcc>
 8001f3e:	491d      	ldr	r1, [pc, #116]	; (8001fb4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f40:	6d8a      	ldr	r2, [r1, #88]	; 0x58
 8001f42:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8001f46:	658a      	str	r2, [r1, #88]	; 0x58
 8001f48:	e73a      	b.n	8001dc0 <HAL_RCCEx_PeriphCLKConfig+0xcc>
 8001f4a:	68d3      	ldr	r3, [r2, #12]
 8001f4c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8001f50:	60d3      	str	r3, [r2, #12]
 8001f52:	e7a9      	b.n	8001ea8 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8001f54:	68d3      	ldr	r3, [r2, #12]
 8001f56:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8001f5a:	60d3      	str	r3, [r2, #12]
 8001f5c:	6823      	ldr	r3, [r4, #0]
 8001f5e:	e7b6      	b.n	8001ece <HAL_RCCEx_PeriphCLKConfig+0x1da>
 8001f60:	3004      	adds	r0, #4
 8001f62:	f7ff fe39 	bl	8001bd8 <RCCEx_PLLSAI1_Config>
 8001f66:	4607      	mov	r7, r0
 8001f68:	2800      	cmp	r0, #0
 8001f6a:	d0d8      	beq.n	8001f1e <HAL_RCCEx_PeriphCLKConfig+0x22a>
 8001f6c:	6823      	ldr	r3, [r4, #0]
 8001f6e:	e6d5      	b.n	8001d1c <HAL_RCCEx_PeriphCLKConfig+0x28>
 8001f70:	4a10      	ldr	r2, [pc, #64]	; (8001fb4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f72:	68d3      	ldr	r3, [r2, #12]
 8001f74:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001f78:	60d3      	str	r3, [r2, #12]
 8001f7a:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8001f7c:	e7d0      	b.n	8001f20 <HAL_RCCEx_PeriphCLKConfig+0x22c>
 8001f7e:	2102      	movs	r1, #2
 8001f80:	1d20      	adds	r0, r4, #4
 8001f82:	f7ff fe29 	bl	8001bd8 <RCCEx_PLLSAI1_Config>
 8001f86:	6823      	ldr	r3, [r4, #0]
 8001f88:	2800      	cmp	r0, #0
 8001f8a:	d0af      	beq.n	8001eec <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 8001f8c:	4607      	mov	r7, r0
 8001f8e:	e7ad      	b.n	8001eec <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 8001f90:	2101      	movs	r1, #1
 8001f92:	1d20      	adds	r0, r4, #4
 8001f94:	f7ff fe20 	bl	8001bd8 <RCCEx_PLLSAI1_Config>
 8001f98:	2800      	cmp	r0, #0
 8001f9a:	bf18      	it	ne
 8001f9c:	4607      	movne	r7, r0
 8001f9e:	e783      	b.n	8001ea8 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8001fa0:	2101      	movs	r1, #1
 8001fa2:	1d20      	adds	r0, r4, #4
 8001fa4:	f7ff fe18 	bl	8001bd8 <RCCEx_PLLSAI1_Config>
 8001fa8:	6823      	ldr	r3, [r4, #0]
 8001faa:	2800      	cmp	r0, #0
 8001fac:	d08f      	beq.n	8001ece <HAL_RCCEx_PeriphCLKConfig+0x1da>
 8001fae:	4607      	mov	r7, r0
 8001fb0:	e78d      	b.n	8001ece <HAL_RCCEx_PeriphCLKConfig+0x1da>
 8001fb2:	bf00      	nop
 8001fb4:	40021000 	.word	0x40021000
 8001fb8:	40007000 	.word	0x40007000
 8001fbc:	200000ac 	.word	0x200000ac

08001fc0 <RCC_SetFlashLatencyFromMSIRange>:
 8001fc0:	491f      	ldr	r1, [pc, #124]	; (8002040 <RCC_SetFlashLatencyFromMSIRange+0x80>)
 8001fc2:	6d8b      	ldr	r3, [r1, #88]	; 0x58
 8001fc4:	00db      	lsls	r3, r3, #3
 8001fc6:	b082      	sub	sp, #8
 8001fc8:	d51d      	bpl.n	8002006 <RCC_SetFlashLatencyFromMSIRange+0x46>
 8001fca:	4b1e      	ldr	r3, [pc, #120]	; (8002044 <RCC_SetFlashLatencyFromMSIRange+0x84>)
 8001fcc:	681b      	ldr	r3, [r3, #0]
 8001fce:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8001fd2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001fd6:	d028      	beq.n	800202a <RCC_SetFlashLatencyFromMSIRange+0x6a>
 8001fd8:	2880      	cmp	r0, #128	; 0x80
 8001fda:	d812      	bhi.n	8002002 <RCC_SetFlashLatencyFromMSIRange+0x42>
 8001fdc:	d02e      	beq.n	800203c <RCC_SetFlashLatencyFromMSIRange+0x7c>
 8001fde:	f1a0 0370 	sub.w	r3, r0, #112	; 0x70
 8001fe2:	425a      	negs	r2, r3
 8001fe4:	415a      	adcs	r2, r3
 8001fe6:	4918      	ldr	r1, [pc, #96]	; (8002048 <RCC_SetFlashLatencyFromMSIRange+0x88>)
 8001fe8:	680b      	ldr	r3, [r1, #0]
 8001fea:	f023 0307 	bic.w	r3, r3, #7
 8001fee:	4313      	orrs	r3, r2
 8001ff0:	600b      	str	r3, [r1, #0]
 8001ff2:	6808      	ldr	r0, [r1, #0]
 8001ff4:	f000 0007 	and.w	r0, r0, #7
 8001ff8:	1a80      	subs	r0, r0, r2
 8001ffa:	bf18      	it	ne
 8001ffc:	2001      	movne	r0, #1
 8001ffe:	b002      	add	sp, #8
 8002000:	4770      	bx	lr
 8002002:	2203      	movs	r2, #3
 8002004:	e7ef      	b.n	8001fe6 <RCC_SetFlashLatencyFromMSIRange+0x26>
 8002006:	6d8b      	ldr	r3, [r1, #88]	; 0x58
 8002008:	4a0e      	ldr	r2, [pc, #56]	; (8002044 <RCC_SetFlashLatencyFromMSIRange+0x84>)
 800200a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800200e:	658b      	str	r3, [r1, #88]	; 0x58
 8002010:	6d8b      	ldr	r3, [r1, #88]	; 0x58
 8002012:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002016:	9301      	str	r3, [sp, #4]
 8002018:	9b01      	ldr	r3, [sp, #4]
 800201a:	6813      	ldr	r3, [r2, #0]
 800201c:	6d8a      	ldr	r2, [r1, #88]	; 0x58
 800201e:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8002022:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8002026:	658a      	str	r2, [r1, #88]	; 0x58
 8002028:	e7d3      	b.n	8001fd2 <RCC_SetFlashLatencyFromMSIRange+0x12>
 800202a:	2880      	cmp	r0, #128	; 0x80
 800202c:	d904      	bls.n	8002038 <RCC_SetFlashLatencyFromMSIRange+0x78>
 800202e:	28a0      	cmp	r0, #160	; 0xa0
 8002030:	bf8c      	ite	hi
 8002032:	2202      	movhi	r2, #2
 8002034:	2201      	movls	r2, #1
 8002036:	e7d6      	b.n	8001fe6 <RCC_SetFlashLatencyFromMSIRange+0x26>
 8002038:	2200      	movs	r2, #0
 800203a:	e7d4      	b.n	8001fe6 <RCC_SetFlashLatencyFromMSIRange+0x26>
 800203c:	2202      	movs	r2, #2
 800203e:	e7d2      	b.n	8001fe6 <RCC_SetFlashLatencyFromMSIRange+0x26>
 8002040:	40021000 	.word	0x40021000
 8002044:	40007000 	.word	0x40007000
 8002048:	40022000 	.word	0x40022000

0800204c <HAL_RCC_GetPCLK1Freq>:
 800204c:	4a06      	ldr	r2, [pc, #24]	; (8002068 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800204e:	4b07      	ldr	r3, [pc, #28]	; (800206c <HAL_RCC_GetPCLK1Freq+0x20>)
 8002050:	6892      	ldr	r2, [r2, #8]
 8002052:	4907      	ldr	r1, [pc, #28]	; (8002070 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002054:	f3c2 2202 	ubfx	r2, r2, #8, #3
 8002058:	4413      	add	r3, r2
 800205a:	6808      	ldr	r0, [r1, #0]
 800205c:	f893 3c88 	ldrb.w	r3, [r3, #3208]	; 0xc88
 8002060:	f003 031f 	and.w	r3, r3, #31
 8002064:	40d8      	lsrs	r0, r3
 8002066:	4770      	bx	lr
 8002068:	40021000 	.word	0x40021000
 800206c:	080079a8 	.word	0x080079a8
 8002070:	20000000 	.word	0x20000000

08002074 <HAL_RCC_GetSysClockFreq>:
 8002074:	4a26      	ldr	r2, [pc, #152]	; (8002110 <HAL_RCC_GetSysClockFreq+0x9c>)
 8002076:	6893      	ldr	r3, [r2, #8]
 8002078:	68d2      	ldr	r2, [r2, #12]
 800207a:	f013 030c 	ands.w	r3, r3, #12
 800207e:	d008      	beq.n	8002092 <HAL_RCC_GetSysClockFreq+0x1e>
 8002080:	2b0c      	cmp	r3, #12
 8002082:	d03a      	beq.n	80020fa <HAL_RCC_GetSysClockFreq+0x86>
 8002084:	2b04      	cmp	r3, #4
 8002086:	d036      	beq.n	80020f6 <HAL_RCC_GetSysClockFreq+0x82>
 8002088:	2b08      	cmp	r3, #8
 800208a:	4822      	ldr	r0, [pc, #136]	; (8002114 <HAL_RCC_GetSysClockFreq+0xa0>)
 800208c:	bf18      	it	ne
 800208e:	2000      	movne	r0, #0
 8002090:	4770      	bx	lr
 8002092:	4a1f      	ldr	r2, [pc, #124]	; (8002110 <HAL_RCC_GetSysClockFreq+0x9c>)
 8002094:	6811      	ldr	r1, [r2, #0]
 8002096:	0709      	lsls	r1, r1, #28
 8002098:	bf54      	ite	pl
 800209a:	f8d2 1094 	ldrpl.w	r1, [r2, #148]	; 0x94
 800209e:	6811      	ldrmi	r1, [r2, #0]
 80020a0:	4a1d      	ldr	r2, [pc, #116]	; (8002118 <HAL_RCC_GetSysClockFreq+0xa4>)
 80020a2:	bf54      	ite	pl
 80020a4:	f3c1 2103 	ubfxpl	r1, r1, #8, #4
 80020a8:	f3c1 1103 	ubfxmi	r1, r1, #4, #4
 80020ac:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 80020b0:	f8d2 0c90 	ldr.w	r0, [r2, #3216]	; 0xc90
 80020b4:	b303      	cbz	r3, 80020f8 <HAL_RCC_GetSysClockFreq+0x84>
 80020b6:	2b0c      	cmp	r3, #12
 80020b8:	d127      	bne.n	800210a <HAL_RCC_GetSysClockFreq+0x96>
 80020ba:	4b15      	ldr	r3, [pc, #84]	; (8002110 <HAL_RCC_GetSysClockFreq+0x9c>)
 80020bc:	68db      	ldr	r3, [r3, #12]
 80020be:	f003 0303 	and.w	r3, r3, #3
 80020c2:	2b02      	cmp	r3, #2
 80020c4:	d01f      	beq.n	8002106 <HAL_RCC_GetSysClockFreq+0x92>
 80020c6:	4a13      	ldr	r2, [pc, #76]	; (8002114 <HAL_RCC_GetSysClockFreq+0xa0>)
 80020c8:	2b03      	cmp	r3, #3
 80020ca:	bf08      	it	eq
 80020cc:	4610      	moveq	r0, r2
 80020ce:	4b10      	ldr	r3, [pc, #64]	; (8002110 <HAL_RCC_GetSysClockFreq+0x9c>)
 80020d0:	68d9      	ldr	r1, [r3, #12]
 80020d2:	68da      	ldr	r2, [r3, #12]
 80020d4:	68db      	ldr	r3, [r3, #12]
 80020d6:	f3c3 6341 	ubfx	r3, r3, #25, #2
 80020da:	f3c2 2206 	ubfx	r2, r2, #8, #7
 80020de:	f3c1 1102 	ubfx	r1, r1, #4, #3
 80020e2:	3301      	adds	r3, #1
 80020e4:	3101      	adds	r1, #1
 80020e6:	fb00 f002 	mul.w	r0, r0, r2
 80020ea:	005b      	lsls	r3, r3, #1
 80020ec:	fbb0 f0f1 	udiv	r0, r0, r1
 80020f0:	fbb0 f0f3 	udiv	r0, r0, r3
 80020f4:	4770      	bx	lr
 80020f6:	4809      	ldr	r0, [pc, #36]	; (800211c <HAL_RCC_GetSysClockFreq+0xa8>)
 80020f8:	4770      	bx	lr
 80020fa:	f002 0203 	and.w	r2, r2, #3
 80020fe:	2a01      	cmp	r2, #1
 8002100:	d0c7      	beq.n	8002092 <HAL_RCC_GetSysClockFreq+0x1e>
 8002102:	2000      	movs	r0, #0
 8002104:	e7d9      	b.n	80020ba <HAL_RCC_GetSysClockFreq+0x46>
 8002106:	4805      	ldr	r0, [pc, #20]	; (800211c <HAL_RCC_GetSysClockFreq+0xa8>)
 8002108:	e7e1      	b.n	80020ce <HAL_RCC_GetSysClockFreq+0x5a>
 800210a:	2000      	movs	r0, #0
 800210c:	4770      	bx	lr
 800210e:	bf00      	nop
 8002110:	40021000 	.word	0x40021000
 8002114:	007a1200 	.word	0x007a1200
 8002118:	080079a8 	.word	0x080079a8
 800211c:	00f42400 	.word	0x00f42400

08002120 <HAL_GPIO_Init>:
 8002120:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002124:	680c      	ldr	r4, [r1, #0]
 8002126:	b085      	sub	sp, #20
 8002128:	2c00      	cmp	r4, #0
 800212a:	f000 8087 	beq.w	800223c <HAL_GPIO_Init+0x11c>
 800212e:	2300      	movs	r3, #0
 8002130:	f04f 0b01 	mov.w	fp, #1
 8002134:	fa0b fe03 	lsl.w	lr, fp, r3
 8002138:	ea1e 0a04 	ands.w	sl, lr, r4
 800213c:	d079      	beq.n	8002232 <HAL_GPIO_Init+0x112>
 800213e:	684e      	ldr	r6, [r1, #4]
 8002140:	f006 0203 	and.w	r2, r6, #3
 8002144:	1e55      	subs	r5, r2, #1
 8002146:	2d01      	cmp	r5, #1
 8002148:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 800214c:	d979      	bls.n	8002242 <HAL_GPIO_Init+0x122>
 800214e:	2a03      	cmp	r2, #3
 8002150:	f040 80bd 	bne.w	80022ce <HAL_GPIO_Init+0x1ae>
 8002154:	fa02 f20c 	lsl.w	r2, r2, ip
 8002158:	43d5      	mvns	r5, r2
 800215a:	f8d0 c000 	ldr.w	ip, [r0]
 800215e:	ea0c 0505 	and.w	r5, ip, r5
 8002162:	432a      	orrs	r2, r5
 8002164:	f416 3f40 	tst.w	r6, #196608	; 0x30000
 8002168:	6002      	str	r2, [r0, #0]
 800216a:	d062      	beq.n	8002232 <HAL_GPIO_Init+0x112>
 800216c:	4d5f      	ldr	r5, [pc, #380]	; (80022ec <HAL_GPIO_Init+0x1cc>)
 800216e:	6e2a      	ldr	r2, [r5, #96]	; 0x60
 8002170:	f042 0201 	orr.w	r2, r2, #1
 8002174:	662a      	str	r2, [r5, #96]	; 0x60
 8002176:	6e2d      	ldr	r5, [r5, #96]	; 0x60
 8002178:	f023 0203 	bic.w	r2, r3, #3
 800217c:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 8002180:	f005 0501 	and.w	r5, r5, #1
 8002184:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 8002188:	9503      	str	r5, [sp, #12]
 800218a:	f003 0503 	and.w	r5, r3, #3
 800218e:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8002192:	f8d2 e008 	ldr.w	lr, [r2, #8]
 8002196:	00ad      	lsls	r5, r5, #2
 8002198:	270f      	movs	r7, #15
 800219a:	fa07 fc05 	lsl.w	ip, r7, r5
 800219e:	f1b0 4f90 	cmp.w	r0, #1207959552	; 0x48000000
 80021a2:	ea2e 0e0c 	bic.w	lr, lr, ip
 80021a6:	d016      	beq.n	80021d6 <HAL_GPIO_Init+0xb6>
 80021a8:	4f51      	ldr	r7, [pc, #324]	; (80022f0 <HAL_GPIO_Init+0x1d0>)
 80021aa:	42b8      	cmp	r0, r7
 80021ac:	f000 8097 	beq.w	80022de <HAL_GPIO_Init+0x1be>
 80021b0:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 80021b4:	42b8      	cmp	r0, r7
 80021b6:	f000 8095 	beq.w	80022e4 <HAL_GPIO_Init+0x1c4>
 80021ba:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 80021be:	42b8      	cmp	r0, r7
 80021c0:	f000 808a 	beq.w	80022d8 <HAL_GPIO_Init+0x1b8>
 80021c4:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 80021c8:	42b8      	cmp	r0, r7
 80021ca:	bf0c      	ite	eq
 80021cc:	f04f 0c04 	moveq.w	ip, #4
 80021d0:	f04f 0c07 	movne.w	ip, #7
 80021d4:	e001      	b.n	80021da <HAL_GPIO_Init+0xba>
 80021d6:	f04f 0c00 	mov.w	ip, #0
 80021da:	fa0c f505 	lsl.w	r5, ip, r5
 80021de:	ea45 050e 	orr.w	r5, r5, lr
 80021e2:	6095      	str	r5, [r2, #8]
 80021e4:	4a43      	ldr	r2, [pc, #268]	; (80022f4 <HAL_GPIO_Init+0x1d4>)
 80021e6:	6892      	ldr	r2, [r2, #8]
 80021e8:	ea6f 0c0a 	mvn.w	ip, sl
 80021ec:	02f5      	lsls	r5, r6, #11
 80021ee:	4d41      	ldr	r5, [pc, #260]	; (80022f4 <HAL_GPIO_Init+0x1d4>)
 80021f0:	bf54      	ite	pl
 80021f2:	ea0c 0202 	andpl.w	r2, ip, r2
 80021f6:	ea4a 0202 	orrmi.w	r2, sl, r2
 80021fa:	60aa      	str	r2, [r5, #8]
 80021fc:	68ed      	ldr	r5, [r5, #12]
 80021fe:	02b2      	lsls	r2, r6, #10
 8002200:	4a3c      	ldr	r2, [pc, #240]	; (80022f4 <HAL_GPIO_Init+0x1d4>)
 8002202:	bf54      	ite	pl
 8002204:	ea0c 0505 	andpl.w	r5, ip, r5
 8002208:	ea4a 0505 	orrmi.w	r5, sl, r5
 800220c:	60d5      	str	r5, [r2, #12]
 800220e:	6855      	ldr	r5, [r2, #4]
 8002210:	4a38      	ldr	r2, [pc, #224]	; (80022f4 <HAL_GPIO_Init+0x1d4>)
 8002212:	03b7      	lsls	r7, r6, #14
 8002214:	bf54      	ite	pl
 8002216:	ea0c 0505 	andpl.w	r5, ip, r5
 800221a:	ea4a 0505 	orrmi.w	r5, sl, r5
 800221e:	6055      	str	r5, [r2, #4]
 8002220:	6812      	ldr	r2, [r2, #0]
 8002222:	03f5      	lsls	r5, r6, #15
 8002224:	4d33      	ldr	r5, [pc, #204]	; (80022f4 <HAL_GPIO_Init+0x1d4>)
 8002226:	bf54      	ite	pl
 8002228:	ea0c 0202 	andpl.w	r2, ip, r2
 800222c:	ea4a 0202 	orrmi.w	r2, sl, r2
 8002230:	602a      	str	r2, [r5, #0]
 8002232:	3301      	adds	r3, #1
 8002234:	fa34 f203 	lsrs.w	r2, r4, r3
 8002238:	f47f af7c 	bne.w	8002134 <HAL_GPIO_Init+0x14>
 800223c:	b005      	add	sp, #20
 800223e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002242:	f8d0 8008 	ldr.w	r8, [r0, #8]
 8002246:	68cf      	ldr	r7, [r1, #12]
 8002248:	2503      	movs	r5, #3
 800224a:	fa05 f50c 	lsl.w	r5, r5, ip
 800224e:	ea28 0805 	bic.w	r8, r8, r5
 8002252:	fa07 f90c 	lsl.w	r9, r7, ip
 8002256:	ea49 0808 	orr.w	r8, r9, r8
 800225a:	f8c0 8008 	str.w	r8, [r0, #8]
 800225e:	f8d0 8004 	ldr.w	r8, [r0, #4]
 8002262:	f3c6 1900 	ubfx	r9, r6, #4, #1
 8002266:	ea28 080e 	bic.w	r8, r8, lr
 800226a:	fa09 fe03 	lsl.w	lr, r9, r3
 800226e:	ea4e 0e08 	orr.w	lr, lr, r8
 8002272:	43ed      	mvns	r5, r5
 8002274:	f8c0 e004 	str.w	lr, [r0, #4]
 8002278:	f8d0 800c 	ldr.w	r8, [r0, #12]
 800227c:	688f      	ldr	r7, [r1, #8]
 800227e:	ea08 0805 	and.w	r8, r8, r5
 8002282:	fa07 fe0c 	lsl.w	lr, r7, ip
 8002286:	ea4e 0e08 	orr.w	lr, lr, r8
 800228a:	2a02      	cmp	r2, #2
 800228c:	f8c0 e00c 	str.w	lr, [r0, #12]
 8002290:	d002      	beq.n	8002298 <HAL_GPIO_Init+0x178>
 8002292:	fa02 f20c 	lsl.w	r2, r2, ip
 8002296:	e760      	b.n	800215a <HAL_GPIO_Init+0x3a>
 8002298:	ea4f 08d3 	mov.w	r8, r3, lsr #3
 800229c:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 80022a0:	f003 0e07 	and.w	lr, r3, #7
 80022a4:	f8d8 7020 	ldr.w	r7, [r8, #32]
 80022a8:	9701      	str	r7, [sp, #4]
 80022aa:	690f      	ldr	r7, [r1, #16]
 80022ac:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80022b0:	fa07 f90e 	lsl.w	r9, r7, lr
 80022b4:	270f      	movs	r7, #15
 80022b6:	fa07 fe0e 	lsl.w	lr, r7, lr
 80022ba:	9f01      	ldr	r7, [sp, #4]
 80022bc:	ea27 0e0e 	bic.w	lr, r7, lr
 80022c0:	ea49 0e0e 	orr.w	lr, r9, lr
 80022c4:	fa02 f20c 	lsl.w	r2, r2, ip
 80022c8:	f8c8 e020 	str.w	lr, [r8, #32]
 80022cc:	e745      	b.n	800215a <HAL_GPIO_Init+0x3a>
 80022ce:	2503      	movs	r5, #3
 80022d0:	fa05 f50c 	lsl.w	r5, r5, ip
 80022d4:	43ed      	mvns	r5, r5
 80022d6:	e7cf      	b.n	8002278 <HAL_GPIO_Init+0x158>
 80022d8:	f04f 0c03 	mov.w	ip, #3
 80022dc:	e77d      	b.n	80021da <HAL_GPIO_Init+0xba>
 80022de:	f04f 0c01 	mov.w	ip, #1
 80022e2:	e77a      	b.n	80021da <HAL_GPIO_Init+0xba>
 80022e4:	f04f 0c02 	mov.w	ip, #2
 80022e8:	e777      	b.n	80021da <HAL_GPIO_Init+0xba>
 80022ea:	bf00      	nop
 80022ec:	40021000 	.word	0x40021000
 80022f0:	48000400 	.word	0x48000400
 80022f4:	40010400 	.word	0x40010400

080022f8 <HAL_DMA_IRQHandler>:
 80022f8:	b470      	push	{r4, r5, r6}
 80022fa:	e9d0 6310 	ldrd	r6, r3, [r0, #64]	; 0x40
 80022fe:	2204      	movs	r2, #4
 8002300:	6831      	ldr	r1, [r6, #0]
 8002302:	6805      	ldr	r5, [r0, #0]
 8002304:	f003 031c 	and.w	r3, r3, #28
 8002308:	409a      	lsls	r2, r3
 800230a:	420a      	tst	r2, r1
 800230c:	682c      	ldr	r4, [r5, #0]
 800230e:	d00e      	beq.n	800232e <HAL_DMA_IRQHandler+0x36>
 8002310:	f014 0f04 	tst.w	r4, #4
 8002314:	d00b      	beq.n	800232e <HAL_DMA_IRQHandler+0x36>
 8002316:	682b      	ldr	r3, [r5, #0]
 8002318:	069b      	lsls	r3, r3, #26
 800231a:	d403      	bmi.n	8002324 <HAL_DMA_IRQHandler+0x2c>
 800231c:	682b      	ldr	r3, [r5, #0]
 800231e:	f023 0304 	bic.w	r3, r3, #4
 8002322:	602b      	str	r3, [r5, #0]
 8002324:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8002326:	6072      	str	r2, [r6, #4]
 8002328:	b1cb      	cbz	r3, 800235e <HAL_DMA_IRQHandler+0x66>
 800232a:	bc70      	pop	{r4, r5, r6}
 800232c:	4718      	bx	r3
 800232e:	2202      	movs	r2, #2
 8002330:	409a      	lsls	r2, r3
 8002332:	420a      	tst	r2, r1
 8002334:	d015      	beq.n	8002362 <HAL_DMA_IRQHandler+0x6a>
 8002336:	f014 0f02 	tst.w	r4, #2
 800233a:	d012      	beq.n	8002362 <HAL_DMA_IRQHandler+0x6a>
 800233c:	682b      	ldr	r3, [r5, #0]
 800233e:	0699      	lsls	r1, r3, #26
 8002340:	d406      	bmi.n	8002350 <HAL_DMA_IRQHandler+0x58>
 8002342:	682b      	ldr	r3, [r5, #0]
 8002344:	2101      	movs	r1, #1
 8002346:	f023 030a 	bic.w	r3, r3, #10
 800234a:	602b      	str	r3, [r5, #0]
 800234c:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8002350:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8002352:	6072      	str	r2, [r6, #4]
 8002354:	2200      	movs	r2, #0
 8002356:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800235a:	2b00      	cmp	r3, #0
 800235c:	d1e5      	bne.n	800232a <HAL_DMA_IRQHandler+0x32>
 800235e:	bc70      	pop	{r4, r5, r6}
 8002360:	4770      	bx	lr
 8002362:	2208      	movs	r2, #8
 8002364:	409a      	lsls	r2, r3
 8002366:	420a      	tst	r2, r1
 8002368:	d0f9      	beq.n	800235e <HAL_DMA_IRQHandler+0x66>
 800236a:	0722      	lsls	r2, r4, #28
 800236c:	d5f7      	bpl.n	800235e <HAL_DMA_IRQHandler+0x66>
 800236e:	682a      	ldr	r2, [r5, #0]
 8002370:	6b41      	ldr	r1, [r0, #52]	; 0x34
 8002372:	f022 020e 	bic.w	r2, r2, #14
 8002376:	602a      	str	r2, [r5, #0]
 8002378:	2201      	movs	r2, #1
 800237a:	fa02 f303 	lsl.w	r3, r2, r3
 800237e:	2400      	movs	r4, #0
 8002380:	6073      	str	r3, [r6, #4]
 8002382:	63c2      	str	r2, [r0, #60]	; 0x3c
 8002384:	f880 4024 	strb.w	r4, [r0, #36]	; 0x24
 8002388:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800238c:	2900      	cmp	r1, #0
 800238e:	d0e6      	beq.n	800235e <HAL_DMA_IRQHandler+0x66>
 8002390:	bc70      	pop	{r4, r5, r6}
 8002392:	4708      	bx	r1

08002394 <HAL_DMA_Start_IT>:
 8002394:	b4f0      	push	{r4, r5, r6, r7}
 8002396:	f890 4024 	ldrb.w	r4, [r0, #36]	; 0x24
 800239a:	2c01      	cmp	r4, #1
 800239c:	d03d      	beq.n	800241a <HAL_DMA_Start_IT+0x86>
 800239e:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 80023a2:	2601      	movs	r6, #1
 80023a4:	42b4      	cmp	r4, r6
 80023a6:	b2e5      	uxtb	r5, r4
 80023a8:	f880 6024 	strb.w	r6, [r0, #36]	; 0x24
 80023ac:	d005      	beq.n	80023ba <HAL_DMA_Start_IT+0x26>
 80023ae:	2300      	movs	r3, #0
 80023b0:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 80023b4:	bcf0      	pop	{r4, r5, r6, r7}
 80023b6:	2002      	movs	r0, #2
 80023b8:	4770      	bx	lr
 80023ba:	6804      	ldr	r4, [r0, #0]
 80023bc:	f8d0 c040 	ldr.w	ip, [r0, #64]	; 0x40
 80023c0:	2702      	movs	r7, #2
 80023c2:	2600      	movs	r6, #0
 80023c4:	f880 7025 	strb.w	r7, [r0, #37]	; 0x25
 80023c8:	63c6      	str	r6, [r0, #60]	; 0x3c
 80023ca:	6c47      	ldr	r7, [r0, #68]	; 0x44
 80023cc:	6826      	ldr	r6, [r4, #0]
 80023ce:	f007 071c 	and.w	r7, r7, #28
 80023d2:	f026 0601 	bic.w	r6, r6, #1
 80023d6:	6026      	str	r6, [r4, #0]
 80023d8:	40bd      	lsls	r5, r7
 80023da:	6886      	ldr	r6, [r0, #8]
 80023dc:	f8cc 5004 	str.w	r5, [ip, #4]
 80023e0:	6063      	str	r3, [r4, #4]
 80023e2:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80023e4:	2e10      	cmp	r6, #16
 80023e6:	bf0b      	itete	eq
 80023e8:	60a2      	streq	r2, [r4, #8]
 80023ea:	60a1      	strne	r1, [r4, #8]
 80023ec:	60e1      	streq	r1, [r4, #12]
 80023ee:	60e2      	strne	r2, [r4, #12]
 80023f0:	b153      	cbz	r3, 8002408 <HAL_DMA_Start_IT+0x74>
 80023f2:	6823      	ldr	r3, [r4, #0]
 80023f4:	f043 030e 	orr.w	r3, r3, #14
 80023f8:	6023      	str	r3, [r4, #0]
 80023fa:	6823      	ldr	r3, [r4, #0]
 80023fc:	f043 0301 	orr.w	r3, r3, #1
 8002400:	6023      	str	r3, [r4, #0]
 8002402:	2000      	movs	r0, #0
 8002404:	bcf0      	pop	{r4, r5, r6, r7}
 8002406:	4770      	bx	lr
 8002408:	6823      	ldr	r3, [r4, #0]
 800240a:	f023 0304 	bic.w	r3, r3, #4
 800240e:	6023      	str	r3, [r4, #0]
 8002410:	6823      	ldr	r3, [r4, #0]
 8002412:	f043 030a 	orr.w	r3, r3, #10
 8002416:	6023      	str	r3, [r4, #0]
 8002418:	e7ef      	b.n	80023fa <HAL_DMA_Start_IT+0x66>
 800241a:	2002      	movs	r0, #2
 800241c:	bcf0      	pop	{r4, r5, r6, r7}
 800241e:	4770      	bx	lr

08002420 <HAL_NVIC_EnableIRQ.part.0>:
 8002420:	4a04      	ldr	r2, [pc, #16]	; (8002434 <HAL_NVIC_EnableIRQ.part.0+0x14>)
 8002422:	f000 011f 	and.w	r1, r0, #31
 8002426:	2301      	movs	r3, #1
 8002428:	0940      	lsrs	r0, r0, #5
 800242a:	408b      	lsls	r3, r1
 800242c:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 8002430:	4770      	bx	lr
 8002432:	bf00      	nop
 8002434:	e000e100 	.word	0xe000e100

08002438 <HAL_InitTick>:
 8002438:	b570      	push	{r4, r5, r6, lr}
 800243a:	4d10      	ldr	r5, [pc, #64]	; (800247c <HAL_InitTick+0x44>)
 800243c:	4a10      	ldr	r2, [pc, #64]	; (8002480 <HAL_InitTick+0x48>)
 800243e:	682b      	ldr	r3, [r5, #0]
 8002440:	fba2 2303 	umull	r2, r3, r2, r3
 8002444:	099b      	lsrs	r3, r3, #6
 8002446:	3b01      	subs	r3, #1
 8002448:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800244c:	d20c      	bcs.n	8002468 <HAL_InitTick+0x30>
 800244e:	4a0d      	ldr	r2, [pc, #52]	; (8002484 <HAL_InitTick+0x4c>)
 8002450:	490d      	ldr	r1, [pc, #52]	; (8002488 <HAL_InitTick+0x50>)
 8002452:	6053      	str	r3, [r2, #4]
 8002454:	23f0      	movs	r3, #240	; 0xf0
 8002456:	f881 3023 	strb.w	r3, [r1, #35]	; 0x23
 800245a:	2600      	movs	r6, #0
 800245c:	2307      	movs	r3, #7
 800245e:	280f      	cmp	r0, #15
 8002460:	6096      	str	r6, [r2, #8]
 8002462:	4604      	mov	r4, r0
 8002464:	6013      	str	r3, [r2, #0]
 8002466:	d901      	bls.n	800246c <HAL_InitTick+0x34>
 8002468:	2001      	movs	r0, #1
 800246a:	bd70      	pop	{r4, r5, r6, pc}
 800246c:	4601      	mov	r1, r0
 800246e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002472:	f7fd fead 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8002476:	606c      	str	r4, [r5, #4]
 8002478:	4630      	mov	r0, r6
 800247a:	bd70      	pop	{r4, r5, r6, pc}
 800247c:	20000000 	.word	0x20000000
 8002480:	10624dd3 	.word	0x10624dd3
 8002484:	e000e010 	.word	0xe000e010
 8002488:	e000ed00 	.word	0xe000ed00

0800248c <__NVIC_SystemReset>:
 800248c:	f3bf 8f4f 	dsb	sy
 8002490:	4905      	ldr	r1, [pc, #20]	; (80024a8 <__NVIC_SystemReset+0x1c>)
 8002492:	4b06      	ldr	r3, [pc, #24]	; (80024ac <__NVIC_SystemReset+0x20>)
 8002494:	68ca      	ldr	r2, [r1, #12]
 8002496:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 800249a:	4313      	orrs	r3, r2
 800249c:	60cb      	str	r3, [r1, #12]
 800249e:	f3bf 8f4f 	dsb	sy
 80024a2:	bf00      	nop
 80024a4:	e7fd      	b.n	80024a2 <__NVIC_SystemReset+0x16>
 80024a6:	bf00      	nop
 80024a8:	e000ed00 	.word	0xe000ed00
 80024ac:	05fa0004 	.word	0x05fa0004

080024b0 <acc_integration_sleep_us.constprop.0>:
 80024b0:	b538      	push	{r3, r4, r5, lr}
 80024b2:	4b52      	ldr	r3, [pc, #328]	; (80025fc <acc_integration_sleep_us.constprop.0+0x14c>)
 80024b4:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
 80024b8:	2100      	movs	r1, #0
 80024ba:	2a01      	cmp	r2, #1
 80024bc:	f883 1051 	strb.w	r1, [r3, #81]	; 0x51
 80024c0:	f000 808d 	beq.w	80025de <acc_integration_sleep_us.constprop.0+0x12e>
 80024c4:	685a      	ldr	r2, [r3, #4]
 80024c6:	2153      	movs	r1, #83	; 0x53
 80024c8:	2502      	movs	r5, #2
 80024ca:	20ca      	movs	r0, #202	; 0xca
 80024cc:	2401      	movs	r4, #1
 80024ce:	f883 5025 	strb.w	r5, [r3, #37]	; 0x25
 80024d2:	f883 4024 	strb.w	r4, [r3, #36]	; 0x24
 80024d6:	6250      	str	r0, [r2, #36]	; 0x24
 80024d8:	6251      	str	r1, [r2, #36]	; 0x24
 80024da:	6891      	ldr	r1, [r2, #8]
 80024dc:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 80024e0:	6091      	str	r1, [r2, #8]
 80024e2:	68d1      	ldr	r1, [r2, #12]
 80024e4:	b2c9      	uxtb	r1, r1
 80024e6:	f461 6190 	orn	r1, r1, #1152	; 0x480
 80024ea:	60d1      	str	r1, [r2, #12]
 80024ec:	68d1      	ldr	r1, [r2, #12]
 80024ee:	0649      	lsls	r1, r1, #25
 80024f0:	d564      	bpl.n	80025bc <acc_integration_sleep_us.constprop.0+0x10c>
 80024f2:	211f      	movs	r1, #31
 80024f4:	6151      	str	r1, [r2, #20]
 80024f6:	6891      	ldr	r1, [r2, #8]
 80024f8:	4841      	ldr	r0, [pc, #260]	; (8002600 <acc_integration_sleep_us.constprop.0+0x150>)
 80024fa:	f021 0107 	bic.w	r1, r1, #7
 80024fe:	f041 0103 	orr.w	r1, r1, #3
 8002502:	6091      	str	r1, [r2, #8]
 8002504:	6801      	ldr	r1, [r0, #0]
 8002506:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800250a:	6001      	str	r1, [r0, #0]
 800250c:	6881      	ldr	r1, [r0, #8]
 800250e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8002512:	6081      	str	r1, [r0, #8]
 8002514:	6891      	ldr	r1, [r2, #8]
 8002516:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800251a:	6091      	str	r1, [r2, #8]
 800251c:	6891      	ldr	r1, [r2, #8]
 800251e:	24ff      	movs	r4, #255	; 0xff
 8002520:	f441 6180 	orr.w	r1, r1, #1024	; 0x400
 8002524:	2001      	movs	r0, #1
 8002526:	6091      	str	r1, [r2, #8]
 8002528:	6254      	str	r4, [r2, #36]	; 0x24
 800252a:	f883 0025 	strb.w	r0, [r3, #37]	; 0x25
 800252e:	f893 1051 	ldrb.w	r1, [r3, #81]	; 0x51
 8002532:	2200      	movs	r2, #0
 8002534:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8002538:	2900      	cmp	r1, #0
 800253a:	d15b      	bne.n	80025f4 <acc_integration_sleep_us.constprop.0+0x144>
 800253c:	b672      	cpsid	i
 800253e:	f3bf 8f4f 	dsb	sy
 8002542:	f3bf 8f6f 	isb	sy
 8002546:	f893 2051 	ldrb.w	r2, [r3, #81]	; 0x51
 800254a:	b902      	cbnz	r2, 800254e <acc_integration_sleep_us.constprop.0+0x9e>
 800254c:	bf30      	wfi
 800254e:	b662      	cpsie	i
 8002550:	f3bf 8f4f 	dsb	sy
 8002554:	f3bf 8f6f 	isb	sy
 8002558:	f893 2051 	ldrb.w	r2, [r3, #81]	; 0x51
 800255c:	2a00      	cmp	r2, #0
 800255e:	d0ed      	beq.n	800253c <acc_integration_sleep_us.constprop.0+0x8c>
 8002560:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
 8002564:	2100      	movs	r1, #0
 8002566:	2a01      	cmp	r2, #1
 8002568:	f883 1051 	strb.w	r1, [r3, #81]	; 0x51
 800256c:	d037      	beq.n	80025de <acc_integration_sleep_us.constprop.0+0x12e>
 800256e:	6858      	ldr	r0, [r3, #4]
 8002570:	2253      	movs	r2, #83	; 0x53
 8002572:	2401      	movs	r4, #1
 8002574:	2502      	movs	r5, #2
 8002576:	21ca      	movs	r1, #202	; 0xca
 8002578:	f883 5025 	strb.w	r5, [r3, #37]	; 0x25
 800257c:	f883 4024 	strb.w	r4, [r3, #36]	; 0x24
 8002580:	6241      	str	r1, [r0, #36]	; 0x24
 8002582:	6242      	str	r2, [r0, #36]	; 0x24
 8002584:	6882      	ldr	r2, [r0, #8]
 8002586:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800258a:	6082      	str	r2, [r0, #8]
 800258c:	6882      	ldr	r2, [r0, #8]
 800258e:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8002592:	6082      	str	r2, [r0, #8]
 8002594:	681c      	ldr	r4, [r3, #0]
 8002596:	e004      	b.n	80025a2 <acc_integration_sleep_us.constprop.0+0xf2>
 8002598:	6819      	ldr	r1, [r3, #0]
 800259a:	1b09      	subs	r1, r1, r4
 800259c:	f5b1 7f7a 	cmp.w	r1, #1000	; 0x3e8
 80025a0:	d81f      	bhi.n	80025e2 <acc_integration_sleep_us.constprop.0+0x132>
 80025a2:	68c2      	ldr	r2, [r0, #12]
 80025a4:	f012 0204 	ands.w	r2, r2, #4
 80025a8:	d0f6      	beq.n	8002598 <acc_integration_sleep_us.constprop.0+0xe8>
 80025aa:	24ff      	movs	r4, #255	; 0xff
 80025ac:	2201      	movs	r2, #1
 80025ae:	2100      	movs	r1, #0
 80025b0:	6244      	str	r4, [r0, #36]	; 0x24
 80025b2:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 80025b6:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 80025ba:	bd38      	pop	{r3, r4, r5, pc}
 80025bc:	681c      	ldr	r4, [r3, #0]
 80025be:	68d1      	ldr	r1, [r2, #12]
 80025c0:	f011 0104 	ands.w	r1, r1, #4
 80025c4:	d195      	bne.n	80024f2 <acc_integration_sleep_us.constprop.0+0x42>
 80025c6:	6818      	ldr	r0, [r3, #0]
 80025c8:	1b00      	subs	r0, r0, r4
 80025ca:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80025ce:	d9f6      	bls.n	80025be <acc_integration_sleep_us.constprop.0+0x10e>
 80025d0:	24ff      	movs	r4, #255	; 0xff
 80025d2:	2003      	movs	r0, #3
 80025d4:	6254      	str	r4, [r2, #36]	; 0x24
 80025d6:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 80025da:	f883 0025 	strb.w	r0, [r3, #37]	; 0x25
 80025de:	f7ff ff55 	bl	800248c <__NVIC_SystemReset>
 80025e2:	24ff      	movs	r4, #255	; 0xff
 80025e4:	2103      	movs	r1, #3
 80025e6:	6244      	str	r4, [r0, #36]	; 0x24
 80025e8:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80025ec:	f883 1025 	strb.w	r1, [r3, #37]	; 0x25
 80025f0:	f7ff ff4c 	bl	800248c <__NVIC_SystemReset>
 80025f4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80025f8:	e7b9      	b.n	800256e <acc_integration_sleep_us.constprop.0+0xbe>
 80025fa:	bf00      	nop
 80025fc:	200000ac 	.word	0x200000ac
 8002600:	40010400 	.word	0x40010400

08002604 <HAL_UART_Init.constprop.0>:
 8002604:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002608:	6f86      	ldr	r6, [r0, #120]	; 0x78
 800260a:	b0a1      	sub	sp, #132	; 0x84
 800260c:	4604      	mov	r4, r0
 800260e:	2e00      	cmp	r6, #0
 8002610:	d05e      	beq.n	80026d0 <HAL_UART_Init.constprop.0+0xcc>
 8002612:	6825      	ldr	r5, [r4, #0]
 8002614:	68a3      	ldr	r3, [r4, #8]
 8002616:	6926      	ldr	r6, [r4, #16]
 8002618:	6960      	ldr	r0, [r4, #20]
 800261a:	4ac6      	ldr	r2, [pc, #792]	; (8002934 <HAL_UART_Init.constprop.0+0x330>)
 800261c:	2124      	movs	r1, #36	; 0x24
 800261e:	67a1      	str	r1, [r4, #120]	; 0x78
 8002620:	6829      	ldr	r1, [r5, #0]
 8002622:	f021 0101 	bic.w	r1, r1, #1
 8002626:	6029      	str	r1, [r5, #0]
 8002628:	4333      	orrs	r3, r6
 800262a:	6829      	ldr	r1, [r5, #0]
 800262c:	4303      	orrs	r3, r0
 800262e:	69e0      	ldr	r0, [r4, #28]
 8002630:	400a      	ands	r2, r1
 8002632:	4303      	orrs	r3, r0
 8002634:	4313      	orrs	r3, r2
 8002636:	602b      	str	r3, [r5, #0]
 8002638:	686b      	ldr	r3, [r5, #4]
 800263a:	68e1      	ldr	r1, [r4, #12]
 800263c:	4abe      	ldr	r2, [pc, #760]	; (8002938 <HAL_UART_Init.constprop.0+0x334>)
 800263e:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8002642:	430b      	orrs	r3, r1
 8002644:	606b      	str	r3, [r5, #4]
 8002646:	4295      	cmp	r5, r2
 8002648:	69a3      	ldr	r3, [r4, #24]
 800264a:	68aa      	ldr	r2, [r5, #8]
 800264c:	f000 80ba 	beq.w	80027c4 <HAL_UART_Init.constprop.0+0x1c0>
 8002650:	6a26      	ldr	r6, [r4, #32]
 8002652:	49ba      	ldr	r1, [pc, #744]	; (800293c <HAL_UART_Init.constprop.0+0x338>)
 8002654:	f422 6230 	bic.w	r2, r2, #2816	; 0xb00
 8002658:	4333      	orrs	r3, r6
 800265a:	4313      	orrs	r3, r2
 800265c:	428d      	cmp	r5, r1
 800265e:	60ab      	str	r3, [r5, #8]
 8002660:	d00e      	beq.n	8002680 <HAL_UART_Init.constprop.0+0x7c>
 8002662:	4bb7      	ldr	r3, [pc, #732]	; (8002940 <HAL_UART_Init.constprop.0+0x33c>)
 8002664:	429d      	cmp	r5, r3
 8002666:	f000 8215 	beq.w	8002a94 <HAL_UART_Init.constprop.0+0x490>
 800266a:	4bb6      	ldr	r3, [pc, #728]	; (8002944 <HAL_UART_Init.constprop.0+0x340>)
 800266c:	429d      	cmp	r5, r3
 800266e:	f000 812e 	beq.w	80028ce <HAL_UART_Init.constprop.0+0x2ca>
 8002672:	2300      	movs	r3, #0
 8002674:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8002678:	2001      	movs	r0, #1
 800267a:	b021      	add	sp, #132	; 0x84
 800267c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002680:	4bb1      	ldr	r3, [pc, #708]	; (8002948 <HAL_UART_Init.constprop.0+0x344>)
 8002682:	4ab2      	ldr	r2, [pc, #712]	; (800294c <HAL_UART_Init.constprop.0+0x348>)
 8002684:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002688:	f003 0303 	and.w	r3, r3, #3
 800268c:	3b01      	subs	r3, #1
 800268e:	2b02      	cmp	r3, #2
 8002690:	f200 813f 	bhi.w	8002912 <HAL_UART_Init.constprop.0+0x30e>
 8002694:	4413      	add	r3, r2
 8002696:	f893 3cc0 	ldrb.w	r3, [r3, #3264]	; 0xcc0
 800269a:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 800269e:	f000 8163 	beq.w	8002968 <HAL_UART_Init.constprop.0+0x364>
 80026a2:	2b08      	cmp	r3, #8
 80026a4:	d8e5      	bhi.n	8002672 <HAL_UART_Init.constprop.0+0x6e>
 80026a6:	a101      	add	r1, pc, #4	; (adr r1, 80026ac <HAL_UART_Init.constprop.0+0xa8>)
 80026a8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80026ac:	0800290d 	.word	0x0800290d
 80026b0:	0800291b 	.word	0x0800291b
 80026b4:	080028cb 	.word	0x080028cb
 80026b8:	08002673 	.word	0x08002673
 80026bc:	080028f3 	.word	0x080028f3
 80026c0:	08002673 	.word	0x08002673
 80026c4:	08002673 	.word	0x08002673
 80026c8:	08002673 	.word	0x08002673
 80026cc:	08002859 	.word	0x08002859
 80026d0:	f880 6074 	strb.w	r6, [r0, #116]	; 0x74
 80026d4:	225c      	movs	r2, #92	; 0x5c
 80026d6:	a809      	add	r0, sp, #36	; 0x24
 80026d8:	4631      	mov	r1, r6
 80026da:	e9cd 6604 	strd	r6, r6, [sp, #16]
 80026de:	e9cd 6606 	strd	r6, r6, [sp, #24]
 80026e2:	9608      	str	r6, [sp, #32]
 80026e4:	f004 fa39 	bl	8006b5a <memset>
 80026e8:	6825      	ldr	r5, [r4, #0]
 80026ea:	4b94      	ldr	r3, [pc, #592]	; (800293c <HAL_UART_Init.constprop.0+0x338>)
 80026ec:	429d      	cmp	r5, r3
 80026ee:	f000 8200 	beq.w	8002af2 <HAL_UART_Init.constprop.0+0x4ee>
 80026f2:	4b93      	ldr	r3, [pc, #588]	; (8002940 <HAL_UART_Init.constprop.0+0x33c>)
 80026f4:	429d      	cmp	r5, r3
 80026f6:	d18d      	bne.n	8002614 <HAL_UART_Init.constprop.0+0x10>
 80026f8:	a809      	add	r0, sp, #36	; 0x24
 80026fa:	2702      	movs	r7, #2
 80026fc:	9612      	str	r6, [sp, #72]	; 0x48
 80026fe:	9709      	str	r7, [sp, #36]	; 0x24
 8002700:	f7ff faf8 	bl	8001cf4 <HAL_RCCEx_PeriphCLKConfig>
 8002704:	4606      	mov	r6, r0
 8002706:	2800      	cmp	r0, #0
 8002708:	f040 821e 	bne.w	8002b48 <HAL_UART_Init.constprop.0+0x544>
 800270c:	4b8e      	ldr	r3, [pc, #568]	; (8002948 <HAL_UART_Init.constprop.0+0x344>)
 800270e:	4d90      	ldr	r5, [pc, #576]	; (8002950 <HAL_UART_Init.constprop.0+0x34c>)
 8002710:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8002712:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8002716:	659a      	str	r2, [r3, #88]	; 0x58
 8002718:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 800271a:	f402 3200 	and.w	r2, r2, #131072	; 0x20000
 800271e:	9201      	str	r2, [sp, #4]
 8002720:	9a01      	ldr	r2, [sp, #4]
 8002722:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8002724:	f042 0201 	orr.w	r2, r2, #1
 8002728:	64da      	str	r2, [r3, #76]	; 0x4c
 800272a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800272c:	9705      	str	r7, [sp, #20]
 800272e:	f003 0301 	and.w	r3, r3, #1
 8002732:	200f      	movs	r0, #15
 8002734:	9300      	str	r3, [sp, #0]
 8002736:	2203      	movs	r2, #3
 8002738:	2307      	movs	r3, #7
 800273a:	a904      	add	r1, sp, #16
 800273c:	9004      	str	r0, [sp, #16]
 800273e:	f105 0954 	add.w	r9, r5, #84	; 0x54
 8002742:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002746:	f8dd c000 	ldr.w	ip, [sp]
 800274a:	9207      	str	r2, [sp, #28]
 800274c:	9308      	str	r3, [sp, #32]
 800274e:	9606      	str	r6, [sp, #24]
 8002750:	f04f 0880 	mov.w	r8, #128	; 0x80
 8002754:	f7ff fce4 	bl	8002120 <HAL_GPIO_Init>
 8002758:	4b7e      	ldr	r3, [pc, #504]	; (8002954 <HAL_UART_Init.constprop.0+0x350>)
 800275a:	656b      	str	r3, [r5, #84]	; 0x54
 800275c:	4648      	mov	r0, r9
 800275e:	e9c5 6617 	strd	r6, r6, [r5, #92]	; 0x5c
 8002762:	e9c5 661a 	strd	r6, r6, [r5, #104]	; 0x68
 8002766:	e9c5 661c 	strd	r6, r6, [r5, #112]	; 0x70
 800276a:	65af      	str	r7, [r5, #88]	; 0x58
 800276c:	f8c5 8064 	str.w	r8, [r5, #100]	; 0x64
 8002770:	f7fd fdb2 	bl	80002d8 <HAL_DMA_Init.constprop.0>
 8002774:	4603      	mov	r3, r0
 8002776:	2800      	cmp	r0, #0
 8002778:	f040 81e6 	bne.w	8002b48 <HAL_UART_Init.constprop.0+0x544>
 800277c:	f105 069c 	add.w	r6, r5, #156	; 0x9c
 8002780:	4975      	ldr	r1, [pc, #468]	; (8002958 <HAL_UART_Init.constprop.0+0x354>)
 8002782:	f8c4 9070 	str.w	r9, [r4, #112]	; 0x70
 8002786:	2210      	movs	r2, #16
 8002788:	4630      	mov	r0, r6
 800278a:	f8c5 109c 	str.w	r1, [r5, #156]	; 0x9c
 800278e:	e9c5 382a 	strd	r3, r8, [r5, #168]	; 0xa8
 8002792:	e9c5 332c 	strd	r3, r3, [r5, #176]	; 0xb0
 8002796:	e9c5 332e 	strd	r3, r3, [r5, #184]	; 0xb8
 800279a:	67ec      	str	r4, [r5, #124]	; 0x7c
 800279c:	f8c5 70a0 	str.w	r7, [r5, #160]	; 0xa0
 80027a0:	f8c5 20a4 	str.w	r2, [r5, #164]	; 0xa4
 80027a4:	f7fd fd98 	bl	80002d8 <HAL_DMA_Init.constprop.0>
 80027a8:	4601      	mov	r1, r0
 80027aa:	2800      	cmp	r0, #0
 80027ac:	f040 81cc 	bne.w	8002b48 <HAL_UART_Init.constprop.0+0x544>
 80027b0:	66e6      	str	r6, [r4, #108]	; 0x6c
 80027b2:	2026      	movs	r0, #38	; 0x26
 80027b4:	f8c5 40c4 	str.w	r4, [r5, #196]	; 0xc4
 80027b8:	f7fd fd0a 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 80027bc:	2026      	movs	r0, #38	; 0x26
 80027be:	f7ff fe2f 	bl	8002420 <HAL_NVIC_EnableIRQ.part.0>
 80027c2:	e726      	b.n	8002612 <HAL_UART_Init.constprop.0+0xe>
 80027c4:	f422 6230 	bic.w	r2, r2, #2816	; 0xb00
 80027c8:	4313      	orrs	r3, r2
 80027ca:	495f      	ldr	r1, [pc, #380]	; (8002948 <HAL_UART_Init.constprop.0+0x344>)
 80027cc:	60ab      	str	r3, [r5, #8]
 80027ce:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 80027d2:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 80027d6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80027da:	f000 8188 	beq.w	8002aee <HAL_UART_Init.constprop.0+0x4ea>
 80027de:	d80c      	bhi.n	80027fa <HAL_UART_Init.constprop.0+0x1f6>
 80027e0:	2b00      	cmp	r3, #0
 80027e2:	f000 817e 	beq.w	8002ae2 <HAL_UART_Init.constprop.0+0x4de>
 80027e6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80027ea:	f47f af42 	bne.w	8002672 <HAL_UART_Init.constprop.0+0x6e>
 80027ee:	f7ff fc41 	bl	8002074 <HAL_RCC_GetSysClockFreq>
 80027f2:	2800      	cmp	r0, #0
 80027f4:	f000 8081 	beq.w	80028fa <HAL_UART_Init.constprop.0+0x2f6>
 80027f8:	e005      	b.n	8002806 <HAL_UART_Init.constprop.0+0x202>
 80027fa:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 80027fe:	f47f af38 	bne.w	8002672 <HAL_UART_Init.constprop.0+0x6e>
 8002802:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8002806:	6862      	ldr	r2, [r4, #4]
 8002808:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 800280c:	4283      	cmp	r3, r0
 800280e:	f63f af30 	bhi.w	8002672 <HAL_UART_Init.constprop.0+0x6e>
 8002812:	ebb0 3f02 	cmp.w	r0, r2, lsl #12
 8002816:	f63f af2c 	bhi.w	8002672 <HAL_UART_Init.constprop.0+0x6e>
 800281a:	0856      	lsrs	r6, r2, #1
 800281c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002820:	2700      	movs	r7, #0
 8002822:	fbe3 6700 	umlal	r6, r7, r3, r0
 8002826:	f04f 0800 	mov.w	r8, #0
 800282a:	4643      	mov	r3, r8
 800282c:	4630      	mov	r0, r6
 800282e:	4639      	mov	r1, r7
 8002830:	f002 ff74 	bl	800571c <__aeabi_uldivmod>
 8002834:	4b49      	ldr	r3, [pc, #292]	; (800295c <HAL_UART_Init.constprop.0+0x358>)
 8002836:	f5a0 7240 	sub.w	r2, r0, #768	; 0x300
 800283a:	429a      	cmp	r2, r3
 800283c:	f63f af19 	bhi.w	8002672 <HAL_UART_Init.constprop.0+0x6e>
 8002840:	6825      	ldr	r5, [r4, #0]
 8002842:	60e8      	str	r0, [r5, #12]
 8002844:	e9c4 8819 	strd	r8, r8, [r4, #100]	; 0x64
 8002848:	e019      	b.n	800287e <HAL_UART_Init.constprop.0+0x27a>
 800284a:	2b30      	cmp	r3, #48	; 0x30
 800284c:	f47f af11 	bne.w	8002672 <HAL_UART_Init.constprop.0+0x6e>
 8002850:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002854:	f000 80a1 	beq.w	800299a <HAL_UART_Init.constprop.0+0x396>
 8002858:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 800285c:	6863      	ldr	r3, [r4, #4]
 800285e:	f64f 72ef 	movw	r2, #65519	; 0xffef
 8002862:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 8002866:	fbb0 f0f3 	udiv	r0, r0, r3
 800286a:	f1a0 0310 	sub.w	r3, r0, #16
 800286e:	4293      	cmp	r3, r2
 8002870:	f63f aeff 	bhi.w	8002672 <HAL_UART_Init.constprop.0+0x6e>
 8002874:	6825      	ldr	r5, [r4, #0]
 8002876:	2300      	movs	r3, #0
 8002878:	60e8      	str	r0, [r5, #12]
 800287a:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 800287e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002880:	2b00      	cmp	r3, #0
 8002882:	f040 80af 	bne.w	80029e4 <HAL_UART_Init.constprop.0+0x3e0>
 8002886:	686b      	ldr	r3, [r5, #4]
 8002888:	4a31      	ldr	r2, [pc, #196]	; (8002950 <HAL_UART_Init.constprop.0+0x34c>)
 800288a:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 800288e:	606b      	str	r3, [r5, #4]
 8002890:	68ab      	ldr	r3, [r5, #8]
 8002892:	f023 032a 	bic.w	r3, r3, #42	; 0x2a
 8002896:	60ab      	str	r3, [r5, #8]
 8002898:	682b      	ldr	r3, [r5, #0]
 800289a:	2100      	movs	r1, #0
 800289c:	f043 0301 	orr.w	r3, r3, #1
 80028a0:	602b      	str	r3, [r5, #0]
 80028a2:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
 80028a6:	6816      	ldr	r6, [r2, #0]
 80028a8:	682b      	ldr	r3, [r5, #0]
 80028aa:	071a      	lsls	r2, r3, #28
 80028ac:	f100 808e 	bmi.w	80029cc <HAL_UART_Init.constprop.0+0x3c8>
 80028b0:	682b      	ldr	r3, [r5, #0]
 80028b2:	075b      	lsls	r3, r3, #29
 80028b4:	f100 80e1 	bmi.w	8002a7a <HAL_UART_Init.constprop.0+0x476>
 80028b8:	2300      	movs	r3, #0
 80028ba:	2220      	movs	r2, #32
 80028bc:	67a2      	str	r2, [r4, #120]	; 0x78
 80028be:	f884 3074 	strb.w	r3, [r4, #116]	; 0x74
 80028c2:	67e2      	str	r2, [r4, #124]	; 0x7c
 80028c4:	4618      	mov	r0, r3
 80028c6:	6623      	str	r3, [r4, #96]	; 0x60
 80028c8:	e6d7      	b.n	800267a <HAL_UART_Init.constprop.0+0x76>
 80028ca:	4825      	ldr	r0, [pc, #148]	; (8002960 <HAL_UART_Init.constprop.0+0x35c>)
 80028cc:	e7c6      	b.n	800285c <HAL_UART_Init.constprop.0+0x258>
 80028ce:	f503 33e4 	add.w	r3, r3, #116736	; 0x1c800
 80028d2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80028d6:	f003 0330 	and.w	r3, r3, #48	; 0x30
 80028da:	2b20      	cmp	r3, #32
 80028dc:	f000 8136 	beq.w	8002b4c <HAL_UART_Init.constprop.0+0x548>
 80028e0:	d8b3      	bhi.n	800284a <HAL_UART_Init.constprop.0+0x246>
 80028e2:	b17b      	cbz	r3, 8002904 <HAL_UART_Init.constprop.0+0x300>
 80028e4:	2b10      	cmp	r3, #16
 80028e6:	f47f aec4 	bne.w	8002672 <HAL_UART_Init.constprop.0+0x6e>
 80028ea:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 80028ee:	f000 80e2 	beq.w	8002ab6 <HAL_UART_Init.constprop.0+0x4b2>
 80028f2:	f7ff fbbf 	bl	8002074 <HAL_RCC_GetSysClockFreq>
 80028f6:	2800      	cmp	r0, #0
 80028f8:	d1b0      	bne.n	800285c <HAL_UART_Init.constprop.0+0x258>
 80028fa:	2300      	movs	r3, #0
 80028fc:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8002900:	6825      	ldr	r5, [r4, #0]
 8002902:	e7bc      	b.n	800287e <HAL_UART_Init.constprop.0+0x27a>
 8002904:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002908:	f000 80cf 	beq.w	8002aaa <HAL_UART_Init.constprop.0+0x4a6>
 800290c:	f7ff fb9e 	bl	800204c <HAL_RCC_GetPCLK1Freq>
 8002910:	e7f1      	b.n	80028f6 <HAL_UART_Init.constprop.0+0x2f2>
 8002912:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002916:	f000 80d4 	beq.w	8002ac2 <HAL_UART_Init.constprop.0+0x4be>
 800291a:	4b0b      	ldr	r3, [pc, #44]	; (8002948 <HAL_UART_Init.constprop.0+0x344>)
 800291c:	4911      	ldr	r1, [pc, #68]	; (8002964 <HAL_UART_Init.constprop.0+0x360>)
 800291e:	689b      	ldr	r3, [r3, #8]
 8002920:	6808      	ldr	r0, [r1, #0]
 8002922:	f3c3 23c2 	ubfx	r3, r3, #11, #3
 8002926:	441a      	add	r2, r3
 8002928:	f892 3c88 	ldrb.w	r3, [r2, #3208]	; 0xc88
 800292c:	f003 031f 	and.w	r3, r3, #31
 8002930:	40d8      	lsrs	r0, r3
 8002932:	e7e0      	b.n	80028f6 <HAL_UART_Init.constprop.0+0x2f2>
 8002934:	efff69f3 	.word	0xefff69f3
 8002938:	40008000 	.word	0x40008000
 800293c:	40013800 	.word	0x40013800
 8002940:	40004400 	.word	0x40004400
 8002944:	40004800 	.word	0x40004800
 8002948:	40021000 	.word	0x40021000
 800294c:	080079a8 	.word	0x080079a8
 8002950:	200000ac 	.word	0x200000ac
 8002954:	4002006c 	.word	0x4002006c
 8002958:	40020080 	.word	0x40020080
 800295c:	000ffcff 	.word	0x000ffcff
 8002960:	00f42400 	.word	0x00f42400
 8002964:	20000000 	.word	0x20000000
 8002968:	2b08      	cmp	r3, #8
 800296a:	f63f ae82 	bhi.w	8002672 <HAL_UART_Init.constprop.0+0x6e>
 800296e:	a101      	add	r1, pc, #4	; (adr r1, 8002974 <HAL_UART_Init.constprop.0+0x370>)
 8002970:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002974:	08002aab 	.word	0x08002aab
 8002978:	08002ac3 	.word	0x08002ac3
 800297c:	08002999 	.word	0x08002999
 8002980:	08002673 	.word	0x08002673
 8002984:	08002ab7 	.word	0x08002ab7
 8002988:	08002673 	.word	0x08002673
 800298c:	08002673 	.word	0x08002673
 8002990:	08002673 	.word	0x08002673
 8002994:	0800299b 	.word	0x0800299b
 8002998:	486f      	ldr	r0, [pc, #444]	; (8002b58 <HAL_UART_Init.constprop.0+0x554>)
 800299a:	6862      	ldr	r2, [r4, #4]
 800299c:	0853      	lsrs	r3, r2, #1
 800299e:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80029a2:	f64f 73ef 	movw	r3, #65519	; 0xffef
 80029a6:	fbb0 f0f2 	udiv	r0, r0, r2
 80029aa:	f1a0 0210 	sub.w	r2, r0, #16
 80029ae:	429a      	cmp	r2, r3
 80029b0:	f63f ae5f 	bhi.w	8002672 <HAL_UART_Init.constprop.0+0x6e>
 80029b4:	f020 030f 	bic.w	r3, r0, #15
 80029b8:	b29b      	uxth	r3, r3
 80029ba:	6825      	ldr	r5, [r4, #0]
 80029bc:	f3c0 0042 	ubfx	r0, r0, #1, #3
 80029c0:	4318      	orrs	r0, r3
 80029c2:	2300      	movs	r3, #0
 80029c4:	60e8      	str	r0, [r5, #12]
 80029c6:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 80029ca:	e758      	b.n	800287e <HAL_UART_Init.constprop.0+0x27a>
 80029cc:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 80029d0:	4632      	mov	r2, r6
 80029d2:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 80029d6:	4620      	mov	r0, r4
 80029d8:	f7fd fc26 	bl	8000228 <UART_WaitOnFlagUntilTimeout.constprop.0>
 80029dc:	2800      	cmp	r0, #0
 80029de:	d157      	bne.n	8002a90 <HAL_UART_Init.constprop.0+0x48c>
 80029e0:	6825      	ldr	r5, [r4, #0]
 80029e2:	e765      	b.n	80028b0 <HAL_UART_Init.constprop.0+0x2ac>
 80029e4:	07de      	lsls	r6, r3, #31
 80029e6:	d505      	bpl.n	80029f4 <HAL_UART_Init.constprop.0+0x3f0>
 80029e8:	686a      	ldr	r2, [r5, #4]
 80029ea:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80029ec:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 80029f0:	430a      	orrs	r2, r1
 80029f2:	606a      	str	r2, [r5, #4]
 80029f4:	0798      	lsls	r0, r3, #30
 80029f6:	d505      	bpl.n	8002a04 <HAL_UART_Init.constprop.0+0x400>
 80029f8:	686a      	ldr	r2, [r5, #4]
 80029fa:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80029fc:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8002a00:	430a      	orrs	r2, r1
 8002a02:	606a      	str	r2, [r5, #4]
 8002a04:	0759      	lsls	r1, r3, #29
 8002a06:	d505      	bpl.n	8002a14 <HAL_UART_Init.constprop.0+0x410>
 8002a08:	686a      	ldr	r2, [r5, #4]
 8002a0a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8002a0c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8002a10:	430a      	orrs	r2, r1
 8002a12:	606a      	str	r2, [r5, #4]
 8002a14:	071a      	lsls	r2, r3, #28
 8002a16:	d505      	bpl.n	8002a24 <HAL_UART_Init.constprop.0+0x420>
 8002a18:	686a      	ldr	r2, [r5, #4]
 8002a1a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8002a1c:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8002a20:	430a      	orrs	r2, r1
 8002a22:	606a      	str	r2, [r5, #4]
 8002a24:	06df      	lsls	r7, r3, #27
 8002a26:	d505      	bpl.n	8002a34 <HAL_UART_Init.constprop.0+0x430>
 8002a28:	68aa      	ldr	r2, [r5, #8]
 8002a2a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8002a2c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8002a30:	430a      	orrs	r2, r1
 8002a32:	60aa      	str	r2, [r5, #8]
 8002a34:	069e      	lsls	r6, r3, #26
 8002a36:	d505      	bpl.n	8002a44 <HAL_UART_Init.constprop.0+0x440>
 8002a38:	68aa      	ldr	r2, [r5, #8]
 8002a3a:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8002a3c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002a40:	430a      	orrs	r2, r1
 8002a42:	60aa      	str	r2, [r5, #8]
 8002a44:	0658      	lsls	r0, r3, #25
 8002a46:	d50e      	bpl.n	8002a66 <HAL_UART_Init.constprop.0+0x462>
 8002a48:	686a      	ldr	r2, [r5, #4]
 8002a4a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8002a4c:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 8002a50:	430a      	orrs	r2, r1
 8002a52:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8002a56:	606a      	str	r2, [r5, #4]
 8002a58:	d105      	bne.n	8002a66 <HAL_UART_Init.constprop.0+0x462>
 8002a5a:	686a      	ldr	r2, [r5, #4]
 8002a5c:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8002a5e:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
 8002a62:	430a      	orrs	r2, r1
 8002a64:	606a      	str	r2, [r5, #4]
 8002a66:	0619      	lsls	r1, r3, #24
 8002a68:	f57f af0d 	bpl.w	8002886 <HAL_UART_Init.constprop.0+0x282>
 8002a6c:	686b      	ldr	r3, [r5, #4]
 8002a6e:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8002a70:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 8002a74:	4313      	orrs	r3, r2
 8002a76:	606b      	str	r3, [r5, #4]
 8002a78:	e705      	b.n	8002886 <HAL_UART_Init.constprop.0+0x282>
 8002a7a:	4632      	mov	r2, r6
 8002a7c:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8002a80:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8002a84:	4620      	mov	r0, r4
 8002a86:	f7fd fbcf 	bl	8000228 <UART_WaitOnFlagUntilTimeout.constprop.0>
 8002a8a:	2800      	cmp	r0, #0
 8002a8c:	f43f af14 	beq.w	80028b8 <HAL_UART_Init.constprop.0+0x2b4>
 8002a90:	2003      	movs	r0, #3
 8002a92:	e5f2      	b.n	800267a <HAL_UART_Init.constprop.0+0x76>
 8002a94:	f503 33e6 	add.w	r3, r3, #117760	; 0x1cc00
 8002a98:	4a30      	ldr	r2, [pc, #192]	; (8002b5c <HAL_UART_Init.constprop.0+0x558>)
 8002a9a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002a9e:	f003 030c 	and.w	r3, r3, #12
 8002aa2:	4413      	add	r3, r2
 8002aa4:	f893 3cc4 	ldrb.w	r3, [r3, #3268]	; 0xcc4
 8002aa8:	e5f7      	b.n	800269a <HAL_UART_Init.constprop.0+0x96>
 8002aaa:	f7ff facf 	bl	800204c <HAL_RCC_GetPCLK1Freq>
 8002aae:	2800      	cmp	r0, #0
 8002ab0:	f43f af23 	beq.w	80028fa <HAL_UART_Init.constprop.0+0x2f6>
 8002ab4:	e771      	b.n	800299a <HAL_UART_Init.constprop.0+0x396>
 8002ab6:	f7ff fadd 	bl	8002074 <HAL_RCC_GetSysClockFreq>
 8002aba:	2800      	cmp	r0, #0
 8002abc:	f43f af1d 	beq.w	80028fa <HAL_UART_Init.constprop.0+0x2f6>
 8002ac0:	e76b      	b.n	800299a <HAL_UART_Init.constprop.0+0x396>
 8002ac2:	4b27      	ldr	r3, [pc, #156]	; (8002b60 <HAL_UART_Init.constprop.0+0x55c>)
 8002ac4:	4927      	ldr	r1, [pc, #156]	; (8002b64 <HAL_UART_Init.constprop.0+0x560>)
 8002ac6:	689b      	ldr	r3, [r3, #8]
 8002ac8:	6808      	ldr	r0, [r1, #0]
 8002aca:	f3c3 23c2 	ubfx	r3, r3, #11, #3
 8002ace:	441a      	add	r2, r3
 8002ad0:	f892 3c88 	ldrb.w	r3, [r2, #3208]	; 0xc88
 8002ad4:	f003 031f 	and.w	r3, r3, #31
 8002ad8:	40d8      	lsrs	r0, r3
 8002ada:	2800      	cmp	r0, #0
 8002adc:	f43f af0d 	beq.w	80028fa <HAL_UART_Init.constprop.0+0x2f6>
 8002ae0:	e75b      	b.n	800299a <HAL_UART_Init.constprop.0+0x396>
 8002ae2:	f7ff fab3 	bl	800204c <HAL_RCC_GetPCLK1Freq>
 8002ae6:	2800      	cmp	r0, #0
 8002ae8:	f43f af07 	beq.w	80028fa <HAL_UART_Init.constprop.0+0x2f6>
 8002aec:	e68b      	b.n	8002806 <HAL_UART_Init.constprop.0+0x202>
 8002aee:	481a      	ldr	r0, [pc, #104]	; (8002b58 <HAL_UART_Init.constprop.0+0x554>)
 8002af0:	e689      	b.n	8002806 <HAL_UART_Init.constprop.0+0x202>
 8002af2:	2301      	movs	r3, #1
 8002af4:	a809      	add	r0, sp, #36	; 0x24
 8002af6:	9611      	str	r6, [sp, #68]	; 0x44
 8002af8:	9309      	str	r3, [sp, #36]	; 0x24
 8002afa:	f7ff f8fb 	bl	8001cf4 <HAL_RCCEx_PeriphCLKConfig>
 8002afe:	bb18      	cbnz	r0, 8002b48 <HAL_UART_Init.constprop.0+0x544>
 8002b00:	4b17      	ldr	r3, [pc, #92]	; (8002b60 <HAL_UART_Init.constprop.0+0x55c>)
 8002b02:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8002b04:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002b08:	661a      	str	r2, [r3, #96]	; 0x60
 8002b0a:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8002b0c:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8002b10:	9203      	str	r2, [sp, #12]
 8002b12:	9a03      	ldr	r2, [sp, #12]
 8002b14:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8002b16:	f042 0201 	orr.w	r2, r2, #1
 8002b1a:	64da      	str	r2, [r3, #76]	; 0x4c
 8002b1c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002b1e:	9006      	str	r0, [sp, #24]
 8002b20:	f003 0301 	and.w	r3, r3, #1
 8002b24:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8002b28:	9302      	str	r3, [sp, #8]
 8002b2a:	2502      	movs	r5, #2
 8002b2c:	2203      	movs	r2, #3
 8002b2e:	2307      	movs	r3, #7
 8002b30:	9004      	str	r0, [sp, #16]
 8002b32:	a904      	add	r1, sp, #16
 8002b34:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002b38:	9505      	str	r5, [sp, #20]
 8002b3a:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8002b3e:	9e02      	ldr	r6, [sp, #8]
 8002b40:	f7ff faee 	bl	8002120 <HAL_GPIO_Init>
 8002b44:	6825      	ldr	r5, [r4, #0]
 8002b46:	e565      	b.n	8002614 <HAL_UART_Init.constprop.0+0x10>
 8002b48:	f7ff fca0 	bl	800248c <__NVIC_SystemReset>
 8002b4c:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002b50:	4801      	ldr	r0, [pc, #4]	; (8002b58 <HAL_UART_Init.constprop.0+0x554>)
 8002b52:	f47f ae83 	bne.w	800285c <HAL_UART_Init.constprop.0+0x258>
 8002b56:	e720      	b.n	800299a <HAL_UART_Init.constprop.0+0x396>
 8002b58:	00f42400 	.word	0x00f42400
 8002b5c:	080079a8 	.word	0x080079a8
 8002b60:	40021000 	.word	0x40021000
 8002b64:	20000000 	.word	0x20000000

08002b68 <acc_hal_integration_sensor_transfer16>:
 8002b68:	b570      	push	{r4, r5, r6, lr}
 8002b6a:	4c86      	ldr	r4, [pc, #536]	; (8002d84 <acc_hal_integration_sensor_transfer16+0x21c>)
 8002b6c:	f894 3140 	ldrb.w	r3, [r4, #320]	; 0x140
 8002b70:	2000      	movs	r0, #0
 8002b72:	2b01      	cmp	r3, #1
 8002b74:	f884 0050 	strb.w	r0, [r4, #80]	; 0x50
 8002b78:	d00f      	beq.n	8002b9a <acc_hal_integration_sensor_transfer16+0x32>
 8002b7a:	f894 3141 	ldrb.w	r3, [r4, #321]	; 0x141
 8002b7e:	2001      	movs	r0, #1
 8002b80:	4283      	cmp	r3, r0
 8002b82:	b2dd      	uxtb	r5, r3
 8002b84:	f884 0140 	strb.w	r0, [r4, #320]	; 0x140
 8002b88:	d00e      	beq.n	8002ba8 <acc_hal_integration_sensor_transfer16+0x40>
 8002b8a:	f8d4 30e8 	ldr.w	r3, [r4, #232]	; 0xe8
 8002b8e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8002b92:	d003      	beq.n	8002b9c <acc_hal_integration_sensor_transfer16+0x34>
 8002b94:	2300      	movs	r3, #0
 8002b96:	f884 3140 	strb.w	r3, [r4, #320]	; 0x140
 8002b9a:	bd70      	pop	{r4, r5, r6, pc}
 8002b9c:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
 8002ba0:	2b00      	cmp	r3, #0
 8002ba2:	d1f7      	bne.n	8002b94 <acc_hal_integration_sensor_transfer16+0x2c>
 8002ba4:	2d04      	cmp	r5, #4
 8002ba6:	d1f5      	bne.n	8002b94 <acc_hal_integration_sensor_transfer16+0x2c>
 8002ba8:	2900      	cmp	r1, #0
 8002baa:	d0f3      	beq.n	8002b94 <acc_hal_integration_sensor_transfer16+0x2c>
 8002bac:	b293      	uxth	r3, r2
 8002bae:	2b00      	cmp	r3, #0
 8002bb0:	d0f0      	beq.n	8002b94 <acc_hal_integration_sensor_transfer16+0x2c>
 8002bb2:	f894 2141 	ldrb.w	r2, [r4, #321]	; 0x141
 8002bb6:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 8002bba:	f8d4 60f0 	ldr.w	r6, [r4, #240]	; 0xf0
 8002bbe:	2a04      	cmp	r2, #4
 8002bc0:	bf18      	it	ne
 8002bc2:	2205      	movne	r2, #5
 8002bc4:	f04f 0000 	mov.w	r0, #0
 8002bc8:	bf18      	it	ne
 8002bca:	f884 2141 	strbne.w	r2, [r4, #321]	; 0x141
 8002bce:	f8c4 0144 	str.w	r0, [r4, #324]	; 0x144
 8002bd2:	f8a4 3122 	strh.w	r3, [r4, #290]	; 0x122
 8002bd6:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8002bda:	686a      	ldr	r2, [r5, #4]
 8002bdc:	f8c4 111c 	str.w	r1, [r4, #284]	; 0x11c
 8002be0:	f422 42c0 	bic.w	r2, r2, #24576	; 0x6000
 8002be4:	f5b6 6fe0 	cmp.w	r6, #1792	; 0x700
 8002be8:	e9c4 004c 	strd	r0, r0, [r4, #304]	; 0x130
 8002bec:	f8a4 3120 	strh.w	r3, [r4, #288]	; 0x120
 8002bf0:	f8c4 1124 	str.w	r1, [r4, #292]	; 0x124
 8002bf4:	f8a4 3128 	strh.w	r3, [r4, #296]	; 0x128
 8002bf8:	606a      	str	r2, [r5, #4]
 8002bfa:	d929      	bls.n	8002c50 <acc_hal_integration_sensor_transfer16+0xe8>
 8002bfc:	686b      	ldr	r3, [r5, #4]
 8002bfe:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002c02:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002c06:	606b      	str	r3, [r5, #4]
 8002c08:	f894 3141 	ldrb.w	r3, [r4, #321]	; 0x141
 8002c0c:	2b04      	cmp	r3, #4
 8002c0e:	bf07      	ittee	eq
 8002c10:	4a5d      	ldreq	r2, [pc, #372]	; (8002d88 <acc_hal_integration_sensor_transfer16+0x220>)
 8002c12:	4b5e      	ldreq	r3, [pc, #376]	; (8002d8c <acc_hal_integration_sensor_transfer16+0x224>)
 8002c14:	4a5e      	ldrne	r2, [pc, #376]	; (8002d90 <acc_hal_integration_sensor_transfer16+0x228>)
 8002c16:	4b5f      	ldrne	r3, [pc, #380]	; (8002d94 <acc_hal_integration_sensor_transfer16+0x22c>)
 8002c18:	e9c0 320b 	strd	r3, r2, [r0, #44]	; 0x2c
 8002c1c:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8002c20:	4a5d      	ldr	r2, [pc, #372]	; (8002d98 <acc_hal_integration_sensor_transfer16+0x230>)
 8002c22:	6342      	str	r2, [r0, #52]	; 0x34
 8002c24:	2600      	movs	r6, #0
 8002c26:	460a      	mov	r2, r1
 8002c28:	b29b      	uxth	r3, r3
 8002c2a:	f105 010c 	add.w	r1, r5, #12
 8002c2e:	6386      	str	r6, [r0, #56]	; 0x38
 8002c30:	f7ff fbb0 	bl	8002394 <HAL_DMA_Start_IT>
 8002c34:	4605      	mov	r5, r0
 8002c36:	b378      	cbz	r0, 8002c98 <acc_hal_integration_sensor_transfer16+0x130>
 8002c38:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 8002c3c:	f884 6140 	strb.w	r6, [r4, #320]	; 0x140
 8002c40:	f043 0310 	orr.w	r3, r3, #16
 8002c44:	2201      	movs	r2, #1
 8002c46:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
 8002c4a:	f884 2141 	strb.w	r2, [r4, #321]	; 0x141
 8002c4e:	bd70      	pop	{r4, r5, r6, pc}
 8002c50:	f8d4 0138 	ldr.w	r0, [r4, #312]	; 0x138
 8002c54:	686a      	ldr	r2, [r5, #4]
 8002c56:	6980      	ldr	r0, [r0, #24]
 8002c58:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002c5c:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8002c60:	606a      	str	r2, [r5, #4]
 8002c62:	d05f      	beq.n	8002d24 <acc_hal_integration_sensor_transfer16+0x1bc>
 8002c64:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002c68:	6983      	ldr	r3, [r0, #24]
 8002c6a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002c6e:	d1cb      	bne.n	8002c08 <acc_hal_integration_sensor_transfer16+0xa0>
 8002c70:	686b      	ldr	r3, [r5, #4]
 8002c72:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002c76:	606b      	str	r3, [r5, #4]
 8002c78:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8002c7c:	f013 0f01 	tst.w	r3, #1
 8002c80:	686b      	ldr	r3, [r5, #4]
 8002c82:	d169      	bne.n	8002d58 <acc_hal_integration_sensor_transfer16+0x1f0>
 8002c84:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8002c88:	606b      	str	r3, [r5, #4]
 8002c8a:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8002c8e:	f3c3 034e 	ubfx	r3, r3, #1, #15
 8002c92:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8002c96:	e7b7      	b.n	8002c08 <acc_hal_integration_sensor_transfer16+0xa0>
 8002c98:	f8d4 20e4 	ldr.w	r2, [r4, #228]	; 0xe4
 8002c9c:	f8d4 0138 	ldr.w	r0, [r4, #312]	; 0x138
 8002ca0:	6853      	ldr	r3, [r2, #4]
 8002ca2:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8002ca6:	f043 0301 	orr.w	r3, r3, #1
 8002caa:	6053      	str	r3, [r2, #4]
 8002cac:	f8b4 3122 	ldrh.w	r3, [r4, #290]	; 0x122
 8002cb0:	6305      	str	r5, [r0, #48]	; 0x30
 8002cb2:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8002cb6:	320c      	adds	r2, #12
 8002cb8:	b29b      	uxth	r3, r3
 8002cba:	62c5      	str	r5, [r0, #44]	; 0x2c
 8002cbc:	f7ff fb6a 	bl	8002394 <HAL_DMA_Start_IT>
 8002cc0:	2800      	cmp	r0, #0
 8002cc2:	d13d      	bne.n	8002d40 <acc_hal_integration_sensor_transfer16+0x1d8>
 8002cc4:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
 8002cc8:	681a      	ldr	r2, [r3, #0]
 8002cca:	0652      	lsls	r2, r2, #25
 8002ccc:	d525      	bpl.n	8002d1a <acc_hal_integration_sensor_transfer16+0x1b2>
 8002cce:	685a      	ldr	r2, [r3, #4]
 8002cd0:	f042 0220 	orr.w	r2, r2, #32
 8002cd4:	605a      	str	r2, [r3, #4]
 8002cd6:	685a      	ldr	r2, [r3, #4]
 8002cd8:	f042 0202 	orr.w	r2, r2, #2
 8002cdc:	605a      	str	r2, [r3, #4]
 8002cde:	6822      	ldr	r2, [r4, #0]
 8002ce0:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8002ce4:	2100      	movs	r1, #0
 8002ce6:	f884 1140 	strb.w	r1, [r4, #320]	; 0x140
 8002cea:	2b00      	cmp	r3, #0
 8002cec:	f47f af55 	bne.w	8002b9a <acc_hal_integration_sensor_transfer16+0x32>
 8002cf0:	f241 3187 	movw	r1, #4999	; 0x1387
 8002cf4:	e00c      	b.n	8002d10 <acc_hal_integration_sensor_transfer16+0x1a8>
 8002cf6:	b672      	cpsid	i
 8002cf8:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8002cfc:	b903      	cbnz	r3, 8002d00 <acc_hal_integration_sensor_transfer16+0x198>
 8002cfe:	bf30      	wfi
 8002d00:	b662      	cpsie	i
 8002d02:	f3bf 8f6f 	isb	sy
 8002d06:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8002d0a:	2b00      	cmp	r3, #0
 8002d0c:	f47f af45 	bne.w	8002b9a <acc_hal_integration_sensor_transfer16+0x32>
 8002d10:	6823      	ldr	r3, [r4, #0]
 8002d12:	1a9b      	subs	r3, r3, r2
 8002d14:	428b      	cmp	r3, r1
 8002d16:	d9ee      	bls.n	8002cf6 <acc_hal_integration_sensor_transfer16+0x18e>
 8002d18:	bd70      	pop	{r4, r5, r6, pc}
 8002d1a:	681a      	ldr	r2, [r3, #0]
 8002d1c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002d20:	601a      	str	r2, [r3, #0]
 8002d22:	e7d4      	b.n	8002cce <acc_hal_integration_sensor_transfer16+0x166>
 8002d24:	f013 0f01 	tst.w	r3, #1
 8002d28:	686b      	ldr	r3, [r5, #4]
 8002d2a:	d120      	bne.n	8002d6e <acc_hal_integration_sensor_transfer16+0x206>
 8002d2c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8002d30:	606b      	str	r3, [r5, #4]
 8002d32:	f8b4 3122 	ldrh.w	r3, [r4, #290]	; 0x122
 8002d36:	f3c3 034e 	ubfx	r3, r3, #1, #15
 8002d3a:	f8a4 3122 	strh.w	r3, [r4, #290]	; 0x122
 8002d3e:	e791      	b.n	8002c64 <acc_hal_integration_sensor_transfer16+0xfc>
 8002d40:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 8002d44:	f884 5140 	strb.w	r5, [r4, #320]	; 0x140
 8002d48:	f043 0310 	orr.w	r3, r3, #16
 8002d4c:	2201      	movs	r2, #1
 8002d4e:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
 8002d52:	f884 2141 	strb.w	r2, [r4, #321]	; 0x141
 8002d56:	bd70      	pop	{r4, r5, r6, pc}
 8002d58:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002d5c:	606b      	str	r3, [r5, #4]
 8002d5e:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8002d62:	f3c3 034e 	ubfx	r3, r3, #1, #15
 8002d66:	3301      	adds	r3, #1
 8002d68:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8002d6c:	e74c      	b.n	8002c08 <acc_hal_integration_sensor_transfer16+0xa0>
 8002d6e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002d72:	606b      	str	r3, [r5, #4]
 8002d74:	f8b4 3122 	ldrh.w	r3, [r4, #290]	; 0x122
 8002d78:	f3c3 034e 	ubfx	r3, r3, #1, #15
 8002d7c:	3301      	adds	r3, #1
 8002d7e:	f8a4 3122 	strh.w	r3, [r4, #290]	; 0x122
 8002d82:	e76f      	b.n	8002c64 <acc_hal_integration_sensor_transfer16+0xfc>
 8002d84:	200000ac 	.word	0x200000ac
 8002d88:	08001a99 	.word	0x08001a99
 8002d8c:	08001b19 	.word	0x08001b19
 8002d90:	08001a9d 	.word	0x08001a9d
 8002d94:	08001aa1 	.word	0x08001aa1
 8002d98:	08001a75 	.word	0x08001a75

08002d9c <HAL_RTC_DeactivateAlarm.constprop.0>:
 8002d9c:	491c      	ldr	r1, [pc, #112]	; (8002e10 <HAL_RTC_DeactivateAlarm.constprop.0+0x74>)
 8002d9e:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 8002da2:	2b01      	cmp	r3, #1
 8002da4:	d032      	beq.n	8002e0c <HAL_RTC_DeactivateAlarm.constprop.0+0x70>
 8002da6:	b430      	push	{r4, r5}
 8002da8:	684c      	ldr	r4, [r1, #4]
 8002daa:	2353      	movs	r3, #83	; 0x53
 8002dac:	2001      	movs	r0, #1
 8002dae:	2502      	movs	r5, #2
 8002db0:	22ca      	movs	r2, #202	; 0xca
 8002db2:	f881 5025 	strb.w	r5, [r1, #37]	; 0x25
 8002db6:	f881 0024 	strb.w	r0, [r1, #36]	; 0x24
 8002dba:	6262      	str	r2, [r4, #36]	; 0x24
 8002dbc:	6263      	str	r3, [r4, #36]	; 0x24
 8002dbe:	68a3      	ldr	r3, [r4, #8]
 8002dc0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002dc4:	60a3      	str	r3, [r4, #8]
 8002dc6:	68a3      	ldr	r3, [r4, #8]
 8002dc8:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002dcc:	60a3      	str	r3, [r4, #8]
 8002dce:	6808      	ldr	r0, [r1, #0]
 8002dd0:	e004      	b.n	8002ddc <HAL_RTC_DeactivateAlarm.constprop.0+0x40>
 8002dd2:	680a      	ldr	r2, [r1, #0]
 8002dd4:	1a12      	subs	r2, r2, r0
 8002dd6:	f5b2 7f7a 	cmp.w	r2, #1000	; 0x3e8
 8002dda:	d80d      	bhi.n	8002df8 <HAL_RTC_DeactivateAlarm.constprop.0+0x5c>
 8002ddc:	68e3      	ldr	r3, [r4, #12]
 8002dde:	f013 0301 	ands.w	r3, r3, #1
 8002de2:	d0f6      	beq.n	8002dd2 <HAL_RTC_DeactivateAlarm.constprop.0+0x36>
 8002de4:	2000      	movs	r0, #0
 8002de6:	22ff      	movs	r2, #255	; 0xff
 8002de8:	2301      	movs	r3, #1
 8002dea:	6262      	str	r2, [r4, #36]	; 0x24
 8002dec:	f881 0024 	strb.w	r0, [r1, #36]	; 0x24
 8002df0:	f881 3025 	strb.w	r3, [r1, #37]	; 0x25
 8002df4:	bc30      	pop	{r4, r5}
 8002df6:	4770      	bx	lr
 8002df8:	20ff      	movs	r0, #255	; 0xff
 8002dfa:	2203      	movs	r2, #3
 8002dfc:	6260      	str	r0, [r4, #36]	; 0x24
 8002dfe:	f881 3024 	strb.w	r3, [r1, #36]	; 0x24
 8002e02:	f881 2025 	strb.w	r2, [r1, #37]	; 0x25
 8002e06:	4610      	mov	r0, r2
 8002e08:	bc30      	pop	{r4, r5}
 8002e0a:	4770      	bx	lr
 8002e0c:	2002      	movs	r0, #2
 8002e0e:	4770      	bx	lr
 8002e10:	200000ac 	.word	0x200000ac

08002e14 <acc_a121_cal_session_ack_program>:
 8002e14:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002e16:	b085      	sub	sp, #20
 8002e18:	f10d 020e 	add.w	r2, sp, #14
 8002e1c:	2700      	movs	r7, #0
 8002e1e:	2133      	movs	r1, #51	; 0x33
 8002e20:	4605      	mov	r5, r0
 8002e22:	f8ad 700e 	strh.w	r7, [sp, #14]
 8002e26:	f7fe f963 	bl	80010f0 <acc_sensor_reg_read>
 8002e2a:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8002e2e:	f003 0407 	and.w	r4, r3, #7
 8002e32:	2c01      	cmp	r4, #1
 8002e34:	d046      	beq.n	8002ec4 <acc_a121_cal_session_ack_program+0xb0>
 8002e36:	f013 0f06 	tst.w	r3, #6
 8002e3a:	d129      	bne.n	8002e90 <acc_a121_cal_session_ack_program+0x7c>
 8002e3c:	2c00      	cmp	r4, #0
 8002e3e:	d138      	bne.n	8002eb2 <acc_a121_cal_session_ack_program+0x9e>
 8002e40:	4e24      	ldr	r6, [pc, #144]	; (8002ed4 <acc_a121_cal_session_ack_program+0xc0>)
 8002e42:	9500      	str	r5, [sp, #0]
 8002e44:	6c37      	ldr	r7, [r6, #64]	; 0x40
 8002e46:	4a24      	ldr	r2, [pc, #144]	; (8002ed8 <acc_a121_cal_session_ack_program+0xc4>)
 8002e48:	4924      	ldr	r1, [pc, #144]	; (8002edc <acc_a121_cal_session_ack_program+0xc8>)
 8002e4a:	4620      	mov	r0, r4
 8002e4c:	47b8      	blx	r7
 8002e4e:	2300      	movs	r3, #0
 8002e50:	f10d 020e 	add.w	r2, sp, #14
 8002e54:	2145      	movs	r1, #69	; 0x45
 8002e56:	4628      	mov	r0, r5
 8002e58:	f8ad 300e 	strh.w	r3, [sp, #14]
 8002e5c:	f7fe f948 	bl	80010f0 <acc_sensor_reg_read>
 8002e60:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8002e64:	b95b      	cbnz	r3, 8002e7e <acc_a121_cal_session_ack_program+0x6a>
 8002e66:	6c36      	ldr	r6, [r6, #64]	; 0x40
 8002e68:	4a1d      	ldr	r2, [pc, #116]	; (8002ee0 <acc_a121_cal_session_ack_program+0xcc>)
 8002e6a:	491c      	ldr	r1, [pc, #112]	; (8002edc <acc_a121_cal_session_ack_program+0xc8>)
 8002e6c:	462b      	mov	r3, r5
 8002e6e:	2000      	movs	r0, #0
 8002e70:	47b0      	blx	r6
 8002e72:	2c02      	cmp	r4, #2
 8002e74:	d102      	bne.n	8002e7c <acc_a121_cal_session_ack_program+0x68>
 8002e76:	2001      	movs	r0, #1
 8002e78:	b005      	add	sp, #20
 8002e7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002e7c:	4e15      	ldr	r6, [pc, #84]	; (8002ed4 <acc_a121_cal_session_ack_program+0xc0>)
 8002e7e:	6c35      	ldr	r5, [r6, #64]	; 0x40
 8002e80:	4a18      	ldr	r2, [pc, #96]	; (8002ee4 <acc_a121_cal_session_ack_program+0xd0>)
 8002e82:	4919      	ldr	r1, [pc, #100]	; (8002ee8 <acc_a121_cal_session_ack_program+0xd4>)
 8002e84:	4623      	mov	r3, r4
 8002e86:	2000      	movs	r0, #0
 8002e88:	47a8      	blx	r5
 8002e8a:	2000      	movs	r0, #0
 8002e8c:	b005      	add	sp, #20
 8002e8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002e90:	1ea2      	subs	r2, r4, #2
 8002e92:	2a01      	cmp	r2, #1
 8002e94:	d80d      	bhi.n	8002eb2 <acc_a121_cal_session_ack_program+0x9e>
 8002e96:	f10d 020e 	add.w	r2, sp, #14
 8002e9a:	2145      	movs	r1, #69	; 0x45
 8002e9c:	4628      	mov	r0, r5
 8002e9e:	f8ad 700e 	strh.w	r7, [sp, #14]
 8002ea2:	f7fe f925 	bl	80010f0 <acc_sensor_reg_read>
 8002ea6:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8002eaa:	2b00      	cmp	r3, #0
 8002eac:	d1e1      	bne.n	8002e72 <acc_a121_cal_session_ack_program+0x5e>
 8002eae:	4e09      	ldr	r6, [pc, #36]	; (8002ed4 <acc_a121_cal_session_ack_program+0xc0>)
 8002eb0:	e7d9      	b.n	8002e66 <acc_a121_cal_session_ack_program+0x52>
 8002eb2:	4e08      	ldr	r6, [pc, #32]	; (8002ed4 <acc_a121_cal_session_ack_program+0xc0>)
 8002eb4:	9500      	str	r5, [sp, #0]
 8002eb6:	6c34      	ldr	r4, [r6, #64]	; 0x40
 8002eb8:	4a0c      	ldr	r2, [pc, #48]	; (8002eec <acc_a121_cal_session_ack_program+0xd8>)
 8002eba:	4908      	ldr	r1, [pc, #32]	; (8002edc <acc_a121_cal_session_ack_program+0xc8>)
 8002ebc:	2000      	movs	r0, #0
 8002ebe:	47a0      	blx	r4
 8002ec0:	2400      	movs	r4, #0
 8002ec2:	e7c4      	b.n	8002e4e <acc_a121_cal_session_ack_program+0x3a>
 8002ec4:	4e03      	ldr	r6, [pc, #12]	; (8002ed4 <acc_a121_cal_session_ack_program+0xc0>)
 8002ec6:	9500      	str	r5, [sp, #0]
 8002ec8:	4638      	mov	r0, r7
 8002eca:	4a09      	ldr	r2, [pc, #36]	; (8002ef0 <acc_a121_cal_session_ack_program+0xdc>)
 8002ecc:	6c37      	ldr	r7, [r6, #64]	; 0x40
 8002ece:	4903      	ldr	r1, [pc, #12]	; (8002edc <acc_a121_cal_session_ack_program+0xc8>)
 8002ed0:	47b8      	blx	r7
 8002ed2:	e7bc      	b.n	8002e4e <acc_a121_cal_session_ack_program+0x3a>
 8002ed4:	200000ac 	.word	0x200000ac
 8002ed8:	0800a824 	.word	0x0800a824
 8002edc:	0800a444 	.word	0x0800a444
 8002ee0:	0800a8bc 	.word	0x0800a8bc
 8002ee4:	0800a8f0 	.word	0x0800a8f0
 8002ee8:	0800a938 	.word	0x0800a938
 8002eec:	0800a888 	.word	0x0800a888
 8002ef0:	0800a854 	.word	0x0800a854

08002ef4 <acc_sensor_a121_lut_buffer_write.constprop.0>:
 8002ef4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ef8:	4c16      	ldr	r4, [pc, #88]	; (8002f54 <acc_sensor_a121_lut_buffer_write.constprop.0+0x60>)
 8002efa:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8002efc:	8e27      	ldrh	r7, [r4, #48]	; 0x30
 8002efe:	3a04      	subs	r2, #4
 8002f00:	3f04      	subs	r7, #4
 8002f02:	0852      	lsrs	r2, r2, #1
 8002f04:	087f      	lsrs	r7, r7, #1
 8002f06:	4297      	cmp	r7, r2
 8002f08:	460d      	mov	r5, r1
 8002f0a:	4681      	mov	r9, r0
 8002f0c:	4698      	mov	r8, r3
 8002f0e:	bf28      	it	cs
 8002f10:	4617      	movcs	r7, r2
 8002f12:	f101 0a04 	add.w	sl, r1, #4
 8002f16:	2400      	movs	r4, #0
 8002f18:	1b33      	subs	r3, r6, r4
 8002f1a:	42bb      	cmp	r3, r7
 8002f1c:	bf28      	it	cs
 8002f1e:	463b      	movcs	r3, r7
 8002f20:	ea6f 4184 	mvn.w	r1, r4, lsl #18
 8002f24:	1e5a      	subs	r2, r3, #1
 8002f26:	ea6f 4191 	mvn.w	r1, r1, lsr #18
 8002f2a:	469b      	mov	fp, r3
 8002f2c:	806a      	strh	r2, [r5, #2]
 8002f2e:	8029      	strh	r1, [r5, #0]
 8002f30:	005a      	lsls	r2, r3, #1
 8002f32:	eb08 0144 	add.w	r1, r8, r4, lsl #1
 8002f36:	4650      	mov	r0, sl
 8002f38:	441c      	add	r4, r3
 8002f3a:	f003 ff49 	bl	8006dd0 <memcpy>
 8002f3e:	f10b 0202 	add.w	r2, fp, #2
 8002f42:	2300      	movs	r3, #0
 8002f44:	4629      	mov	r1, r5
 8002f46:	4648      	mov	r0, r9
 8002f48:	f7fd ffea 	bl	8000f20 <acc_rss_integration_sensor_device_transfer>
 8002f4c:	42a6      	cmp	r6, r4
 8002f4e:	d8e3      	bhi.n	8002f18 <acc_sensor_a121_lut_buffer_write.constprop.0+0x24>
 8002f50:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002f54:	200000ac 	.word	0x200000ac

08002f58 <adl_data_new_line_test>:
 8002f58:	b138      	cbz	r0, 8002f6a <adl_data_new_line_test+0x12>
 8002f5a:	b538      	push	{r3, r4, r5, lr}
 8002f5c:	fbb0 f3f1 	udiv	r3, r0, r1
 8002f60:	fb01 0113 	mls	r1, r1, r3, r0
 8002f64:	b119      	cbz	r1, 8002f6e <adl_data_new_line_test+0x16>
 8002f66:	4610      	mov	r0, r2
 8002f68:	bd38      	pop	{r3, r4, r5, pc}
 8002f6a:	4610      	mov	r0, r2
 8002f6c:	4770      	bx	lr
 8002f6e:	4c0a      	ldr	r4, [pc, #40]	; (8002f98 <adl_data_new_line_test+0x40>)
 8002f70:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 8002f74:	2b01      	cmp	r3, #1
 8002f76:	d905      	bls.n	8002f84 <adl_data_new_line_test+0x2c>
 8002f78:	6c25      	ldr	r5, [r4, #64]	; 0x40
 8002f7a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002f7c:	4a07      	ldr	r2, [pc, #28]	; (8002f9c <adl_data_new_line_test+0x44>)
 8002f7e:	4908      	ldr	r1, [pc, #32]	; (8002fa0 <adl_data_new_line_test+0x48>)
 8002f80:	2002      	movs	r0, #2
 8002f82:	47a8      	blx	r5
 8002f84:	4b07      	ldr	r3, [pc, #28]	; (8002fa4 <adl_data_new_line_test+0x4c>)
 8002f86:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8002f88:	cb03      	ldmia	r3!, {r0, r1}
 8002f8a:	781b      	ldrb	r3, [r3, #0]
 8002f8c:	6010      	str	r0, [r2, #0]
 8002f8e:	7213      	strb	r3, [r2, #8]
 8002f90:	6051      	str	r1, [r2, #4]
 8002f92:	2209      	movs	r2, #9
 8002f94:	4610      	mov	r0, r2
 8002f96:	bd38      	pop	{r3, r4, r5, pc}
 8002f98:	200000ac 	.word	0x200000ac
 8002f9c:	0800b384 	.word	0x0800b384
 8002fa0:	0800a2cc 	.word	0x0800a2cc
 8002fa4:	0800a958 	.word	0x0800a958

08002fa8 <diagnostic_log_data_i8>:
 8002fa8:	4b1b      	ldr	r3, [pc, #108]	; (8003018 <diagnostic_log_data_i8+0x70>)
 8002faa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002fae:	4e1b      	ldr	r6, [pc, #108]	; (800301c <diagnostic_log_data_i8+0x74>)
 8002fb0:	4605      	mov	r5, r0
 8002fb2:	460c      	mov	r4, r1
 8002fb4:	cb03      	ldmia	r3!, {r0, r1}
 8002fb6:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 8002fb8:	781b      	ldrb	r3, [r3, #0]
 8002fba:	7213      	strb	r3, [r2, #8]
 8002fbc:	6010      	str	r0, [r2, #0]
 8002fbe:	6051      	str	r1, [r2, #4]
 8002fc0:	b1fc      	cbz	r4, 8003002 <diagnostic_log_data_i8+0x5a>
 8002fc2:	192c      	adds	r4, r5, r4
 8002fc4:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8002fc8:	3c01      	subs	r4, #1
 8002fca:	f1c5 0501 	rsb	r5, r5, #1
 8002fce:	2209      	movs	r2, #9
 8002fd0:	272d      	movs	r7, #45	; 0x2d
 8002fd2:	2112      	movs	r1, #18
 8002fd4:	eb05 0008 	add.w	r0, r5, r8
 8002fd8:	f7ff ffbe 	bl	8002f58 <adl_data_new_line_test>
 8002fdc:	f918 3f01 	ldrsb.w	r3, [r8, #1]!
 8002fe0:	2b00      	cmp	r3, #0
 8002fe2:	4601      	mov	r1, r0
 8002fe4:	da04      	bge.n	8002ff0 <diagnostic_log_data_i8+0x48>
 8002fe6:	6af3      	ldr	r3, [r6, #44]	; 0x2c
 8002fe8:	541f      	strb	r7, [r3, r0]
 8002fea:	f998 3000 	ldrsb.w	r3, [r8]
 8002fee:	3101      	adds	r1, #1
 8002ff0:	2b00      	cmp	r3, #0
 8002ff2:	bfd8      	it	le
 8002ff4:	425b      	negle	r3, r3
 8002ff6:	b298      	uxth	r0, r3
 8002ff8:	f7fd fd0e 	bl	8000a18 <adl_add_value_to_buffer>
 8002ffc:	45a0      	cmp	r8, r4
 8002ffe:	4602      	mov	r2, r0
 8003000:	d1e7      	bne.n	8002fd2 <diagnostic_log_data_i8+0x2a>
 8003002:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 8003006:	2b01      	cmp	r3, #1
 8003008:	d903      	bls.n	8003012 <diagnostic_log_data_i8+0x6a>
 800300a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800300e:	f7fd bcd1 	b.w	80009b4 <diagnostic_log_data_i16.part.0>
 8003012:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003016:	bf00      	nop
 8003018:	0800a958 	.word	0x0800a958
 800301c:	200000ac 	.word	0x200000ac

08003020 <diagnostic_log_data_u8>:
 8003020:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003022:	4b13      	ldr	r3, [pc, #76]	; (8003070 <diagnostic_log_data_u8+0x50>)
 8003024:	4e13      	ldr	r6, [pc, #76]	; (8003074 <diagnostic_log_data_u8+0x54>)
 8003026:	4607      	mov	r7, r0
 8003028:	460d      	mov	r5, r1
 800302a:	cb03      	ldmia	r3!, {r0, r1}
 800302c:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 800302e:	781b      	ldrb	r3, [r3, #0]
 8003030:	7213      	strb	r3, [r2, #8]
 8003032:	6010      	str	r0, [r2, #0]
 8003034:	6051      	str	r1, [r2, #4]
 8003036:	b18d      	cbz	r5, 800305c <diagnostic_log_data_u8+0x3c>
 8003038:	197d      	adds	r5, r7, r5
 800303a:	1e7c      	subs	r4, r7, #1
 800303c:	3d01      	subs	r5, #1
 800303e:	f1c7 0701 	rsb	r7, r7, #1
 8003042:	2209      	movs	r2, #9
 8003044:	2116      	movs	r1, #22
 8003046:	1938      	adds	r0, r7, r4
 8003048:	f7ff ff86 	bl	8002f58 <adl_data_new_line_test>
 800304c:	4601      	mov	r1, r0
 800304e:	f814 0f01 	ldrb.w	r0, [r4, #1]!
 8003052:	f7fd fce1 	bl	8000a18 <adl_add_value_to_buffer>
 8003056:	42ac      	cmp	r4, r5
 8003058:	4602      	mov	r2, r0
 800305a:	d1f3      	bne.n	8003044 <diagnostic_log_data_u8+0x24>
 800305c:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 8003060:	2b01      	cmp	r3, #1
 8003062:	d903      	bls.n	800306c <diagnostic_log_data_u8+0x4c>
 8003064:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003068:	f7fd bca4 	b.w	80009b4 <diagnostic_log_data_i16.part.0>
 800306c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800306e:	bf00      	nop
 8003070:	0800a958 	.word	0x0800a958
 8003074:	200000ac 	.word	0x200000ac

08003078 <diagnostic_log_data_i16>:
 8003078:	4b1a      	ldr	r3, [pc, #104]	; (80030e4 <diagnostic_log_data_i16+0x6c>)
 800307a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800307e:	4e1a      	ldr	r6, [pc, #104]	; (80030e8 <diagnostic_log_data_i16+0x70>)
 8003080:	4604      	mov	r4, r0
 8003082:	460d      	mov	r5, r1
 8003084:	cb03      	ldmia	r3!, {r0, r1}
 8003086:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 8003088:	781b      	ldrb	r3, [r3, #0]
 800308a:	7213      	strb	r3, [r2, #8]
 800308c:	6010      	str	r0, [r2, #0]
 800308e:	6051      	str	r1, [r2, #4]
 8003090:	b1ed      	cbz	r5, 80030ce <diagnostic_log_data_i16+0x56>
 8003092:	3c02      	subs	r4, #2
 8003094:	f04f 0800 	mov.w	r8, #0
 8003098:	2209      	movs	r2, #9
 800309a:	272d      	movs	r7, #45	; 0x2d
 800309c:	210c      	movs	r1, #12
 800309e:	4640      	mov	r0, r8
 80030a0:	f7ff ff5a 	bl	8002f58 <adl_data_new_line_test>
 80030a4:	f934 3f02 	ldrsh.w	r3, [r4, #2]!
 80030a8:	2b00      	cmp	r3, #0
 80030aa:	4601      	mov	r1, r0
 80030ac:	da04      	bge.n	80030b8 <diagnostic_log_data_i16+0x40>
 80030ae:	6af3      	ldr	r3, [r6, #44]	; 0x2c
 80030b0:	541f      	strb	r7, [r3, r0]
 80030b2:	f9b4 3000 	ldrsh.w	r3, [r4]
 80030b6:	3101      	adds	r1, #1
 80030b8:	2b00      	cmp	r3, #0
 80030ba:	bfd8      	it	le
 80030bc:	425b      	negle	r3, r3
 80030be:	b298      	uxth	r0, r3
 80030c0:	f7fd fcaa 	bl	8000a18 <adl_add_value_to_buffer>
 80030c4:	f108 0801 	add.w	r8, r8, #1
 80030c8:	4545      	cmp	r5, r8
 80030ca:	4602      	mov	r2, r0
 80030cc:	d1e6      	bne.n	800309c <diagnostic_log_data_i16+0x24>
 80030ce:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 80030d2:	2b01      	cmp	r3, #1
 80030d4:	d903      	bls.n	80030de <diagnostic_log_data_i16+0x66>
 80030d6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80030da:	f7fd bc6b 	b.w	80009b4 <diagnostic_log_data_i16.part.0>
 80030de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80030e2:	bf00      	nop
 80030e4:	0800a958 	.word	0x0800a958
 80030e8:	200000ac 	.word	0x200000ac

080030ec <diagnostic_log_data_u16>:
 80030ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80030ee:	4b12      	ldr	r3, [pc, #72]	; (8003138 <diagnostic_log_data_u16+0x4c>)
 80030f0:	4e12      	ldr	r6, [pc, #72]	; (800313c <diagnostic_log_data_u16+0x50>)
 80030f2:	4605      	mov	r5, r0
 80030f4:	460f      	mov	r7, r1
 80030f6:	cb03      	ldmia	r3!, {r0, r1}
 80030f8:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 80030fa:	781b      	ldrb	r3, [r3, #0]
 80030fc:	7213      	strb	r3, [r2, #8]
 80030fe:	6010      	str	r0, [r2, #0]
 8003100:	6051      	str	r1, [r2, #4]
 8003102:	b17f      	cbz	r7, 8003124 <diagnostic_log_data_u16+0x38>
 8003104:	3d02      	subs	r5, #2
 8003106:	2400      	movs	r4, #0
 8003108:	2209      	movs	r2, #9
 800310a:	210f      	movs	r1, #15
 800310c:	4620      	mov	r0, r4
 800310e:	f7ff ff23 	bl	8002f58 <adl_data_new_line_test>
 8003112:	4601      	mov	r1, r0
 8003114:	f835 0f02 	ldrh.w	r0, [r5, #2]!
 8003118:	f7fd fc7e 	bl	8000a18 <adl_add_value_to_buffer>
 800311c:	3401      	adds	r4, #1
 800311e:	42a7      	cmp	r7, r4
 8003120:	4602      	mov	r2, r0
 8003122:	d1f2      	bne.n	800310a <diagnostic_log_data_u16+0x1e>
 8003124:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 8003128:	2b01      	cmp	r3, #1
 800312a:	d903      	bls.n	8003134 <diagnostic_log_data_u16+0x48>
 800312c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003130:	f7fd bc40 	b.w	80009b4 <diagnostic_log_data_i16.part.0>
 8003134:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003136:	bf00      	nop
 8003138:	0800a958 	.word	0x0800a958
 800313c:	200000ac 	.word	0x200000ac

08003140 <diagnostic_log_data_i32>:
 8003140:	4b19      	ldr	r3, [pc, #100]	; (80031a8 <diagnostic_log_data_i32+0x68>)
 8003142:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003146:	4e19      	ldr	r6, [pc, #100]	; (80031ac <diagnostic_log_data_i32+0x6c>)
 8003148:	4604      	mov	r4, r0
 800314a:	460d      	mov	r5, r1
 800314c:	cb03      	ldmia	r3!, {r0, r1}
 800314e:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 8003150:	781b      	ldrb	r3, [r3, #0]
 8003152:	7213      	strb	r3, [r2, #8]
 8003154:	6010      	str	r0, [r2, #0]
 8003156:	6051      	str	r1, [r2, #4]
 8003158:	b1e5      	cbz	r5, 8003194 <diagnostic_log_data_i32+0x54>
 800315a:	3c04      	subs	r4, #4
 800315c:	f04f 0800 	mov.w	r8, #0
 8003160:	2209      	movs	r2, #9
 8003162:	272d      	movs	r7, #45	; 0x2d
 8003164:	2107      	movs	r1, #7
 8003166:	4640      	mov	r0, r8
 8003168:	f7ff fef6 	bl	8002f58 <adl_data_new_line_test>
 800316c:	f854 3f04 	ldr.w	r3, [r4, #4]!
 8003170:	2b00      	cmp	r3, #0
 8003172:	f108 0801 	add.w	r8, r8, #1
 8003176:	4601      	mov	r1, r0
 8003178:	da03      	bge.n	8003182 <diagnostic_log_data_i32+0x42>
 800317a:	6af3      	ldr	r3, [r6, #44]	; 0x2c
 800317c:	541f      	strb	r7, [r3, r0]
 800317e:	6823      	ldr	r3, [r4, #0]
 8003180:	3101      	adds	r1, #1
 8003182:	ea83 70e3 	eor.w	r0, r3, r3, asr #31
 8003186:	eba0 70e3 	sub.w	r0, r0, r3, asr #31
 800318a:	f7fd fc45 	bl	8000a18 <adl_add_value_to_buffer>
 800318e:	4545      	cmp	r5, r8
 8003190:	4602      	mov	r2, r0
 8003192:	d1e7      	bne.n	8003164 <diagnostic_log_data_i32+0x24>
 8003194:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 8003198:	2b01      	cmp	r3, #1
 800319a:	d903      	bls.n	80031a4 <diagnostic_log_data_i32+0x64>
 800319c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80031a0:	f7fd bc08 	b.w	80009b4 <diagnostic_log_data_i16.part.0>
 80031a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80031a8:	0800a958 	.word	0x0800a958
 80031ac:	200000ac 	.word	0x200000ac

080031b0 <diagnostic_log_data_u32>:
 80031b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80031b2:	4b12      	ldr	r3, [pc, #72]	; (80031fc <diagnostic_log_data_u32+0x4c>)
 80031b4:	4e12      	ldr	r6, [pc, #72]	; (8003200 <diagnostic_log_data_u32+0x50>)
 80031b6:	4605      	mov	r5, r0
 80031b8:	460f      	mov	r7, r1
 80031ba:	cb03      	ldmia	r3!, {r0, r1}
 80031bc:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 80031be:	781b      	ldrb	r3, [r3, #0]
 80031c0:	7213      	strb	r3, [r2, #8]
 80031c2:	6010      	str	r0, [r2, #0]
 80031c4:	6051      	str	r1, [r2, #4]
 80031c6:	b17f      	cbz	r7, 80031e8 <diagnostic_log_data_u32+0x38>
 80031c8:	3d04      	subs	r5, #4
 80031ca:	2400      	movs	r4, #0
 80031cc:	2209      	movs	r2, #9
 80031ce:	2108      	movs	r1, #8
 80031d0:	4620      	mov	r0, r4
 80031d2:	f7ff fec1 	bl	8002f58 <adl_data_new_line_test>
 80031d6:	4601      	mov	r1, r0
 80031d8:	f855 0f04 	ldr.w	r0, [r5, #4]!
 80031dc:	f7fd fc1c 	bl	8000a18 <adl_add_value_to_buffer>
 80031e0:	3401      	adds	r4, #1
 80031e2:	42a7      	cmp	r7, r4
 80031e4:	4602      	mov	r2, r0
 80031e6:	d1f2      	bne.n	80031ce <diagnostic_log_data_u32+0x1e>
 80031e8:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 80031ec:	2b01      	cmp	r3, #1
 80031ee:	d903      	bls.n	80031f8 <diagnostic_log_data_u32+0x48>
 80031f0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80031f4:	f7fd bbde 	b.w	80009b4 <diagnostic_log_data_i16.part.0>
 80031f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80031fa:	bf00      	nop
 80031fc:	0800a958 	.word	0x0800a958
 8003200:	200000ac 	.word	0x200000ac

08003204 <internal_buffer_processed_read.part.0.constprop.0>:
 8003204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003208:	4b23      	ldr	r3, [pc, #140]	; (8003298 <internal_buffer_processed_read.part.0.constprop.0+0x94>)
 800320a:	f8b3 9030 	ldrh.w	r9, [r3, #48]	; 0x30
 800320e:	b083      	sub	sp, #12
 8003210:	2300      	movs	r3, #0
 8003212:	ea4f 0959 	mov.w	r9, r9, lsr #1
 8003216:	e9cd 3300 	strd	r3, r3, [sp]
 800321a:	4688      	mov	r8, r1
 800321c:	4692      	mov	sl, r2
 800321e:	461e      	mov	r6, r3
 8003220:	4683      	mov	fp, r0
 8003222:	f1a9 0904 	sub.w	r9, r9, #4
 8003226:	460d      	mov	r5, r1
 8003228:	4617      	mov	r7, r2
 800322a:	e024      	b.n	8003276 <internal_buffer_processed_read.part.0.constprop.0+0x72>
 800322c:	f248 0200 	movw	r2, #32768	; 0x8000
 8003230:	1e63      	subs	r3, r4, #1
 8003232:	802a      	strh	r2, [r5, #0]
 8003234:	f04f 0200 	mov.w	r2, #0
 8003238:	806e      	strh	r6, [r5, #2]
 800323a:	80ea      	strh	r2, [r5, #6]
 800323c:	80ab      	strh	r3, [r5, #4]
 800323e:	0062      	lsls	r2, r4, #1
 8003240:	2100      	movs	r1, #0
 8003242:	f105 0008 	add.w	r0, r5, #8
 8003246:	f003 fc88 	bl	8006b5a <memset>
 800324a:	4629      	mov	r1, r5
 800324c:	2301      	movs	r3, #1
 800324e:	4658      	mov	r0, fp
 8003250:	1d22      	adds	r2, r4, #4
 8003252:	f7fd fe65 	bl	8000f20 <acc_rss_integration_sensor_device_transfer>
 8003256:	466b      	mov	r3, sp
 8003258:	cb03      	ldmia	r3!, {r0, r1}
 800325a:	4426      	add	r6, r4
 800325c:	6069      	str	r1, [r5, #4]
 800325e:	6028      	str	r0, [r5, #0]
 8003260:	eb08 0546 	add.w	r5, r8, r6, lsl #1
 8003264:	f858 0016 	ldr.w	r0, [r8, r6, lsl #1]
 8003268:	6869      	ldr	r1, [r5, #4]
 800326a:	466b      	mov	r3, sp
 800326c:	4556      	cmp	r6, sl
 800326e:	c303      	stmia	r3!, {r0, r1}
 8003270:	eba7 0704 	sub.w	r7, r7, r4
 8003274:	d20a      	bcs.n	800328c <internal_buffer_processed_read.part.0.constprop.0+0x88>
 8003276:	45b9      	cmp	r9, r7
 8003278:	464c      	mov	r4, r9
 800327a:	bf28      	it	cs
 800327c:	463c      	movcs	r4, r7
 800327e:	45b9      	cmp	r9, r7
 8003280:	d2d4      	bcs.n	800322c <internal_buffer_processed_read.part.0.constprop.0+0x28>
 8003282:	e000      	b.n	8003286 <internal_buffer_processed_read.part.0.constprop.0+0x82>
 8003284:	3c01      	subs	r4, #1
 8003286:	07e3      	lsls	r3, r4, #31
 8003288:	d4fc      	bmi.n	8003284 <internal_buffer_processed_read.part.0.constprop.0+0x80>
 800328a:	e7cf      	b.n	800322c <internal_buffer_processed_read.part.0.constprop.0+0x28>
 800328c:	f108 0008 	add.w	r0, r8, #8
 8003290:	b003      	add	sp, #12
 8003292:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003296:	bf00      	nop
 8003298:	200000ac 	.word	0x200000ac

0800329c <test_clock_and_supply_test.isra.0>:
 800329c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80032a0:	f5ad 7d09 	sub.w	sp, sp, #548	; 0x224
 80032a4:	f10d 021e 	add.w	r2, sp, #30
 80032a8:	4604      	mov	r4, r0
 80032aa:	460d      	mov	r5, r1
 80032ac:	6800      	ldr	r0, [r0, #0]
 80032ae:	2132      	movs	r1, #50	; 0x32
 80032b0:	f7fd ff1e 	bl	80010f0 <acc_sensor_reg_read>
 80032b4:	4862      	ldr	r0, [pc, #392]	; (8003440 <test_clock_and_supply_test.isra.0+0x1a4>)
 80032b6:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 80032ba:	f7fd fb9d 	bl	80009f8 <acc_diagnostic_log_scalar>
 80032be:	f8bd 001e 	ldrh.w	r0, [sp, #30]
 80032c2:	b9a0      	cbnz	r0, 80032ee <test_clock_and_supply_test.isra.0+0x52>
 80032c4:	4b5f      	ldr	r3, [pc, #380]	; (8003444 <test_clock_and_supply_test.isra.0+0x1a8>)
 80032c6:	4960      	ldr	r1, [pc, #384]	; (8003448 <test_clock_and_supply_test.isra.0+0x1ac>)
 80032c8:	4a60      	ldr	r2, [pc, #384]	; (800344c <test_clock_and_supply_test.isra.0+0x1b0>)
 80032ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80032cc:	4607      	mov	r7, r0
 80032ce:	f04f 0b04 	mov.w	fp, #4
 80032d2:	4798      	blx	r3
 80032d4:	4639      	mov	r1, r7
 80032d6:	485e      	ldr	r0, [pc, #376]	; (8003450 <test_clock_and_supply_test.isra.0+0x1b4>)
 80032d8:	f7fd fb8e 	bl	80009f8 <acc_diagnostic_log_scalar>
 80032dc:	485d      	ldr	r0, [pc, #372]	; (8003454 <test_clock_and_supply_test.isra.0+0x1b8>)
 80032de:	4639      	mov	r1, r7
 80032e0:	f7fd fb8a 	bl	80009f8 <acc_diagnostic_log_scalar>
 80032e4:	4658      	mov	r0, fp
 80032e6:	f50d 7d09 	add.w	sp, sp, #548	; 0x224
 80032ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80032ee:	6829      	ldr	r1, [r5, #0]
 80032f0:	6820      	ldr	r0, [r4, #0]
 80032f2:	4f59      	ldr	r7, [pc, #356]	; (8003458 <test_clock_and_supply_test.isra.0+0x1bc>)
 80032f4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80032f8:	f7ff ff84 	bl	8003204 <internal_buffer_processed_read.part.0.constprop.0>
 80032fc:	4682      	mov	sl, r0
 80032fe:	4857      	ldr	r0, [pc, #348]	; (800345c <test_clock_and_supply_test.isra.0+0x1c0>)
 8003300:	f7fd fb22 	bl	8000948 <acc_diagnostic_log_array.constprop.0>
 8003304:	ae48      	add	r6, sp, #288	; 0x120
 8003306:	4650      	mov	r0, sl
 8003308:	f44f 7100 	mov.w	r1, #512	; 0x200
 800330c:	f7fd fb6c 	bl	80009e8 <acc_diagnostic_log_data_u16>
 8003310:	f1aa 0402 	sub.w	r4, sl, #2
 8003314:	4631      	mov	r1, r6
 8003316:	ad88      	add	r5, sp, #544	; 0x220
 8003318:	2000      	movs	r0, #0
 800331a:	f934 3f02 	ldrsh.w	r3, [r4, #2]!
 800331e:	fb07 f203 	mul.w	r2, r7, r3
 8003322:	2b00      	cmp	r3, #0
 8003324:	bfa8      	it	ge
 8003326:	eb03 0383 	addge.w	r3, r3, r3, lsl #2
 800332a:	ea4f 4212 	mov.w	r2, r2, lsr #16
 800332e:	bfa8      	it	ge
 8003330:	ebc3 1303 	rsbge	r3, r3, r3, lsl #4
 8003334:	f1c2 0200 	rsb	r2, r2, #0
 8003338:	bfb4      	ite	lt
 800333a:	b213      	sxthlt	r3, r2
 800333c:	131b      	asrge	r3, r3, #12
 800333e:	f821 3b02 	strh.w	r3, [r1], #2
 8003342:	42a9      	cmp	r1, r5
 8003344:	4418      	add	r0, r3
 8003346:	d1e8      	bne.n	800331a <test_clock_and_supply_test.isra.0+0x7e>
 8003348:	2800      	cmp	r0, #0
 800334a:	bfb8      	it	lt
 800334c:	307f      	addlt	r0, #127	; 0x7f
 800334e:	f340 15cf 	sbfx	r5, r0, #7, #16
 8003352:	4629      	mov	r1, r5
 8003354:	4842      	ldr	r0, [pc, #264]	; (8003460 <test_clock_and_supply_test.isra.0+0x1c4>)
 8003356:	f8df 9118 	ldr.w	r9, [pc, #280]	; 8003470 <test_clock_and_supply_test.isra.0+0x1d4>
 800335a:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 8003458 <test_clock_and_supply_test.isra.0+0x1bc>
 800335e:	f7fd fb4b 	bl	80009f8 <acc_diagnostic_log_scalar>
 8003362:	4840      	ldr	r0, [pc, #256]	; (8003464 <test_clock_and_supply_test.isra.0+0x1c8>)
 8003364:	f7fd faf0 	bl	8000948 <acc_diagnostic_log_array.constprop.0>
 8003368:	2180      	movs	r1, #128	; 0x80
 800336a:	4630      	mov	r0, r6
 800336c:	f7fd fb34 	bl	80009d8 <acc_diagnostic_log_data_i16>
 8003370:	2301      	movs	r3, #1
 8003372:	461f      	mov	r7, r3
 8003374:	f44f 6cfa 	mov.w	ip, #2000	; 0x7d0
 8003378:	f44f 60c8 	mov.w	r0, #1600	; 0x640
 800337c:	f04f 0b03 	mov.w	fp, #3
 8003380:	4619      	mov	r1, r3
 8003382:	eb0a 2101 	add.w	r1, sl, r1, lsl #8
 8003386:	3902      	subs	r1, #2
 8003388:	aa08      	add	r2, sp, #32
 800338a:	f647 74ff 	movw	r4, #32767	; 0x7fff
 800338e:	f931 3f02 	ldrsh.w	r3, [r1, #2]!
 8003392:	fb08 fe03 	mul.w	lr, r8, r3
 8003396:	2b00      	cmp	r3, #0
 8003398:	bfa8      	it	ge
 800339a:	eb03 0383 	addge.w	r3, r3, r3, lsl #2
 800339e:	ea4f 4e1e 	mov.w	lr, lr, lsr #16
 80033a2:	bfa8      	it	ge
 80033a4:	ebc3 1303 	rsbge	r3, r3, r3, lsl #4
 80033a8:	f1ce 0e00 	rsb	lr, lr, #0
 80033ac:	bfb4      	ite	lt
 80033ae:	fa0f f38e 	sxthlt.w	r3, lr
 80033b2:	131b      	asrge	r3, r3, #12
 80033b4:	442b      	add	r3, r5
 80033b6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80033ba:	02db      	lsls	r3, r3, #11
 80033bc:	f1c3 0e00 	rsb	lr, r3, #0
 80033c0:	ea4f 3e1e 	mov.w	lr, lr, lsr #12
 80033c4:	f1ce 0e00 	rsb	lr, lr, #0
 80033c8:	bf4c      	ite	mi
 80033ca:	fa0f f38e 	sxthmi.w	r3, lr
 80033ce:	f343 330f 	sbfxpl	r3, r3, #12, #16
 80033d2:	f822 3b02 	strh.w	r3, [r2], #2
 80033d6:	429c      	cmp	r4, r3
 80033d8:	bfa8      	it	ge
 80033da:	461c      	movge	r4, r3
 80033dc:	4296      	cmp	r6, r2
 80033de:	b224      	sxth	r4, r4
 80033e0:	d1d5      	bne.n	800338e <test_clock_and_supply_test.isra.0+0xf2>
 80033e2:	4284      	cmp	r4, r0
 80033e4:	db01      	blt.n	80033ea <test_clock_and_supply_test.isra.0+0x14e>
 80033e6:	4564      	cmp	r4, ip
 80033e8:	dd0f      	ble.n	800340a <test_clock_and_supply_test.isra.0+0x16e>
 80033ea:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80033ee:	e9cd 9c03 	strd	r9, ip, [sp, #12]
 80033f2:	4b14      	ldr	r3, [pc, #80]	; (8003444 <test_clock_and_supply_test.isra.0+0x1a8>)
 80033f4:	f8cd 9000 	str.w	r9, [sp]
 80033f8:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 80033fa:	4a1b      	ldr	r2, [pc, #108]	; (8003468 <test_clock_and_supply_test.isra.0+0x1cc>)
 80033fc:	4912      	ldr	r1, [pc, #72]	; (8003448 <test_clock_and_supply_test.isra.0+0x1ac>)
 80033fe:	464b      	mov	r3, r9
 8003400:	2000      	movs	r0, #0
 8003402:	47b8      	blx	r7
 8003404:	f04f 0b04 	mov.w	fp, #4
 8003408:	2700      	movs	r7, #0
 800340a:	4621      	mov	r1, r4
 800340c:	4648      	mov	r0, r9
 800340e:	f7fd faf3 	bl	80009f8 <acc_diagnostic_log_scalar>
 8003412:	f109 000c 	add.w	r0, r9, #12
 8003416:	f7fd fa97 	bl	8000948 <acc_diagnostic_log_array.constprop.0>
 800341a:	2180      	movs	r1, #128	; 0x80
 800341c:	a808      	add	r0, sp, #32
 800341e:	f7fd fadb 	bl	80009d8 <acc_diagnostic_log_data_i16>
 8003422:	4b12      	ldr	r3, [pc, #72]	; (800346c <test_clock_and_supply_test.isra.0+0x1d0>)
 8003424:	f109 091c 	add.w	r9, r9, #28
 8003428:	4599      	cmp	r9, r3
 800342a:	d006      	beq.n	800343a <test_clock_and_supply_test.isra.0+0x19e>
 800342c:	f8d9 1014 	ldr.w	r1, [r9, #20]
 8003430:	f9b9 0018 	ldrsh.w	r0, [r9, #24]
 8003434:	f9b9 c01a 	ldrsh.w	ip, [r9, #26]
 8003438:	e7a3      	b.n	8003382 <test_clock_and_supply_test.isra.0+0xe6>
 800343a:	2101      	movs	r1, #1
 800343c:	e74b      	b.n	80032d6 <test_clock_and_supply_test.isra.0+0x3a>
 800343e:	bf00      	nop
 8003440:	0800a964 	.word	0x0800a964
 8003444:	200000ac 	.word	0x200000ac
 8003448:	0800a574 	.word	0x0800a574
 800344c:	0800a970 	.word	0x0800a970
 8003450:	0800aa38 	.word	0x0800aa38
 8003454:	0800aa4c 	.word	0x0800aa4c
 8003458:	fffffb50 	.word	0xfffffb50
 800345c:	0800a9c4 	.word	0x0800a9c4
 8003460:	0800a9dc 	.word	0x0800a9dc
 8003464:	0800a9e8 	.word	0x0800a9e8
 8003468:	0800a9f0 	.word	0x0800a9f0
 800346c:	080086d0 	.word	0x080086d0
 8003470:	0800867c 	.word	0x0800867c

08003474 <test_clock_and_supply>:
 8003474:	b530      	push	{r4, r5, lr}
 8003476:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8003478:	2b01      	cmp	r3, #1
 800347a:	b083      	sub	sp, #12
 800347c:	4604      	mov	r4, r0
 800347e:	d005      	beq.n	800348c <test_clock_and_supply+0x18>
 8003480:	2b02      	cmp	r3, #2
 8003482:	d02e      	beq.n	80034e2 <test_clock_and_supply+0x6e>
 8003484:	b1eb      	cbz	r3, 80034c2 <test_clock_and_supply+0x4e>
 8003486:	2000      	movs	r0, #0
 8003488:	b003      	add	sp, #12
 800348a:	bd30      	pop	{r4, r5, pc}
 800348c:	4d1d      	ldr	r5, [pc, #116]	; (8003504 <test_clock_and_supply+0x90>)
 800348e:	f895 3048 	ldrb.w	r3, [r5, #72]	; 0x48
 8003492:	2b01      	cmp	r3, #1
 8003494:	d904      	bls.n	80034a0 <test_clock_and_supply+0x2c>
 8003496:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8003498:	4a1b      	ldr	r2, [pc, #108]	; (8003508 <test_clock_and_supply+0x94>)
 800349a:	491c      	ldr	r1, [pc, #112]	; (800350c <test_clock_and_supply+0x98>)
 800349c:	2002      	movs	r0, #2
 800349e:	4798      	blx	r3
 80034a0:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 80034a2:	9301      	str	r3, [sp, #4]
 80034a4:	e9d4 1203 	ldrd	r1, r2, [r4, #12]
 80034a8:	6820      	ldr	r0, [r4, #0]
 80034aa:	ab01      	add	r3, sp, #4
 80034ac:	f7fd fec6 	bl	800123c <acc_cpd_assembly_test_load_program>
 80034b0:	b9e8      	cbnz	r0, 80034ee <test_clock_and_supply+0x7a>
 80034b2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80034b4:	4a16      	ldr	r2, [pc, #88]	; (8003510 <test_clock_and_supply+0x9c>)
 80034b6:	4915      	ldr	r1, [pc, #84]	; (800350c <test_clock_and_supply+0x98>)
 80034b8:	2000      	movs	r0, #0
 80034ba:	4798      	blx	r3
 80034bc:	2004      	movs	r0, #4
 80034be:	b003      	add	sp, #12
 80034c0:	bd30      	pop	{r4, r5, pc}
 80034c2:	4b10      	ldr	r3, [pc, #64]	; (8003504 <test_clock_and_supply+0x90>)
 80034c4:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 80034c8:	2a01      	cmp	r2, #1
 80034ca:	d904      	bls.n	80034d6 <test_clock_and_supply+0x62>
 80034cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80034ce:	4a11      	ldr	r2, [pc, #68]	; (8003514 <test_clock_and_supply+0xa0>)
 80034d0:	490e      	ldr	r1, [pc, #56]	; (800350c <test_clock_and_supply+0x98>)
 80034d2:	2002      	movs	r0, #2
 80034d4:	4798      	blx	r3
 80034d6:	4810      	ldr	r0, [pc, #64]	; (8003518 <test_clock_and_supply+0xa4>)
 80034d8:	f7fd fa96 	bl	8000a08 <acc_diagnostic_log_set_scope>
 80034dc:	2001      	movs	r0, #1
 80034de:	b003      	add	sp, #12
 80034e0:	bd30      	pop	{r4, r5, pc}
 80034e2:	f100 010c 	add.w	r1, r0, #12
 80034e6:	f7ff fed9 	bl	800329c <test_clock_and_supply_test.isra.0>
 80034ea:	b003      	add	sp, #12
 80034ec:	bd30      	pop	{r4, r5, pc}
 80034ee:	6820      	ldr	r0, [r4, #0]
 80034f0:	f44f 71d6 	mov.w	r1, #428	; 0x1ac
 80034f4:	f7fd fe12 	bl	800111c <acc_sensor_protocol_a121_run_program>
 80034f8:	2800      	cmp	r0, #0
 80034fa:	d0da      	beq.n	80034b2 <test_clock_and_supply+0x3e>
 80034fc:	2002      	movs	r0, #2
 80034fe:	b003      	add	sp, #12
 8003500:	bd30      	pop	{r4, r5, pc}
 8003502:	bf00      	nop
 8003504:	200000ac 	.word	0x200000ac
 8003508:	0800aa98 	.word	0x0800aa98
 800350c:	0800a574 	.word	0x0800a574
 8003510:	0800aab8 	.word	0x0800aab8
 8003514:	0800aa60 	.word	0x0800aa60
 8003518:	0800aa80 	.word	0x0800aa80

0800351c <acc_confprogram_live_patch.constprop.0>:
 800351c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003520:	eb02 06c3 	add.w	r6, r2, r3, lsl #3
 8003524:	b089      	sub	sp, #36	; 0x24
 8003526:	8873      	ldrh	r3, [r6, #2]
 8003528:	9f12      	ldr	r7, [sp, #72]	; 0x48
 800352a:	b34b      	cbz	r3, 8003580 <acc_confprogram_live_patch.constprop.0+0x64>
 800352c:	4680      	mov	r8, r0
 800352e:	4689      	mov	r9, r1
 8003530:	2500      	movs	r5, #0
 8003532:	f04f 0b01 	mov.w	fp, #1
 8003536:	6873      	ldr	r3, [r6, #4]
 8003538:	f853 4025 	ldr.w	r4, [r3, r5, lsl #2]
 800353c:	f3c4 7001 	ubfx	r0, r4, #28, #2
 8003540:	2801      	cmp	r0, #1
 8003542:	d00c      	beq.n	800355e <acc_confprogram_live_patch.constprop.0+0x42>
 8003544:	2802      	cmp	r0, #2
 8003546:	d033      	beq.n	80035b0 <acc_confprogram_live_patch.constprop.0+0x94>
 8003548:	b1f0      	cbz	r0, 8003588 <acc_confprogram_live_patch.constprop.0+0x6c>
 800354a:	4b34      	ldr	r3, [pc, #208]	; (800361c <acc_confprogram_live_patch.constprop.0+0x100>)
 800354c:	4a34      	ldr	r2, [pc, #208]	; (8003620 <acc_confprogram_live_patch.constprop.0+0x104>)
 800354e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003550:	4934      	ldr	r1, [pc, #208]	; (8003624 <acc_confprogram_live_patch.constprop.0+0x108>)
 8003552:	2000      	movs	r0, #0
 8003554:	4798      	blx	r3
 8003556:	2000      	movs	r0, #0
 8003558:	b009      	add	sp, #36	; 0x24
 800355a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800355e:	b2a3      	uxth	r3, r4
 8003560:	4619      	mov	r1, r3
 8003562:	f859 2023 	ldr.w	r2, [r9, r3, lsl #2]
 8003566:	f022 020f 	bic.w	r2, r2, #15
 800356a:	b117      	cbz	r7, 8003572 <acc_confprogram_live_patch.constprop.0+0x56>
 800356c:	f3c4 4403 	ubfx	r4, r4, #16, #4
 8003570:	4322      	orrs	r2, r4
 8003572:	4640      	mov	r0, r8
 8003574:	f7fd fd0a 	bl	8000f8c <acc_sensor_a121_conf_write_instr>
 8003578:	8873      	ldrh	r3, [r6, #2]
 800357a:	3501      	adds	r5, #1
 800357c:	429d      	cmp	r5, r3
 800357e:	d3da      	bcc.n	8003536 <acc_confprogram_live_patch.constprop.0+0x1a>
 8003580:	2001      	movs	r0, #1
 8003582:	b009      	add	sp, #36	; 0x24
 8003584:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003588:	f3c4 5a44 	ubfx	sl, r4, #21, #5
 800358c:	fa0b f30a 	lsl.w	r3, fp, sl
 8003590:	429f      	cmp	r7, r3
 8003592:	d316      	bcc.n	80035c2 <acc_confprogram_live_patch.constprop.0+0xa6>
 8003594:	4a21      	ldr	r2, [pc, #132]	; (800361c <acc_confprogram_live_patch.constprop.0+0x100>)
 8003596:	9700      	str	r7, [sp, #0]
 8003598:	3b01      	subs	r3, #1
 800359a:	9301      	str	r3, [sp, #4]
 800359c:	4921      	ldr	r1, [pc, #132]	; (8003624 <acc_confprogram_live_patch.constprop.0+0x108>)
 800359e:	9003      	str	r0, [sp, #12]
 80035a0:	b2a3      	uxth	r3, r4
 80035a2:	6c14      	ldr	r4, [r2, #64]	; 0x40
 80035a4:	4a20      	ldr	r2, [pc, #128]	; (8003628 <acc_confprogram_live_patch.constprop.0+0x10c>)
 80035a6:	47a0      	blx	r4
 80035a8:	9803      	ldr	r0, [sp, #12]
 80035aa:	b009      	add	sp, #36	; 0x24
 80035ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80035b0:	b2a3      	uxth	r3, r4
 80035b2:	4619      	mov	r1, r3
 80035b4:	f859 2023 	ldr.w	r2, [r9, r3, lsl #2]
 80035b8:	f022 020f 	bic.w	r2, r2, #15
 80035bc:	2f00      	cmp	r7, #0
 80035be:	d1d8      	bne.n	8003572 <acc_confprogram_live_patch.constprop.0+0x56>
 80035c0:	e7d4      	b.n	800356c <acc_confprogram_live_patch.constprop.0+0x50>
 80035c2:	b2a3      	uxth	r3, r4
 80035c4:	f443 4c20 	orr.w	ip, r3, #40960	; 0xa000
 80035c8:	9303      	str	r3, [sp, #12]
 80035ca:	a905      	add	r1, sp, #20
 80035cc:	2301      	movs	r3, #1
 80035ce:	f8ad 0018 	strh.w	r0, [sp, #24]
 80035d2:	f8cd 001a 	str.w	r0, [sp, #26]
 80035d6:	2205      	movs	r2, #5
 80035d8:	4640      	mov	r0, r8
 80035da:	f8ad c014 	strh.w	ip, [sp, #20]
 80035de:	f8ad b016 	strh.w	fp, [sp, #22]
 80035e2:	f7fd fc9d 	bl	8000f20 <acc_rss_integration_sensor_device_transfer>
 80035e6:	a904      	add	r1, sp, #16
 80035e8:	f10d 001a 	add.w	r0, sp, #26
 80035ec:	2201      	movs	r2, #1
 80035ee:	f7fd fad1 	bl	8000b94 <acc_utils_transfer_buffer_to_uint32>
 80035f2:	f1ca 0a20 	rsb	sl, sl, #32
 80035f6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80035fa:	f3c4 4404 	ubfx	r4, r4, #16, #5
 80035fe:	fa23 fa0a 	lsr.w	sl, r3, sl
 8003602:	9b04      	ldr	r3, [sp, #16]
 8003604:	9903      	ldr	r1, [sp, #12]
 8003606:	fa0a fa04 	lsl.w	sl, sl, r4
 800360a:	ea23 020a 	bic.w	r2, r3, sl
 800360e:	fa07 f404 	lsl.w	r4, r7, r4
 8003612:	4322      	orrs	r2, r4
 8003614:	4640      	mov	r0, r8
 8003616:	f7fd fcb9 	bl	8000f8c <acc_sensor_a121_conf_write_instr>
 800361a:	e7ad      	b.n	8003578 <acc_confprogram_live_patch.constprop.0+0x5c>
 800361c:	200000ac 	.word	0x200000ac
 8003620:	0800ab14 	.word	0x0800ab14
 8003624:	0800a3c4 	.word	0x0800a3c4
 8003628:	0800aadc 	.word	0x0800aadc

0800362c <test_communication>:
 800362c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003630:	f8df a340 	ldr.w	sl, [pc, #832]	; 8003974 <test_communication+0x348>
 8003634:	ed2d 8b02 	vpush	{d8}
 8003638:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 800363c:	2b01      	cmp	r3, #1
 800363e:	b095      	sub	sp, #84	; 0x54
 8003640:	4683      	mov	fp, r0
 8003642:	d905      	bls.n	8003650 <test_communication+0x24>
 8003644:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8003648:	4aba      	ldr	r2, [pc, #744]	; (8003934 <test_communication+0x308>)
 800364a:	49bb      	ldr	r1, [pc, #748]	; (8003938 <test_communication+0x30c>)
 800364c:	2002      	movs	r0, #2
 800364e:	4798      	blx	r3
 8003650:	48ba      	ldr	r0, [pc, #744]	; (800393c <test_communication+0x310>)
 8003652:	f8df 92e4 	ldr.w	r9, [pc, #740]	; 8003938 <test_communication+0x30c>
 8003656:	f7fd f9d7 	bl	8000a08 <acc_diagnostic_log_set_scope>
 800365a:	4bb9      	ldr	r3, [pc, #740]	; (8003940 <test_communication+0x314>)
 800365c:	f8da 404c 	ldr.w	r4, [sl, #76]	; 0x4c
 8003660:	f8db 0000 	ldr.w	r0, [fp]
 8003664:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003668:	2101      	movs	r1, #1
 800366a:	fba3 3404 	umull	r3, r4, r3, r4
 800366e:	f7fd fd2f 	bl	80010d0 <acc_sensor_reg_write>
 8003672:	f8db 0000 	ldr.w	r0, [fp]
 8003676:	2200      	movs	r2, #0
 8003678:	2101      	movs	r1, #1
 800367a:	f7fd fd29 	bl	80010d0 <acc_sensor_reg_write>
 800367e:	f8db 0000 	ldr.w	r0, [fp]
 8003682:	2201      	movs	r2, #1
 8003684:	215d      	movs	r1, #93	; 0x5d
 8003686:	f7fd fd23 	bl	80010d0 <acc_sensor_reg_write>
 800368a:	f8db 0000 	ldr.w	r0, [fp]
 800368e:	2200      	movs	r2, #0
 8003690:	215d      	movs	r1, #93	; 0x5d
 8003692:	f7fd fd1d 	bl	80010d0 <acc_sensor_reg_write>
 8003696:	f8db 0000 	ldr.w	r0, [fp]
 800369a:	2200      	movs	r2, #0
 800369c:	2174      	movs	r1, #116	; 0x74
 800369e:	f7fd fd17 	bl	80010d0 <acc_sensor_reg_write>
 80036a2:	f8db 0000 	ldr.w	r0, [fp]
 80036a6:	2201      	movs	r2, #1
 80036a8:	21d5      	movs	r1, #213	; 0xd5
 80036aa:	f7fd fd11 	bl	80010d0 <acc_sensor_reg_write>
 80036ae:	09a5      	lsrs	r5, r4, #6
 80036b0:	0da2      	lsrs	r2, r4, #22
 80036b2:	f8db 0000 	ldr.w	r0, [fp]
 80036b6:	2155      	movs	r1, #85	; 0x55
 80036b8:	f7fd fd0a 	bl	80010d0 <acc_sensor_reg_write>
 80036bc:	b2aa      	uxth	r2, r5
 80036be:	f8db 0000 	ldr.w	r0, [fp]
 80036c2:	2156      	movs	r1, #86	; 0x56
 80036c4:	f7fd fd04 	bl	80010d0 <acc_sensor_reg_write>
 80036c8:	f8db 0000 	ldr.w	r0, [fp]
 80036cc:	2203      	movs	r2, #3
 80036ce:	2154      	movs	r1, #84	; 0x54
 80036d0:	f7fd fcfe 	bl	80010d0 <acc_sensor_reg_write>
 80036d4:	4b9b      	ldr	r3, [pc, #620]	; (8003944 <test_communication+0x318>)
 80036d6:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 80036da:	ab0f      	add	r3, sp, #60	; 0x3c
 80036dc:	c303      	stmia	r3!, {r0, r1}
 80036de:	2500      	movs	r5, #0
 80036e0:	801a      	strh	r2, [r3, #0]
 80036e2:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
 80036e6:	240a      	movs	r4, #10
 80036e8:	af0f      	add	r7, sp, #60	; 0x3c
 80036ea:	2601      	movs	r6, #1
 80036ec:	9402      	str	r4, [sp, #8]
 80036ee:	f837 8b02 	ldrh.w	r8, [r7], #2
 80036f2:	f8db 0000 	ldr.w	r0, [fp]
 80036f6:	4642      	mov	r2, r8
 80036f8:	212c      	movs	r1, #44	; 0x2c
 80036fa:	f7fd fce9 	bl	80010d0 <acc_sensor_reg_write>
 80036fe:	f8db 0000 	ldr.w	r0, [fp]
 8003702:	aa0d      	add	r2, sp, #52	; 0x34
 8003704:	212c      	movs	r1, #44	; 0x2c
 8003706:	f7fd fcf3 	bl	80010f0 <acc_sensor_reg_read>
 800370a:	f8bd c034 	ldrh.w	ip, [sp, #52]	; 0x34
 800370e:	45e0      	cmp	r8, ip
 8003710:	d00e      	beq.n	8003730 <test_communication+0x104>
 8003712:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 8003716:	4a8c      	ldr	r2, [pc, #560]	; (8003948 <test_communication+0x31c>)
 8003718:	2b03      	cmp	r3, #3
 800371a:	4649      	mov	r1, r9
 800371c:	4633      	mov	r3, r6
 800371e:	f04f 0004 	mov.w	r0, #4
 8003722:	d904      	bls.n	800372e <test_communication+0x102>
 8003724:	e9cd 8c00 	strd	r8, ip, [sp]
 8003728:	f8da 4040 	ldr.w	r4, [sl, #64]	; 0x40
 800372c:	47a0      	blx	r4
 800372e:	3501      	adds	r5, #1
 8003730:	3601      	adds	r6, #1
 8003732:	2e06      	cmp	r6, #6
 8003734:	d1db      	bne.n	80036ee <test_communication+0xc2>
 8003736:	9c02      	ldr	r4, [sp, #8]
 8003738:	3c01      	subs	r4, #1
 800373a:	d1d5      	bne.n	80036e8 <test_communication+0xbc>
 800373c:	2d00      	cmp	r5, #0
 800373e:	f000 816b 	beq.w	8003a18 <test_communication+0x3ec>
 8003742:	2232      	movs	r2, #50	; 0x32
 8003744:	462b      	mov	r3, r5
 8003746:	497c      	ldr	r1, [pc, #496]	; (8003938 <test_communication+0x30c>)
 8003748:	9200      	str	r2, [sp, #0]
 800374a:	4620      	mov	r0, r4
 800374c:	4a7f      	ldr	r2, [pc, #508]	; (800394c <test_communication+0x320>)
 800374e:	f8da 5040 	ldr.w	r5, [sl, #64]	; 0x40
 8003752:	47a8      	blx	r5
 8003754:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8003758:	4977      	ldr	r1, [pc, #476]	; (8003938 <test_communication+0x30c>)
 800375a:	4a7d      	ldr	r2, [pc, #500]	; (8003950 <test_communication+0x324>)
 800375c:	4620      	mov	r0, r4
 800375e:	4798      	blx	r3
 8003760:	2304      	movs	r3, #4
 8003762:	9305      	str	r3, [sp, #20]
 8003764:	4621      	mov	r1, r4
 8003766:	4d7b      	ldr	r5, [pc, #492]	; (8003954 <test_communication+0x328>)
 8003768:	487b      	ldr	r0, [pc, #492]	; (8003958 <test_communication+0x32c>)
 800376a:	f7fd f945 	bl	80009f8 <acc_diagnostic_log_scalar>
 800376e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003770:	ac0f      	add	r4, sp, #60	; 0x3c
 8003772:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003774:	f8db 2018 	ldr.w	r2, [fp, #24]
 8003778:	682b      	ldr	r3, [r5, #0]
 800377a:	6023      	str	r3, [r4, #0]
 800377c:	2300      	movs	r3, #0
 800377e:	0897      	lsrs	r7, r2, #2
 8003780:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
 8003784:	920a      	str	r2, [sp, #40]	; 0x28
 8003786:	9302      	str	r3, [sp, #8]
 8003788:	f022 0203 	bic.w	r2, r2, #3
 800378c:	230a      	movs	r3, #10
 800378e:	46d9      	mov	r9, fp
 8003790:	920b      	str	r2, [sp, #44]	; 0x2c
 8003792:	9306      	str	r3, [sp, #24]
 8003794:	46bb      	mov	fp, r7
 8003796:	ab0f      	add	r3, sp, #60	; 0x3c
 8003798:	9303      	str	r3, [sp, #12]
 800379a:	465f      	mov	r7, fp
 800379c:	2f00      	cmp	r7, #0
 800379e:	f000 80bc 	beq.w	800391a <test_communication+0x2ee>
 80037a2:	9b03      	ldr	r3, [sp, #12]
 80037a4:	f8d9 2014 	ldr.w	r2, [r9, #20]
 80037a8:	681b      	ldr	r3, [r3, #0]
 80037aa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80037ac:	9307      	str	r3, [sp, #28]
 80037ae:	1f13      	subs	r3, r2, #4
 80037b0:	1859      	adds	r1, r3, r1
 80037b2:	9807      	ldr	r0, [sp, #28]
 80037b4:	f843 0f04 	str.w	r0, [r3, #4]!
 80037b8:	4299      	cmp	r1, r3
 80037ba:	d1fa      	bne.n	80037b2 <test_communication+0x186>
 80037bc:	ab0d      	add	r3, sp, #52	; 0x34
 80037be:	9300      	str	r3, [sp, #0]
 80037c0:	f8d9 100c 	ldr.w	r1, [r9, #12]
 80037c4:	f8d9 0000 	ldr.w	r0, [r9]
 80037c8:	463b      	mov	r3, r7
 80037ca:	f7fd fbf9 	bl	8000fc0 <acc_sensor_a121_buffer_write.constprop.0>
 80037ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80037d0:	f8d9 0014 	ldr.w	r0, [r9, #20]
 80037d4:	f023 0203 	bic.w	r2, r3, #3
 80037d8:	2100      	movs	r1, #0
 80037da:	f003 f9be 	bl	8006b5a <memset>
 80037de:	f8ba 3030 	ldrh.w	r3, [sl, #48]	; 0x30
 80037e2:	f8d9 2000 	ldr.w	r2, [r9]
 80037e6:	f8d9 600c 	ldr.w	r6, [r9, #12]
 80037ea:	9704      	str	r7, [sp, #16]
 80037ec:	3b08      	subs	r3, #8
 80037ee:	ee08 2a10 	vmov	s16, r2
 80037f2:	089b      	lsrs	r3, r3, #2
 80037f4:	f8d9 2014 	ldr.w	r2, [r9, #20]
 80037f8:	9209      	str	r2, [sp, #36]	; 0x24
 80037fa:	9308      	str	r3, [sp, #32]
 80037fc:	f04f 0800 	mov.w	r8, #0
 8003800:	e00f      	b.n	8003822 <test_communication+0x1f6>
 8003802:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8003806:	4798      	blx	r3
 8003808:	2500      	movs	r5, #0
 800380a:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800380e:	4415      	add	r5, r2
 8003810:	9a04      	ldr	r2, [sp, #16]
 8003812:	44a0      	add	r8, r4
 8003814:	3301      	adds	r3, #1
 8003816:	1b12      	subs	r2, r2, r4
 8003818:	4547      	cmp	r7, r8
 800381a:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
 800381e:	9204      	str	r2, [sp, #16]
 8003820:	d92e      	bls.n	8003880 <test_communication+0x254>
 8003822:	9b08      	ldr	r3, [sp, #32]
 8003824:	9a04      	ldr	r2, [sp, #16]
 8003826:	494d      	ldr	r1, [pc, #308]	; (800395c <test_communication+0x330>)
 8003828:	4293      	cmp	r3, r2
 800382a:	bf28      	it	cs
 800382c:	4613      	movcs	r3, r2
 800382e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003832:	4a4b      	ldr	r2, [pc, #300]	; (8003960 <test_communication+0x334>)
 8003834:	461c      	mov	r4, r3
 8003836:	f04f 0000 	mov.w	r0, #0
 800383a:	d8e2      	bhi.n	8003802 <test_communication+0x1d6>
 800383c:	005b      	lsls	r3, r3, #1
 800383e:	3b01      	subs	r3, #1
 8003840:	2100      	movs	r1, #0
 8003842:	00a5      	lsls	r5, r4, #2
 8003844:	f106 0b08 	add.w	fp, r6, #8
 8003848:	f249 0200 	movw	r2, #36864	; 0x9000
 800384c:	8032      	strh	r2, [r6, #0]
 800384e:	80b3      	strh	r3, [r6, #4]
 8003850:	462a      	mov	r2, r5
 8003852:	80f1      	strh	r1, [r6, #6]
 8003854:	f8a6 8002 	strh.w	r8, [r6, #2]
 8003858:	4658      	mov	r0, fp
 800385a:	f003 f97e 	bl	8006b5a <memset>
 800385e:	1ca2      	adds	r2, r4, #2
 8003860:	ee18 0a10 	vmov	r0, s16
 8003864:	0052      	lsls	r2, r2, #1
 8003866:	2301      	movs	r3, #1
 8003868:	4631      	mov	r1, r6
 800386a:	f7fd fb59 	bl	8000f20 <acc_rss_integration_sensor_device_transfer>
 800386e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003870:	4622      	mov	r2, r4
 8003872:	4658      	mov	r0, fp
 8003874:	eb03 0188 	add.w	r1, r3, r8, lsl #2
 8003878:	f7fd f98c 	bl	8000b94 <acc_utils_transfer_buffer_to_uint32>
 800387c:	3508      	adds	r5, #8
 800387e:	e7c4      	b.n	800380a <test_communication+0x1de>
 8003880:	9e07      	ldr	r6, [sp, #28]
 8003882:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8003886:	2500      	movs	r5, #0
 8003888:	f8d9 3014 	ldr.w	r3, [r9, #20]
 800388c:	f853 4025 	ldr.w	r4, [r3, r5, lsl #2]
 8003890:	42a6      	cmp	r6, r4
 8003892:	d00f      	beq.n	80038b4 <test_communication+0x288>
 8003894:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 8003898:	4a32      	ldr	r2, [pc, #200]	; (8003964 <test_communication+0x338>)
 800389a:	4927      	ldr	r1, [pc, #156]	; (8003938 <test_communication+0x30c>)
 800389c:	2b03      	cmp	r3, #3
 800389e:	f04f 0004 	mov.w	r0, #4
 80038a2:	462b      	mov	r3, r5
 80038a4:	d904      	bls.n	80038b0 <test_communication+0x284>
 80038a6:	e9cd 6400 	strd	r6, r4, [sp]
 80038aa:	f8da 4040 	ldr.w	r4, [sl, #64]	; 0x40
 80038ae:	47a0      	blx	r4
 80038b0:	f108 0801 	add.w	r8, r8, #1
 80038b4:	3501      	adds	r5, #1
 80038b6:	42af      	cmp	r7, r5
 80038b8:	d1e6      	bne.n	8003888 <test_communication+0x25c>
 80038ba:	f8cd 8008 	str.w	r8, [sp, #8]
 80038be:	9b03      	ldr	r3, [sp, #12]
 80038c0:	aa14      	add	r2, sp, #80	; 0x50
 80038c2:	3304      	adds	r3, #4
 80038c4:	4293      	cmp	r3, r2
 80038c6:	9303      	str	r3, [sp, #12]
 80038c8:	f47f af68 	bne.w	800379c <test_communication+0x170>
 80038cc:	9b06      	ldr	r3, [sp, #24]
 80038ce:	3b01      	subs	r3, #1
 80038d0:	46bb      	mov	fp, r7
 80038d2:	9306      	str	r3, [sp, #24]
 80038d4:	f47f af5f 	bne.w	8003796 <test_communication+0x16a>
 80038d8:	9b02      	ldr	r3, [sp, #8]
 80038da:	46cb      	mov	fp, r9
 80038dc:	2b00      	cmp	r3, #0
 80038de:	d04b      	beq.n	8003978 <test_communication+0x34c>
 80038e0:	9d06      	ldr	r5, [sp, #24]
 80038e2:	4915      	ldr	r1, [pc, #84]	; (8003938 <test_communication+0x30c>)
 80038e4:	f8da 4040 	ldr.w	r4, [sl, #64]	; 0x40
 80038e8:	2232      	movs	r2, #50	; 0x32
 80038ea:	fb02 f207 	mul.w	r2, r2, r7
 80038ee:	9200      	str	r2, [sp, #0]
 80038f0:	4628      	mov	r0, r5
 80038f2:	4a1d      	ldr	r2, [pc, #116]	; (8003968 <test_communication+0x33c>)
 80038f4:	47a0      	blx	r4
 80038f6:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 80038fa:	4a1c      	ldr	r2, [pc, #112]	; (800396c <test_communication+0x340>)
 80038fc:	490e      	ldr	r1, [pc, #56]	; (8003938 <test_communication+0x30c>)
 80038fe:	4628      	mov	r0, r5
 8003900:	4798      	blx	r3
 8003902:	481b      	ldr	r0, [pc, #108]	; (8003970 <test_communication+0x344>)
 8003904:	4629      	mov	r1, r5
 8003906:	f7fd f877 	bl	80009f8 <acc_diagnostic_log_scalar>
 800390a:	2304      	movs	r3, #4
 800390c:	9305      	str	r3, [sp, #20]
 800390e:	9805      	ldr	r0, [sp, #20]
 8003910:	b015      	add	sp, #84	; 0x54
 8003912:	ecbd 8b02 	vpop	{d8}
 8003916:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800391a:	ab0d      	add	r3, sp, #52	; 0x34
 800391c:	9300      	str	r3, [sp, #0]
 800391e:	f8d9 2014 	ldr.w	r2, [r9, #20]
 8003922:	f8d9 100c 	ldr.w	r1, [r9, #12]
 8003926:	f8d9 0000 	ldr.w	r0, [r9]
 800392a:	463b      	mov	r3, r7
 800392c:	f7fd fb48 	bl	8000fc0 <acc_sensor_a121_buffer_write.constprop.0>
 8003930:	e7c5      	b.n	80038be <test_communication+0x292>
 8003932:	bf00      	nop
 8003934:	0800ab3c 	.word	0x0800ab3c
 8003938:	0800a574 	.word	0x0800a574
 800393c:	0800ab58 	.word	0x0800ab58
 8003940:	10624dd3 	.word	0x10624dd3
 8003944:	080086d0 	.word	0x080086d0
 8003948:	0800ab6c 	.word	0x0800ab6c
 800394c:	0800abd8 	.word	0x0800abd8
 8003950:	0800ac0c 	.word	0x0800ac0c
 8003954:	080086dc 	.word	0x080086dc
 8003958:	0800ac2c 	.word	0x0800ac2c
 800395c:	0800a4d8 	.word	0x0800a4d8
 8003960:	0800ac50 	.word	0x0800ac50
 8003964:	0800ac68 	.word	0x0800ac68
 8003968:	0800acbc 	.word	0x0800acbc
 800396c:	0800acec 	.word	0x0800acec
 8003970:	0800ad0c 	.word	0x0800ad0c
 8003974:	200000ac 	.word	0x200000ac
 8003978:	482f      	ldr	r0, [pc, #188]	; (8003a38 <test_communication+0x40c>)
 800397a:	2101      	movs	r1, #1
 800397c:	f7fd f83c 	bl	80009f8 <acc_diagnostic_log_scalar>
 8003980:	9b05      	ldr	r3, [sp, #20]
 8003982:	2b04      	cmp	r3, #4
 8003984:	d0c3      	beq.n	800390e <test_communication+0x2e2>
 8003986:	9c02      	ldr	r4, [sp, #8]
 8003988:	f8db 0000 	ldr.w	r0, [fp]
 800398c:	f8ad 403c 	strh.w	r4, [sp, #60]	; 0x3c
 8003990:	aa0f      	add	r2, sp, #60	; 0x3c
 8003992:	f44f 718a 	mov.w	r1, #276	; 0x114
 8003996:	f7fd fbab 	bl	80010f0 <acc_sensor_reg_read>
 800399a:	f8db 5018 	ldr.w	r5, [fp, #24]
 800399e:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 80039a2:	9410      	str	r4, [sp, #64]	; 0x40
 80039a4:	940f      	str	r4, [sp, #60]	; 0x3c
 80039a6:	08ad      	lsrs	r5, r5, #2
 80039a8:	2464      	movs	r4, #100	; 0x64
 80039aa:	ab0f      	add	r3, sp, #60	; 0x3c
 80039ac:	9300      	str	r3, [sp, #0]
 80039ae:	f8db 2014 	ldr.w	r2, [fp, #20]
 80039b2:	f8db 100c 	ldr.w	r1, [fp, #12]
 80039b6:	f8db 0000 	ldr.w	r0, [fp]
 80039ba:	462b      	mov	r3, r5
 80039bc:	f7fd fb00 	bl	8000fc0 <acc_sensor_a121_buffer_write.constprop.0>
 80039c0:	3c01      	subs	r4, #1
 80039c2:	d1f2      	bne.n	80039aa <test_communication+0x37e>
 80039c4:	f8db 0000 	ldr.w	r0, [fp]
 80039c8:	f8ad 4034 	strh.w	r4, [sp, #52]	; 0x34
 80039cc:	aa0d      	add	r2, sp, #52	; 0x34
 80039ce:	f44f 718a 	mov.w	r1, #276	; 0x114
 80039d2:	f7fd fb8d 	bl	80010f0 <acc_sensor_reg_read>
 80039d6:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80039da:	1b9b      	subs	r3, r3, r6
 80039dc:	b29b      	uxth	r3, r3
 80039de:	b1fb      	cbz	r3, 8003a20 <test_communication+0x3f4>
 80039e0:	f89a 2048 	ldrb.w	r2, [sl, #72]	; 0x48
 80039e4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80039e6:	2a01      	cmp	r2, #1
 80039e8:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80039ec:	fbb4 f4f3 	udiv	r4, r4, r3
 80039f0:	d906      	bls.n	8003a00 <test_communication+0x3d4>
 80039f2:	f8da 5040 	ldr.w	r5, [sl, #64]	; 0x40
 80039f6:	4a11      	ldr	r2, [pc, #68]	; (8003a3c <test_communication+0x410>)
 80039f8:	4911      	ldr	r1, [pc, #68]	; (8003a40 <test_communication+0x414>)
 80039fa:	4623      	mov	r3, r4
 80039fc:	2002      	movs	r0, #2
 80039fe:	47a8      	blx	r5
 8003a00:	4810      	ldr	r0, [pc, #64]	; (8003a44 <test_communication+0x418>)
 8003a02:	4621      	mov	r1, r4
 8003a04:	f7fc fff8 	bl	80009f8 <acc_diagnostic_log_scalar>
 8003a08:	2303      	movs	r3, #3
 8003a0a:	9305      	str	r3, [sp, #20]
 8003a0c:	9805      	ldr	r0, [sp, #20]
 8003a0e:	b015      	add	sp, #84	; 0x54
 8003a10:	ecbd 8b02 	vpop	{d8}
 8003a14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003a18:	2303      	movs	r3, #3
 8003a1a:	2101      	movs	r1, #1
 8003a1c:	9305      	str	r3, [sp, #20]
 8003a1e:	e6a2      	b.n	8003766 <test_communication+0x13a>
 8003a20:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 8003a24:	2b00      	cmp	r3, #0
 8003a26:	d0ef      	beq.n	8003a08 <test_communication+0x3dc>
 8003a28:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8003a2c:	4a06      	ldr	r2, [pc, #24]	; (8003a48 <test_communication+0x41c>)
 8003a2e:	4904      	ldr	r1, [pc, #16]	; (8003a40 <test_communication+0x414>)
 8003a30:	2001      	movs	r0, #1
 8003a32:	4798      	blx	r3
 8003a34:	e7e8      	b.n	8003a08 <test_communication+0x3dc>
 8003a36:	bf00      	nop
 8003a38:	0800ad0c 	.word	0x0800ad0c
 8003a3c:	0800ad30 	.word	0x0800ad30
 8003a40:	0800a574 	.word	0x0800a574
 8003a44:	0800ad60 	.word	0x0800ad60
 8003a48:	0800ad78 	.word	0x0800ad78

08003a4c <acc_calibration_a121_calibrate>:
 8003a4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003a50:	ed2d 8b02 	vpush	{d8}
 8003a54:	f2ad 7d14 	subw	sp, sp, #1812	; 0x714
 8003a58:	e9cd 1203 	strd	r1, r2, [sp, #12]
 8003a5c:	9302      	str	r3, [sp, #8]
 8003a5e:	781b      	ldrb	r3, [r3, #0]
 8003a60:	4604      	mov	r4, r0
 8003a62:	2b0a      	cmp	r3, #10
 8003a64:	d84c      	bhi.n	8003b00 <acc_calibration_a121_calibrate+0xb4>
 8003a66:	e8df f013 	tbh	[pc, r3, lsl #1]
 8003a6a:	000b      	.short	0x000b
 8003a6c:	00d7005c 	.word	0x00d7005c
 8003a70:	02000151 	.word	0x02000151
 8003a74:	040902e3 	.word	0x040902e3
 8003a78:	062205af 	.word	0x062205af
 8003a7c:	000b06aa 	.word	0x000b06aa
 8003a80:	4e90      	ldr	r6, [pc, #576]	; (8003cc4 <acc_calibration_a121_calibrate+0x278>)
 8003a82:	f8dd 0740 	ldr.w	r0, [sp, #1856]	; 0x740
 8003a86:	2288      	movs	r2, #136	; 0x88
 8003a88:	2100      	movs	r1, #0
 8003a8a:	f003 f866 	bl	8006b5a <memset>
 8003a8e:	edd6 7a13 	vldr	s15, [r6, #76]	; 0x4c
 8003a92:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003a96:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003a9a:	f103 017c 	add.w	r1, r3, #124	; 0x7c
 8003a9e:	a844      	add	r0, sp, #272	; 0x110
 8003aa0:	edcd 7a44 	vstr	s15, [sp, #272]	; 0x110
 8003aa4:	f7fd f896 	bl	8000bd4 <acc_cpd_pll_divisors_calculate>
 8003aa8:	4605      	mov	r5, r0
 8003aaa:	4887      	ldr	r0, [pc, #540]	; (8003cc8 <acc_calibration_a121_calibrate+0x27c>)
 8003aac:	f7fc ffac 	bl	8000a08 <acc_diagnostic_log_set_scope>
 8003ab0:	4886      	ldr	r0, [pc, #536]	; (8003ccc <acc_calibration_a121_calibrate+0x280>)
 8003ab2:	4621      	mov	r1, r4
 8003ab4:	f7fc ffa0 	bl	80009f8 <acc_diagnostic_log_scalar>
 8003ab8:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003abc:	4884      	ldr	r0, [pc, #528]	; (8003cd0 <acc_calibration_a121_calibrate+0x284>)
 8003abe:	f8b3 107e 	ldrh.w	r1, [r3, #126]	; 0x7e
 8003ac2:	f7fc ff99 	bl	80009f8 <acc_diagnostic_log_scalar>
 8003ac6:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003aca:	4882      	ldr	r0, [pc, #520]	; (8003cd4 <acc_calibration_a121_calibrate+0x288>)
 8003acc:	f8b3 1080 	ldrh.w	r1, [r3, #128]	; 0x80
 8003ad0:	f7fc ff92 	bl	80009f8 <acc_diagnostic_log_scalar>
 8003ad4:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003ad8:	487f      	ldr	r0, [pc, #508]	; (8003cd8 <acc_calibration_a121_calibrate+0x28c>)
 8003ada:	f8b3 1082 	ldrh.w	r1, [r3, #130]	; 0x82
 8003ade:	f7fc ff8b 	bl	80009f8 <acc_diagnostic_log_scalar>
 8003ae2:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003ae6:	487d      	ldr	r0, [pc, #500]	; (8003cdc <acc_calibration_a121_calibrate+0x290>)
 8003ae8:	f8b3 107c 	ldrh.w	r1, [r3, #124]	; 0x7c
 8003aec:	f7fc ff84 	bl	80009f8 <acc_diagnostic_log_scalar>
 8003af0:	487b      	ldr	r0, [pc, #492]	; (8003ce0 <acc_calibration_a121_calibrate+0x294>)
 8003af2:	f7fc ff89 	bl	8000a08 <acc_diagnostic_log_set_scope>
 8003af6:	2d00      	cmp	r5, #0
 8003af8:	f041 8020 	bne.w	8004b3c <acc_calibration_a121_calibrate+0x10f0>
 8003afc:	9b02      	ldr	r3, [sp, #8]
 8003afe:	781b      	ldrb	r3, [r3, #0]
 8003b00:	4970      	ldr	r1, [pc, #448]	; (8003cc4 <acc_calibration_a121_calibrate+0x278>)
 8003b02:	4a78      	ldr	r2, [pc, #480]	; (8003ce4 <acc_calibration_a121_calibrate+0x298>)
 8003b04:	6c0c      	ldr	r4, [r1, #64]	; 0x40
 8003b06:	4978      	ldr	r1, [pc, #480]	; (8003ce8 <acc_calibration_a121_calibrate+0x29c>)
 8003b08:	2000      	movs	r0, #0
 8003b0a:	47a0      	blx	r4
 8003b0c:	2300      	movs	r3, #0
 8003b0e:	461c      	mov	r4, r3
 8003b10:	9a02      	ldr	r2, [sp, #8]
 8003b12:	4620      	mov	r0, r4
 8003b14:	7013      	strb	r3, [r2, #0]
 8003b16:	f20d 7d14 	addw	sp, sp, #1812	; 0x714
 8003b1a:	ecbd 8b02 	vpop	{d8}
 8003b1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b22:	f7ff f977 	bl	8002e14 <acc_a121_cal_session_ack_program>
 8003b26:	2800      	cmp	r0, #0
 8003b28:	d0e8      	beq.n	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003b2a:	ab44      	add	r3, sp, #272	; 0x110
 8003b2c:	461a      	mov	r2, r3
 8003b2e:	2132      	movs	r1, #50	; 0x32
 8003b30:	4620      	mov	r0, r4
 8003b32:	4698      	mov	r8, r3
 8003b34:	9304      	str	r3, [sp, #16]
 8003b36:	f7fd fadb 	bl	80010f0 <acc_sensor_reg_read>
 8003b3a:	2212      	movs	r2, #18
 8003b3c:	9903      	ldr	r1, [sp, #12]
 8003b3e:	4620      	mov	r0, r4
 8003b40:	f7ff fb60 	bl	8003204 <internal_buffer_processed_read.part.0.constprop.0>
 8003b44:	8847      	ldrh	r7, [r0, #2]
 8003b46:	4605      	mov	r5, r0
 8003b48:	4621      	mov	r1, r4
 8003b4a:	4860      	ldr	r0, [pc, #384]	; (8003ccc <acc_calibration_a121_calibrate+0x280>)
 8003b4c:	882e      	ldrh	r6, [r5, #0]
 8003b4e:	f7fc ff53 	bl	80009f8 <acc_diagnostic_log_scalar>
 8003b52:	4639      	mov	r1, r7
 8003b54:	4865      	ldr	r0, [pc, #404]	; (8003cec <acc_calibration_a121_calibrate+0x2a0>)
 8003b56:	f7fc ff4f 	bl	80009f8 <acc_diagnostic_log_scalar>
 8003b5a:	3504      	adds	r5, #4
 8003b5c:	4864      	ldr	r0, [pc, #400]	; (8003cf0 <acc_calibration_a121_calibrate+0x2a4>)
 8003b5e:	f7fc fef3 	bl	8000948 <acc_diagnostic_log_array.constprop.0>
 8003b62:	4628      	mov	r0, r5
 8003b64:	2110      	movs	r1, #16
 8003b66:	f7fc ff3f 	bl	80009e8 <acc_diagnostic_log_data_u16>
 8003b6a:	2300      	movs	r3, #0
 8003b6c:	f8b8 0000 	ldrh.w	r0, [r8]
 8003b70:	f64f 7cff 	movw	ip, #65535	; 0xffff
 8003b74:	4698      	mov	r8, r3
 8003b76:	fa40 f203 	asr.w	r2, r0, r3
 8003b7a:	07d2      	lsls	r2, r2, #31
 8003b7c:	b299      	uxth	r1, r3
 8003b7e:	d50a      	bpl.n	8003b96 <acc_calibration_a121_calibrate+0x14a>
 8003b80:	f835 2013 	ldrh.w	r2, [r5, r3, lsl #1]
 8003b84:	1bd2      	subs	r2, r2, r7
 8003b86:	2a00      	cmp	r2, #0
 8003b88:	bfb8      	it	lt
 8003b8a:	4252      	neglt	r2, r2
 8003b8c:	b292      	uxth	r2, r2
 8003b8e:	4562      	cmp	r2, ip
 8003b90:	bf3c      	itt	cc
 8003b92:	4694      	movcc	ip, r2
 8003b94:	4688      	movcc	r8, r1
 8003b96:	3301      	adds	r3, #1
 8003b98:	2b10      	cmp	r3, #16
 8003b9a:	d1ec      	bne.n	8003b76 <acc_calibration_a121_calibrate+0x12a>
 8003b9c:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
 8003ba0:	2b0d      	cmp	r3, #13
 8003ba2:	d8ab      	bhi.n	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003ba4:	f108 4300 	add.w	r3, r8, #2147483648	; 0x80000000
 8003ba8:	3b01      	subs	r3, #1
 8003baa:	eb05 0743 	add.w	r7, r5, r3, lsl #1
 8003bae:	f835 3013 	ldrh.w	r3, [r5, r3, lsl #1]
 8003bb2:	887a      	ldrh	r2, [r7, #2]
 8003bb4:	f241 3187 	movw	r1, #4999	; 0x1387
 8003bb8:	1a9b      	subs	r3, r3, r2
 8003bba:	428b      	cmp	r3, r1
 8003bbc:	dd9e      	ble.n	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003bbe:	88bb      	ldrh	r3, [r7, #4]
 8003bc0:	1ad2      	subs	r2, r2, r3
 8003bc2:	428a      	cmp	r2, r1
 8003bc4:	dd9a      	ble.n	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003bc6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003bca:	4298      	cmp	r0, r3
 8003bcc:	d096      	beq.n	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003bce:	4849      	ldr	r0, [pc, #292]	; (8003cf4 <acc_calibration_a121_calibrate+0x2a8>)
 8003bd0:	4631      	mov	r1, r6
 8003bd2:	f7fc ff11 	bl	80009f8 <acc_diagnostic_log_scalar>
 8003bd6:	9b04      	ldr	r3, [sp, #16]
 8003bd8:	4847      	ldr	r0, [pc, #284]	; (8003cf8 <acc_calibration_a121_calibrate+0x2ac>)
 8003bda:	8819      	ldrh	r1, [r3, #0]
 8003bdc:	f7fc ff0c 	bl	80009f8 <acc_diagnostic_log_scalar>
 8003be0:	4846      	ldr	r0, [pc, #280]	; (8003cfc <acc_calibration_a121_calibrate+0x2b0>)
 8003be2:	4641      	mov	r1, r8
 8003be4:	f7fc ff08 	bl	80009f8 <acc_diagnostic_log_scalar>
 8003be8:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003bec:	4a44      	ldr	r2, [pc, #272]	; (8003d00 <acc_calibration_a121_calibrate+0x2b4>)
 8003bee:	801e      	strh	r6, [r3, #0]
 8003bf0:	f8a3 8002 	strh.w	r8, [r3, #2]
 8003bf4:	4943      	ldr	r1, [pc, #268]	; (8003d04 <acc_calibration_a121_calibrate+0x2b8>)
 8003bf6:	f8cd 8000 	str.w	r8, [sp]
 8003bfa:	2325      	movs	r3, #37	; 0x25
 8003bfc:	4620      	mov	r0, r4
 8003bfe:	f7ff fc8d 	bl	800351c <acc_confprogram_live_patch.constprop.0>
 8003c02:	4620      	mov	r0, r4
 8003c04:	f240 2132 	movw	r1, #562	; 0x232
 8003c08:	f7fd fa88 	bl	800111c <acc_sensor_protocol_a121_run_program>
 8003c0c:	4604      	mov	r4, r0
 8003c0e:	2302      	movs	r3, #2
 8003c10:	2c00      	cmp	r4, #0
 8003c12:	f47f af7d 	bne.w	8003b10 <acc_calibration_a121_calibrate+0xc4>
 8003c16:	e771      	b.n	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003c18:	f7ff f8fc 	bl	8002e14 <acc_a121_cal_session_ack_program>
 8003c1c:	4682      	mov	sl, r0
 8003c1e:	2800      	cmp	r0, #0
 8003c20:	f43f af6c 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003c24:	9903      	ldr	r1, [sp, #12]
 8003c26:	2241      	movs	r2, #65	; 0x41
 8003c28:	4620      	mov	r0, r4
 8003c2a:	f7ff faeb 	bl	8003204 <internal_buffer_processed_read.part.0.constprop.0>
 8003c2e:	4605      	mov	r5, r0
 8003c30:	4835      	ldr	r0, [pc, #212]	; (8003d08 <acc_calibration_a121_calibrate+0x2bc>)
 8003c32:	8c2b      	ldrh	r3, [r5, #32]
 8003c34:	9306      	str	r3, [sp, #24]
 8003c36:	f7fc fe87 	bl	8000948 <acc_diagnostic_log_array.constprop.0>
 8003c3a:	4628      	mov	r0, r5
 8003c3c:	2110      	movs	r1, #16
 8003c3e:	f7fc fecb 	bl	80009d8 <acc_diagnostic_log_data_i16>
 8003c42:	2100      	movs	r1, #0
 8003c44:	f105 0322 	add.w	r3, r5, #34	; 0x22
 8003c48:	ee07 4a90 	vmov	s15, r4
 8003c4c:	9307      	str	r3, [sp, #28]
 8003c4e:	f1a5 0b02 	sub.w	fp, r5, #2
 8003c52:	4608      	mov	r0, r1
 8003c54:	4688      	mov	r8, r1
 8003c56:	f64f 7cff 	movw	ip, #65535	; 0xffff
 8003c5a:	f241 7970 	movw	r9, #6000	; 0x1770
 8003c5e:	e01b      	b.n	8003c98 <acc_calibration_a121_calibrate+0x24c>
 8003c60:	f935 7011 	ldrsh.w	r7, [r5, r1, lsl #1]
 8003c64:	f93b 4011 	ldrsh.w	r4, [fp, r1, lsl #1]
 8003c68:	eb07 0209 	add.w	r2, r7, r9
 8003c6c:	1b3f      	subs	r7, r7, r4
 8003c6e:	429f      	cmp	r7, r3
 8003c70:	f6ff af44 	blt.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003c74:	4577      	cmp	r7, lr
 8003c76:	f73f af41 	bgt.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003c7a:	ea82 73e2 	eor.w	r3, r2, r2, asr #31
 8003c7e:	eba3 73e2 	sub.w	r3, r3, r2, asr #31
 8003c82:	b29b      	uxth	r3, r3
 8003c84:	4563      	cmp	r3, ip
 8003c86:	d203      	bcs.n	8003c90 <acc_calibration_a121_calibrate+0x244>
 8003c88:	00b0      	lsls	r0, r6, #2
 8003c8a:	469c      	mov	ip, r3
 8003c8c:	b280      	uxth	r0, r0
 8003c8e:	46d0      	mov	r8, sl
 8003c90:	2e0f      	cmp	r6, #15
 8003c92:	f000 87d4 	beq.w	8004c3e <acc_calibration_a121_calibrate+0x11f2>
 8003c96:	3101      	adds	r1, #1
 8003c98:	1e4b      	subs	r3, r1, #1
 8003c9a:	fb03 f303 	mul.w	r3, r3, r3
 8003c9e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8003ca2:	005a      	lsls	r2, r3, #1
 8003ca4:	f502 7e16 	add.w	lr, r2, #600	; 0x258
 8003ca8:	3bc8      	subs	r3, #200	; 0xc8
 8003caa:	b28e      	uxth	r6, r1
 8003cac:	2900      	cmp	r1, #0
 8003cae:	d1d7      	bne.n	8003c60 <acc_calibration_a121_calibrate+0x214>
 8003cb0:	f9b5 3000 	ldrsh.w	r3, [r5]
 8003cb4:	444b      	add	r3, r9
 8003cb6:	2b00      	cmp	r3, #0
 8003cb8:	bfb8      	it	lt
 8003cba:	425b      	neglt	r3, r3
 8003cbc:	b29b      	uxth	r3, r3
 8003cbe:	4563      	cmp	r3, ip
 8003cc0:	d3e2      	bcc.n	8003c88 <acc_calibration_a121_calibrate+0x23c>
 8003cc2:	e7e8      	b.n	8003c96 <acc_calibration_a121_calibrate+0x24a>
 8003cc4:	200000ac 	.word	0x200000ac
 8003cc8:	0800a37c 	.word	0x0800a37c
 8003ccc:	0800add0 	.word	0x0800add0
 8003cd0:	0800addc 	.word	0x0800addc
 8003cd4:	0800adec 	.word	0x0800adec
 8003cd8:	0800adf8 	.word	0x0800adf8
 8003cdc:	0800ae04 	.word	0x0800ae04
 8003ce0:	0800ae14 	.word	0x0800ae14
 8003ce4:	0800b18c 	.word	0x0800b18c
 8003ce8:	0800b1b0 	.word	0x0800b1b0
 8003cec:	0800ae24 	.word	0x0800ae24
 8003cf0:	0800ae30 	.word	0x0800ae30
 8003cf4:	0800b1c4 	.word	0x0800b1c4
 8003cf8:	0800b1d0 	.word	0x0800b1d0
 8003cfc:	0800b1d8 	.word	0x0800b1d8
 8003d00:	080086f0 	.word	0x080086f0
 8003d04:	08008b6c 	.word	0x08008b6c
 8003d08:	0800ae4c 	.word	0x0800ae4c
 8003d0c:	f7ff f882 	bl	8002e14 <acc_a121_cal_session_ack_program>
 8003d10:	2800      	cmp	r0, #0
 8003d12:	f43f aef3 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003d16:	2220      	movs	r2, #32
 8003d18:	9903      	ldr	r1, [sp, #12]
 8003d1a:	4620      	mov	r0, r4
 8003d1c:	f7ff fa72 	bl	8003204 <internal_buffer_processed_read.part.0.constprop.0>
 8003d20:	4621      	mov	r1, r4
 8003d22:	4605      	mov	r5, r0
 8003d24:	48b7      	ldr	r0, [pc, #732]	; (8004004 <acc_calibration_a121_calibrate+0x5b8>)
 8003d26:	f7fc fe67 	bl	80009f8 <acc_diagnostic_log_scalar>
 8003d2a:	48b7      	ldr	r0, [pc, #732]	; (8004008 <acc_calibration_a121_calibrate+0x5bc>)
 8003d2c:	f7fc fe0c 	bl	8000948 <acc_diagnostic_log_array.constprop.0>
 8003d30:	4628      	mov	r0, r5
 8003d32:	2120      	movs	r1, #32
 8003d34:	f7fc fe50 	bl	80009d8 <acc_diagnostic_log_data_i16>
 8003d38:	f9b5 2000 	ldrsh.w	r2, [r5]
 8003d3c:	4628      	mov	r0, r5
 8003d3e:	4616      	mov	r6, r2
 8003d40:	2101      	movs	r1, #1
 8003d42:	2700      	movs	r7, #0
 8003d44:	4613      	mov	r3, r2
 8003d46:	f930 2f02 	ldrsh.w	r2, [r0, #2]!
 8003d4a:	f5c3 7316 	rsb	r3, r3, #600	; 0x258
 8003d4e:	4413      	add	r3, r2
 8003d50:	b29b      	uxth	r3, r3
 8003d52:	f5b3 6f96 	cmp.w	r3, #1200	; 0x4b0
 8003d56:	f63f aed1 	bhi.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003d5a:	42b2      	cmp	r2, r6
 8003d5c:	bfa8      	it	ge
 8003d5e:	460f      	movge	r7, r1
 8003d60:	f101 0101 	add.w	r1, r1, #1
 8003d64:	bfa8      	it	ge
 8003d66:	4616      	movge	r6, r2
 8003d68:	2920      	cmp	r1, #32
 8003d6a:	d1eb      	bne.n	8003d44 <acc_calibration_a121_calibrate+0x2f8>
 8003d6c:	2f07      	cmp	r7, #7
 8003d6e:	f201 8017 	bhi.w	8004da0 <acc_calibration_a121_calibrate+0x1354>
 8003d72:	2300      	movs	r3, #0
 8003d74:	f107 0208 	add.w	r2, r7, #8
 8003d78:	1ad2      	subs	r2, r2, r3
 8003d7a:	2a00      	cmp	r2, #0
 8003d7c:	f001 802a 	beq.w	8004dd4 <acc_calibration_a121_calibrate+0x1388>
 8003d80:	a944      	add	r1, sp, #272	; 0x110
 8003d82:	18d0      	adds	r0, r2, r3
 8003d84:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8003d88:	9104      	str	r1, [sp, #16]
 8003d8a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8003d8e:	f935 6b02 	ldrsh.w	r6, [r5], #2
 8003d92:	ee07 6a10 	vmov	s14, r6
 8003d96:	fb03 f603 	mul.w	r6, r3, r3
 8003d9a:	ee06 3a90 	vmov	s13, r3
 8003d9e:	ee07 6a90 	vmov	s15, r6
 8003da2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8003da6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003daa:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8003dae:	42a8      	cmp	r0, r5
 8003db0:	ed81 7a00 	vstr	s14, [r1]
 8003db4:	edc1 7a01 	vstr	s15, [r1, #4]
 8003db8:	edc1 6a02 	vstr	s13, [r1, #8]
 8003dbc:	f103 0301 	add.w	r3, r3, #1
 8003dc0:	f101 010c 	add.w	r1, r1, #12
 8003dc4:	d1e3      	bne.n	8003d8e <acc_calibration_a121_calibrate+0x342>
 8003dc6:	9804      	ldr	r0, [sp, #16]
 8003dc8:	a92c      	add	r1, sp, #176	; 0xb0
 8003dca:	f7fd fb13 	bl	80013f4 <least_sqr_fit>
 8003dce:	2800      	cmp	r0, #0
 8003dd0:	f43f ae94 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003dd4:	ed9d 6a2c 	vldr	s12, [sp, #176]	; 0xb0
 8003dd8:	eeb5 6a40 	vcmp.f32	s12, #0.0
 8003ddc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003de0:	f43f ae8c 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003de4:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 8003de8:	eef5 6a40 	vcmp.f32	s13, #0.0
 8003dec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003df0:	f43f ae84 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003df4:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8003df8:	eeb1 7a47 	vneg.f32	s14, s14
 8003dfc:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8003e00:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8003e04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003e08:	f6ff ae78 	blt.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003e0c:	eef1 6a66 	vneg.f32	s13, s13
 8003e10:	ee86 7a86 	vdiv.f32	s14, s13, s12
 8003e14:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8003e18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003e1c:	f57f ae6e 	bpl.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003e20:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8003e24:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003e28:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003e2c:	ee17 5a90 	vmov	r5, s15
 8003e30:	b2ab      	uxth	r3, r5
 8003e32:	2b3f      	cmp	r3, #63	; 0x3f
 8003e34:	f3c5 054e 	ubfx	r5, r5, #1, #15
 8003e38:	f63f ae60 	bhi.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003e3c:	f085 0510 	eor.w	r5, r5, #16
 8003e40:	4629      	mov	r1, r5
 8003e42:	4872      	ldr	r0, [pc, #456]	; (800400c <acc_calibration_a121_calibrate+0x5c0>)
 8003e44:	f7fc fdd8 	bl	80009f8 <acc_diagnostic_log_scalar>
 8003e48:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003e4c:	4870      	ldr	r0, [pc, #448]	; (8004010 <acc_calibration_a121_calibrate+0x5c4>)
 8003e4e:	80dd      	strh	r5, [r3, #6]
 8003e50:	f7fc fdda 	bl	8000a08 <acc_diagnostic_log_set_scope>
 8003e54:	4620      	mov	r0, r4
 8003e56:	f44f 7145 	mov.w	r1, #788	; 0x314
 8003e5a:	f7fd f95f 	bl	800111c <acc_sensor_protocol_a121_run_program>
 8003e5e:	4604      	mov	r4, r0
 8003e60:	2304      	movs	r3, #4
 8003e62:	2c00      	cmp	r4, #0
 8003e64:	f47f ae54 	bne.w	8003b10 <acc_calibration_a121_calibrate+0xc4>
 8003e68:	e648      	b.n	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003e6a:	f7fe ffd3 	bl	8002e14 <acc_a121_cal_session_ack_program>
 8003e6e:	2800      	cmp	r0, #0
 8003e70:	f43f ae44 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003e74:	2250      	movs	r2, #80	; 0x50
 8003e76:	9903      	ldr	r1, [sp, #12]
 8003e78:	4620      	mov	r0, r4
 8003e7a:	f7ff f9c3 	bl	8003204 <internal_buffer_processed_read.part.0.constprop.0>
 8003e7e:	4621      	mov	r1, r4
 8003e80:	4680      	mov	r8, r0
 8003e82:	4860      	ldr	r0, [pc, #384]	; (8004004 <acc_calibration_a121_calibrate+0x5b8>)
 8003e84:	f7fc fdb8 	bl	80009f8 <acc_diagnostic_log_scalar>
 8003e88:	4862      	ldr	r0, [pc, #392]	; (8004014 <acc_calibration_a121_calibrate+0x5c8>)
 8003e8a:	f7fc fd5d 	bl	8000948 <acc_diagnostic_log_array.constprop.0>
 8003e8e:	4640      	mov	r0, r8
 8003e90:	2150      	movs	r1, #80	; 0x50
 8003e92:	f7fc fda1 	bl	80009d8 <acc_diagnostic_log_data_i16>
 8003e96:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003e9a:	ee08 4a10 	vmov	s16, r4
 8003e9e:	330a      	adds	r3, #10
 8003ea0:	f04f 0b30 	mov.w	fp, #48	; 0x30
 8003ea4:	461f      	mov	r7, r3
 8003ea6:	f8df 9184 	ldr.w	r9, [pc, #388]	; 800402c <acc_calibration_a121_calibrate+0x5e0>
 8003eaa:	f9b8 2000 	ldrsh.w	r2, [r8]
 8003eae:	f04f 0e00 	mov.w	lr, #0
 8003eb2:	f647 7cff 	movw	ip, #32767	; 0x7fff
 8003eb6:	46f2      	mov	sl, lr
 8003eb8:	4666      	mov	r6, ip
 8003eba:	4645      	mov	r5, r8
 8003ebc:	f64f 71ec 	movw	r1, #65516	; 0xffec
 8003ec0:	f06f 031b 	mvn.w	r3, #27
 8003ec4:	4648      	mov	r0, r9
 8003ec6:	e015      	b.n	8003ef4 <acc_calibration_a121_calibrate+0x4a8>
 8003ec8:	4562      	cmp	r2, ip
 8003eca:	bfbc      	itt	lt
 8003ecc:	469e      	movlt	lr, r3
 8003ece:	4694      	movlt	ip, r2
 8003ed0:	2924      	cmp	r1, #36	; 0x24
 8003ed2:	d017      	beq.n	8003f04 <acc_calibration_a121_calibrate+0x4b8>
 8003ed4:	f935 2f02 	ldrsh.w	r2, [r5, #2]!
 8003ed8:	f835 3c02 	ldrh.w	r3, [r5, #-2]
 8003edc:	1ad3      	subs	r3, r2, r3
 8003ede:	b21b      	sxth	r3, r3
 8003ee0:	429e      	cmp	r6, r3
 8003ee2:	bfa8      	it	ge
 8003ee4:	461e      	movge	r6, r3
 8003ee6:	f101 0408 	add.w	r4, r1, #8
 8003eea:	4298      	cmp	r0, r3
 8003eec:	bfb8      	it	lt
 8003eee:	4618      	movlt	r0, r3
 8003ef0:	b20b      	sxth	r3, r1
 8003ef2:	b2a1      	uxth	r1, r4
 8003ef4:	2a00      	cmp	r2, #0
 8003ef6:	dae7      	bge.n	8003ec8 <acc_calibration_a121_calibrate+0x47c>
 8003ef8:	454a      	cmp	r2, r9
 8003efa:	dde9      	ble.n	8003ed0 <acc_calibration_a121_calibrate+0x484>
 8003efc:	2924      	cmp	r1, #36	; 0x24
 8003efe:	469a      	mov	sl, r3
 8003f00:	4691      	mov	r9, r2
 8003f02:	d1e7      	bne.n	8003ed4 <acc_calibration_a121_calibrate+0x488>
 8003f04:	f5a0 501c 	sub.w	r0, r0, #9984	; 0x2700
 8003f08:	3810      	subs	r0, #16
 8003f0a:	b280      	uxth	r0, r0
 8003f0c:	f644 6320 	movw	r3, #20000	; 0x4e20
 8003f10:	4298      	cmp	r0, r3
 8003f12:	f63f adf3 	bhi.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003f16:	2e00      	cmp	r6, #0
 8003f18:	f47f adf0 	bne.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003f1c:	f519 4f00 	cmn.w	r9, #32768	; 0x8000
 8003f20:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8003f24:	f000 86ea 	beq.w	8004cfc <acc_calibration_a121_calibrate+0x12b0>
 8003f28:	459c      	cmp	ip, r3
 8003f2a:	f000 8729 	beq.w	8004d80 <acc_calibration_a121_calibrate+0x1334>
 8003f2e:	ebae 0e0a 	sub.w	lr, lr, sl
 8003f32:	f1be 0f08 	cmp.w	lr, #8
 8003f36:	f47f ade1 	bne.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003f3a:	ea4f 0ec9 	mov.w	lr, r9, lsl #3
 8003f3e:	ebac 0c09 	sub.w	ip, ip, r9
 8003f42:	fb9e fcfc 	sdiv	ip, lr, ip
 8003f46:	ebaa 0e0c 	sub.w	lr, sl, ip
 8003f4a:	fa0f fe8e 	sxth.w	lr, lr
 8003f4e:	f1be 0f00 	cmp.w	lr, #0
 8003f52:	f2c0 85b1 	blt.w	8004ab8 <acc_calibration_a121_calibrate+0x106c>
 8003f56:	f1be 0f1f 	cmp.w	lr, #31
 8003f5a:	f73f adcf 	bgt.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8003f5e:	fa1f f58e 	uxth.w	r5, lr
 8003f62:	482d      	ldr	r0, [pc, #180]	; (8004018 <acc_calibration_a121_calibrate+0x5cc>)
 8003f64:	f880 b00d 	strb.w	fp, [r0, #13]
 8003f68:	f10b 0b01 	add.w	fp, fp, #1
 8003f6c:	4629      	mov	r1, r5
 8003f6e:	fa5f fb8b 	uxtb.w	fp, fp
 8003f72:	f7fc fd41 	bl	80009f8 <acc_diagnostic_log_scalar>
 8003f76:	f1bb 0f3a 	cmp.w	fp, #58	; 0x3a
 8003f7a:	f827 5f02 	strh.w	r5, [r7, #2]!
 8003f7e:	f108 0810 	add.w	r8, r8, #16
 8003f82:	d190      	bne.n	8003ea6 <acc_calibration_a121_calibrate+0x45a>
 8003f84:	4825      	ldr	r0, [pc, #148]	; (800401c <acc_calibration_a121_calibrate+0x5d0>)
 8003f86:	f7fc fd3f 	bl	8000a08 <acc_diagnostic_log_set_scope>
 8003f8a:	2360      	movs	r3, #96	; 0x60
 8003f8c:	e9dd 1203 	ldrd	r1, r2, [sp, #12]
 8003f90:	ee18 0a10 	vmov	r0, s16
 8003f94:	9300      	str	r3, [sp, #0]
 8003f96:	4b22      	ldr	r3, [pc, #136]	; (8004020 <acc_calibration_a121_calibrate+0x5d4>)
 8003f98:	f7fe ffac 	bl	8002ef4 <acc_sensor_a121_lut_buffer_write.constprop.0>
 8003f9c:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003fa0:	4a20      	ldr	r2, [pc, #128]	; (8004024 <acc_calibration_a121_calibrate+0x5d8>)
 8003fa2:	899b      	ldrh	r3, [r3, #12]
 8003fa4:	9300      	str	r3, [sp, #0]
 8003fa6:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003faa:	491f      	ldr	r1, [pc, #124]	; (8004028 <acc_calibration_a121_calibrate+0x5dc>)
 8003fac:	88dd      	ldrh	r5, [r3, #6]
 8003fae:	ee18 0a10 	vmov	r0, s16
 8003fb2:	2307      	movs	r3, #7
 8003fb4:	f7ff fab2 	bl	800351c <acc_confprogram_live_patch.constprop.0>
 8003fb8:	4a1a      	ldr	r2, [pc, #104]	; (8004024 <acc_calibration_a121_calibrate+0x5d8>)
 8003fba:	491b      	ldr	r1, [pc, #108]	; (8004028 <acc_calibration_a121_calibrate+0x5dc>)
 8003fbc:	9500      	str	r5, [sp, #0]
 8003fbe:	2308      	movs	r3, #8
 8003fc0:	ee18 0a10 	vmov	r0, s16
 8003fc4:	f7ff faaa 	bl	800351c <acc_confprogram_live_patch.constprop.0>
 8003fc8:	2303      	movs	r3, #3
 8003fca:	4a16      	ldr	r2, [pc, #88]	; (8004024 <acc_calibration_a121_calibrate+0x5d8>)
 8003fcc:	4916      	ldr	r1, [pc, #88]	; (8004028 <acc_calibration_a121_calibrate+0x5dc>)
 8003fce:	9300      	str	r3, [sp, #0]
 8003fd0:	ee18 0a10 	vmov	r0, s16
 8003fd4:	2309      	movs	r3, #9
 8003fd6:	f7ff faa1 	bl	800351c <acc_confprogram_live_patch.constprop.0>
 8003fda:	2306      	movs	r3, #6
 8003fdc:	4a11      	ldr	r2, [pc, #68]	; (8004024 <acc_calibration_a121_calibrate+0x5d8>)
 8003fde:	4912      	ldr	r1, [pc, #72]	; (8004028 <acc_calibration_a121_calibrate+0x5dc>)
 8003fe0:	9300      	str	r3, [sp, #0]
 8003fe2:	ee18 0a10 	vmov	r0, s16
 8003fe6:	230a      	movs	r3, #10
 8003fe8:	f7ff fa98 	bl	800351c <acc_confprogram_live_patch.constprop.0>
 8003fec:	ee18 0a10 	vmov	r0, s16
 8003ff0:	f240 31d5 	movw	r1, #981	; 0x3d5
 8003ff4:	f7fd f892 	bl	800111c <acc_sensor_protocol_a121_run_program>
 8003ff8:	4604      	mov	r4, r0
 8003ffa:	2305      	movs	r3, #5
 8003ffc:	2c00      	cmp	r4, #0
 8003ffe:	f47f ad87 	bne.w	8003b10 <acc_calibration_a121_calibrate+0xc4>
 8004002:	e57b      	b.n	8003afc <acc_calibration_a121_calibrate+0xb0>
 8004004:	0800add0 	.word	0x0800add0
 8004008:	0800aed4 	.word	0x0800aed4
 800400c:	0800aef8 	.word	0x0800aef8
 8004010:	0800af04 	.word	0x0800af04
 8004014:	0800af18 	.word	0x0800af18
 8004018:	20000008 	.word	0x20000008
 800401c:	0800af30 	.word	0x0800af30
 8004020:	08008830 	.word	0x08008830
 8004024:	080086f0 	.word	0x080086f0
 8004028:	08008b6c 	.word	0x08008b6c
 800402c:	ffff8000 	.word	0xffff8000
 8004030:	f7fe fef0 	bl	8002e14 <acc_a121_cal_session_ack_program>
 8004034:	2800      	cmp	r0, #0
 8004036:	f43f ad61 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 800403a:	9903      	ldr	r1, [sp, #12]
 800403c:	f8df 9234 	ldr.w	r9, [pc, #564]	; 8004274 <acc_calibration_a121_calibrate+0x828>
 8004040:	f8df 8234 	ldr.w	r8, [pc, #564]	; 8004278 <acc_calibration_a121_calibrate+0x82c>
 8004044:	f44f 7240 	mov.w	r2, #768	; 0x300
 8004048:	4620      	mov	r0, r4
 800404a:	f7ff f8db 	bl	8003204 <internal_buffer_processed_read.part.0.constprop.0>
 800404e:	4682      	mov	sl, r0
 8004050:	4882      	ldr	r0, [pc, #520]	; (800425c <acc_calibration_a121_calibrate+0x810>)
 8004052:	f7fc fc79 	bl	8000948 <acc_diagnostic_log_array.constprop.0>
 8004056:	f44f 7140 	mov.w	r1, #768	; 0x300
 800405a:	4650      	mov	r0, sl
 800405c:	f7fc fcbc 	bl	80009d8 <acc_diagnostic_log_data_i16>
 8004060:	ab0b      	add	r3, sp, #44	; 0x2c
 8004062:	f50a 61c0 	add.w	r1, sl, #1536	; 0x600
 8004066:	e9cd 3105 	strd	r3, r1, [sp, #20]
 800406a:	9307      	str	r3, [sp, #28]
 800406c:	2300      	movs	r3, #0
 800406e:	9303      	str	r3, [sp, #12]
 8004070:	ee07 4a90 	vmov	s15, r4
 8004074:	ab44      	add	r3, sp, #272	; 0x110
 8004076:	9304      	str	r3, [sp, #16]
 8004078:	ae2c      	add	r6, sp, #176	; 0xb0
 800407a:	af43      	add	r7, sp, #268	; 0x10c
 800407c:	ac14      	add	r4, sp, #80	; 0x50
 800407e:	4655      	mov	r5, sl
 8004080:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8004084:	f935 0b04 	ldrsh.w	r0, [r5], #4
 8004088:	f7fd fa76 	bl	8001578 <acc_cal_algorithms_atan2_q16>
 800408c:	f844 0b04 	str.w	r0, [r4], #4
 8004090:	42a6      	cmp	r6, r4
 8004092:	d1f5      	bne.n	8004080 <acc_calibration_a121_calibrate+0x634>
 8004094:	ac2b      	add	r4, sp, #172	; 0xac
 8004096:	46a3      	mov	fp, r4
 8004098:	4655      	mov	r5, sl
 800409a:	f9b5 1062 	ldrsh.w	r1, [r5, #98]	; 0x62
 800409e:	f9b5 0060 	ldrsh.w	r0, [r5, #96]	; 0x60
 80040a2:	f7fd fa69 	bl	8001578 <acc_cal_algorithms_atan2_q16>
 80040a6:	f84b 0f04 	str.w	r0, [fp, #4]!
 80040aa:	455f      	cmp	r7, fp
 80040ac:	f105 0504 	add.w	r5, r5, #4
 80040b0:	d1f3      	bne.n	800409a <acc_calibration_a121_calibrate+0x64e>
 80040b2:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
 80040b6:	ad13      	add	r5, sp, #76	; 0x4c
 80040b8:	1898      	adds	r0, r3, r2
 80040ba:	2100      	movs	r1, #0
 80040bc:	f854 3f04 	ldr.w	r3, [r4, #4]!
 80040c0:	f855 2f04 	ldr.w	r2, [r5, #4]!
 80040c4:	1a9b      	subs	r3, r3, r2
 80040c6:	454b      	cmp	r3, r9
 80040c8:	f340 847c 	ble.w	80049c4 <acc_calibration_a121_calibrate+0xf78>
 80040cc:	f5a3 23c9 	sub.w	r3, r3, #411648	; 0x64800
 80040d0:	3b7e      	subs	r3, #126	; 0x7e
 80040d2:	454b      	cmp	r3, r9
 80040d4:	dcfa      	bgt.n	80040cc <acc_calibration_a121_calibrate+0x680>
 80040d6:	2b00      	cmp	r3, #0
 80040d8:	bfb8      	it	lt
 80040da:	425b      	neglt	r3, r3
 80040dc:	4299      	cmp	r1, r3
 80040de:	bfb8      	it	lt
 80040e0:	4619      	movlt	r1, r3
 80040e2:	42a7      	cmp	r7, r4
 80040e4:	f840 3b04 	str.w	r3, [r0], #4
 80040e8:	d1e8      	bne.n	80040bc <acc_calibration_a121_calibrate+0x670>
 80040ea:	9b05      	ldr	r3, [sp, #20]
 80040ec:	1049      	asrs	r1, r1, #1
 80040ee:	f843 1f04 	str.w	r1, [r3, #4]!
 80040f2:	9305      	str	r3, [sp, #20]
 80040f4:	9b03      	ldr	r3, [sp, #12]
 80040f6:	3360      	adds	r3, #96	; 0x60
 80040f8:	9303      	str	r3, [sp, #12]
 80040fa:	9b06      	ldr	r3, [sp, #24]
 80040fc:	f10a 0ac0 	add.w	sl, sl, #192	; 0xc0
 8004100:	4553      	cmp	r3, sl
 8004102:	d1bb      	bne.n	800407c <acc_calibration_a121_calibrate+0x630>
 8004104:	2000      	movs	r0, #0
 8004106:	ee17 4a90 	vmov	r4, s15
 800410a:	9d07      	ldr	r5, [sp, #28]
 800410c:	4601      	mov	r1, r0
 800410e:	4603      	mov	r3, r0
 8004110:	f855 2f04 	ldr.w	r2, [r5, #4]!
 8004114:	428a      	cmp	r2, r1
 8004116:	bfc8      	it	gt
 8004118:	4618      	movgt	r0, r3
 800411a:	f103 0301 	add.w	r3, r3, #1
 800411e:	bfc8      	it	gt
 8004120:	4611      	movgt	r1, r2
 8004122:	2b08      	cmp	r3, #8
 8004124:	d1f4      	bne.n	8004110 <acc_calibration_a121_calibrate+0x6c4>
 8004126:	ab0c      	add	r3, sp, #48	; 0x30
 8004128:	eb00 0140 	add.w	r1, r0, r0, lsl #1
 800412c:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 8004130:	9b04      	ldr	r3, [sp, #16]
 8004132:	f10d 02af 	add.w	r2, sp, #175	; 0xaf
 8004136:	eb03 1141 	add.w	r1, r3, r1, lsl #5
 800413a:	f10d 00c7 	add.w	r0, sp, #199	; 0xc7
 800413e:	f851 3b04 	ldr.w	r3, [r1], #4
 8004142:	42ab      	cmp	r3, r5
 8004144:	bfac      	ite	ge
 8004146:	2300      	movge	r3, #0
 8004148:	2301      	movlt	r3, #1
 800414a:	f802 3f01 	strb.w	r3, [r2, #1]!
 800414e:	4290      	cmp	r0, r2
 8004150:	7613      	strb	r3, [r2, #24]
 8004152:	d1f4      	bne.n	800413e <acc_calibration_a121_calibrate+0x6f2>
 8004154:	2000      	movs	r0, #0
 8004156:	4605      	mov	r5, r0
 8004158:	2301      	movs	r3, #1
 800415a:	2d00      	cmp	r5, #0
 800415c:	f000 843e 	beq.w	80049dc <acc_calibration_a121_calibrate+0xf90>
 8004160:	5cf2      	ldrb	r2, [r6, r3]
 8004162:	2a00      	cmp	r2, #0
 8004164:	f000 8432 	beq.w	80049cc <acc_calibration_a121_calibrate+0xf80>
 8004168:	3001      	adds	r0, #1
 800416a:	3301      	adds	r3, #1
 800416c:	2b30      	cmp	r3, #48	; 0x30
 800416e:	d1f4      	bne.n	800415a <acc_calibration_a121_calibrate+0x70e>
 8004170:	f1a0 030c 	sub.w	r3, r0, #12
 8004174:	2b08      	cmp	r3, #8
 8004176:	f63f acc1 	bhi.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 800417a:	eb05 0550 	add.w	r5, r5, r0, lsr #1
 800417e:	2d17      	cmp	r5, #23
 8004180:	d902      	bls.n	8004188 <acc_calibration_a121_calibrate+0x73c>
 8004182:	3d18      	subs	r5, #24
 8004184:	2d17      	cmp	r5, #23
 8004186:	d8fc      	bhi.n	8004182 <acc_calibration_a121_calibrate+0x736>
 8004188:	4629      	mov	r1, r5
 800418a:	4835      	ldr	r0, [pc, #212]	; (8004260 <acc_calibration_a121_calibrate+0x814>)
 800418c:	f7fc fc34 	bl	80009f8 <acc_diagnostic_log_scalar>
 8004190:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004194:	4833      	ldr	r0, [pc, #204]	; (8004264 <acc_calibration_a121_calibrate+0x818>)
 8004196:	811d      	strh	r5, [r3, #8]
 8004198:	f7fc fc36 	bl	8000a08 <acc_diagnostic_log_set_scope>
 800419c:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 80041a0:	891b      	ldrh	r3, [r3, #8]
 80041a2:	009b      	lsls	r3, r3, #2
 80041a4:	b29b      	uxth	r3, r3
 80041a6:	f103 0530 	add.w	r5, r3, #48	; 0x30
 80041aa:	b2ad      	uxth	r5, r5
 80041ac:	2d5f      	cmp	r5, #95	; 0x5f
 80041ae:	f240 85e1 	bls.w	8004d74 <acc_calibration_a121_calibrate+0x1328>
 80041b2:	4a2d      	ldr	r2, [pc, #180]	; (8004268 <acc_calibration_a121_calibrate+0x81c>)
 80041b4:	fba2 1205 	umull	r1, r2, r2, r5
 80041b8:	0992      	lsrs	r2, r2, #6
 80041ba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80041be:	eba5 1242 	sub.w	r2, r5, r2, lsl #5
 80041c2:	b292      	uxth	r2, r2
 80041c4:	2700      	movs	r7, #0
 80041c6:	461d      	mov	r5, r3
 80041c8:	46b8      	mov	r8, r7
 80041ca:	4613      	mov	r3, r2
 80041cc:	2601      	movs	r6, #1
 80041ce:	4a27      	ldr	r2, [pc, #156]	; (800426c <acc_calibration_a121_calibrate+0x820>)
 80041d0:	4927      	ldr	r1, [pc, #156]	; (8004270 <acc_calibration_a121_calibrate+0x824>)
 80041d2:	9300      	str	r3, [sp, #0]
 80041d4:	4620      	mov	r0, r4
 80041d6:	2321      	movs	r3, #33	; 0x21
 80041d8:	f7ff f9a0 	bl	800351c <acc_confprogram_live_patch.constprop.0>
 80041dc:	4a23      	ldr	r2, [pc, #140]	; (800426c <acc_calibration_a121_calibrate+0x820>)
 80041de:	4924      	ldr	r1, [pc, #144]	; (8004270 <acc_calibration_a121_calibrate+0x824>)
 80041e0:	9500      	str	r5, [sp, #0]
 80041e2:	2322      	movs	r3, #34	; 0x22
 80041e4:	4620      	mov	r0, r4
 80041e6:	f7ff f999 	bl	800351c <acc_confprogram_live_patch.constprop.0>
 80041ea:	2503      	movs	r5, #3
 80041ec:	4a1f      	ldr	r2, [pc, #124]	; (800426c <acc_calibration_a121_calibrate+0x820>)
 80041ee:	4920      	ldr	r1, [pc, #128]	; (8004270 <acc_calibration_a121_calibrate+0x824>)
 80041f0:	9600      	str	r6, [sp, #0]
 80041f2:	2301      	movs	r3, #1
 80041f4:	4620      	mov	r0, r4
 80041f6:	f7ff f991 	bl	800351c <acc_confprogram_live_patch.constprop.0>
 80041fa:	4a1c      	ldr	r2, [pc, #112]	; (800426c <acc_calibration_a121_calibrate+0x820>)
 80041fc:	491c      	ldr	r1, [pc, #112]	; (8004270 <acc_calibration_a121_calibrate+0x824>)
 80041fe:	9500      	str	r5, [sp, #0]
 8004200:	2302      	movs	r3, #2
 8004202:	4620      	mov	r0, r4
 8004204:	f7ff f98a 	bl	800351c <acc_confprogram_live_patch.constprop.0>
 8004208:	4a18      	ldr	r2, [pc, #96]	; (800426c <acc_calibration_a121_calibrate+0x820>)
 800420a:	4919      	ldr	r1, [pc, #100]	; (8004270 <acc_calibration_a121_calibrate+0x824>)
 800420c:	f8cd 8000 	str.w	r8, [sp]
 8004210:	462b      	mov	r3, r5
 8004212:	4620      	mov	r0, r4
 8004214:	f7ff f982 	bl	800351c <acc_confprogram_live_patch.constprop.0>
 8004218:	4a14      	ldr	r2, [pc, #80]	; (800426c <acc_calibration_a121_calibrate+0x820>)
 800421a:	4915      	ldr	r1, [pc, #84]	; (8004270 <acc_calibration_a121_calibrate+0x824>)
 800421c:	9700      	str	r7, [sp, #0]
 800421e:	2304      	movs	r3, #4
 8004220:	4620      	mov	r0, r4
 8004222:	f7ff f97b 	bl	800351c <acc_confprogram_live_patch.constprop.0>
 8004226:	4a11      	ldr	r2, [pc, #68]	; (800426c <acc_calibration_a121_calibrate+0x820>)
 8004228:	4911      	ldr	r1, [pc, #68]	; (8004270 <acc_calibration_a121_calibrate+0x824>)
 800422a:	9600      	str	r6, [sp, #0]
 800422c:	2305      	movs	r3, #5
 800422e:	4620      	mov	r0, r4
 8004230:	f7ff f974 	bl	800351c <acc_confprogram_live_patch.constprop.0>
 8004234:	2300      	movs	r3, #0
 8004236:	4a0d      	ldr	r2, [pc, #52]	; (800426c <acc_calibration_a121_calibrate+0x820>)
 8004238:	490d      	ldr	r1, [pc, #52]	; (8004270 <acc_calibration_a121_calibrate+0x824>)
 800423a:	9300      	str	r3, [sp, #0]
 800423c:	4620      	mov	r0, r4
 800423e:	2306      	movs	r3, #6
 8004240:	f7ff f96c 	bl	800351c <acc_confprogram_live_patch.constprop.0>
 8004244:	4620      	mov	r0, r4
 8004246:	f44f 717b 	mov.w	r1, #1004	; 0x3ec
 800424a:	f7fc ff67 	bl	800111c <acc_sensor_protocol_a121_run_program>
 800424e:	4604      	mov	r4, r0
 8004250:	2306      	movs	r3, #6
 8004252:	2c00      	cmp	r4, #0
 8004254:	f47f ac5c 	bne.w	8003b10 <acc_calibration_a121_calibrate+0xc4>
 8004258:	e450      	b.n	8003afc <acc_calibration_a121_calibrate+0xb0>
 800425a:	bf00      	nop
 800425c:	0800af48 	.word	0x0800af48
 8004260:	0800af6c 	.word	0x0800af6c
 8004264:	0800af78 	.word	0x0800af78
 8004268:	aaaaaaab 	.word	0xaaaaaaab
 800426c:	080086f0 	.word	0x080086f0
 8004270:	08008b6c 	.word	0x08008b6c
 8004274:	0003243f 	.word	0x0003243f
 8004278:	fffcdbc1 	.word	0xfffcdbc1
 800427c:	f7fe fdca 	bl	8002e14 <acc_a121_cal_session_ack_program>
 8004280:	9005      	str	r0, [sp, #20]
 8004282:	2800      	cmp	r0, #0
 8004284:	f43f ac3a 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8004288:	4be3      	ldr	r3, [pc, #908]	; (8004618 <acc_calibration_a121_calibrate+0xbcc>)
 800428a:	f8dd 1740 	ldr.w	r1, [sp, #1856]	; 0x740
 800428e:	4ae3      	ldr	r2, [pc, #908]	; (800461c <acc_calibration_a121_calibrate+0xbd0>)
 8004290:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004292:	f8b1 507c 	ldrh.w	r5, [r1, #124]	; 0x7c
 8004296:	9903      	ldr	r1, [sp, #12]
 8004298:	fba2 2303 	umull	r2, r3, r2, r3
 800429c:	099b      	lsrs	r3, r3, #6
 800429e:	f44f 7240 	mov.w	r2, #768	; 0x300
 80042a2:	4620      	mov	r0, r4
 80042a4:	fb05 f503 	mul.w	r5, r5, r3
 80042a8:	f7fe ffac 	bl	8003204 <internal_buffer_processed_read.part.0.constprop.0>
 80042ac:	4606      	mov	r6, r0
 80042ae:	9006      	str	r0, [sp, #24]
 80042b0:	48db      	ldr	r0, [pc, #876]	; (8004620 <acc_calibration_a121_calibrate+0xbd4>)
 80042b2:	f7fc fb49 	bl	8000948 <acc_diagnostic_log_array.constprop.0>
 80042b6:	4630      	mov	r0, r6
 80042b8:	f44f 7140 	mov.w	r1, #768	; 0x300
 80042bc:	f7fc fb8c 	bl	80009d8 <acc_diagnostic_log_data_i16>
 80042c0:	ab44      	add	r3, sp, #272	; 0x110
 80042c2:	1cb7      	adds	r7, r6, #2
 80042c4:	9304      	str	r3, [sp, #16]
 80042c6:	f50d 7886 	add.w	r8, sp, #268	; 0x10c
 80042ca:	f20d 760c 	addw	r6, sp, #1804	; 0x70c
 80042ce:	f9b7 1000 	ldrsh.w	r1, [r7]
 80042d2:	f937 0c02 	ldrsh.w	r0, [r7, #-2]
 80042d6:	f7fd f94f 	bl	8001578 <acc_cal_algorithms_atan2_q16>
 80042da:	f848 0f04 	str.w	r0, [r8, #4]!
 80042de:	4546      	cmp	r6, r8
 80042e0:	f107 0704 	add.w	r7, r7, #4
 80042e4:	d1f3      	bne.n	80042ce <acc_calibration_a121_calibrate+0x882>
 80042e6:	2300      	movs	r3, #0
 80042e8:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 80042ec:	469a      	mov	sl, r3
 80042ee:	e9cd 332c 	strd	r3, r3, [sp, #176]	; 0xb0
 80042f2:	e9cd 332e 	strd	r3, r3, [sp, #184]	; 0xb8
 80042f6:	e9cd 3330 	strd	r3, r3, [sp, #192]	; 0xc0
 80042fa:	e9cd 3332 	strd	r3, r3, [sp, #200]	; 0xc8
 80042fe:	9303      	str	r3, [sp, #12]
 8004300:	00d3      	lsls	r3, r2, #3
 8004302:	9a04      	ldr	r2, [sp, #16]
 8004304:	4fc7      	ldr	r7, [pc, #796]	; (8004624 <acc_calibration_a121_calibrate+0xbd8>)
 8004306:	ae2c      	add	r6, sp, #176	; 0xb0
 8004308:	46b3      	mov	fp, r6
 800430a:	f102 095c 	add.w	r9, r2, #92	; 0x5c
 800430e:	ee07 4a90 	vmov	s15, r4
 8004312:	4656      	mov	r6, sl
 8004314:	464c      	mov	r4, r9
 8004316:	f64f 78ff 	movw	r8, #65535	; 0xffff
 800431a:	4699      	mov	r9, r3
 800431c:	46da      	mov	sl, fp
 800431e:	f1a4 005c 	sub.w	r0, r4, #92	; 0x5c
 8004322:	f7fc fb1d 	bl	8000960 <acc_cal_algorithms_phase_unwrap.constprop.0>
 8004326:	f1a4 0c60 	sub.w	ip, r4, #96	; 0x60
 800432a:	2000      	movs	r0, #0
 800432c:	f85c 3f04 	ldr.w	r3, [ip, #4]!
 8004330:	f8dc 2060 	ldr.w	r2, [ip, #96]	; 0x60
 8004334:	4564      	cmp	r4, ip
 8004336:	eba3 0302 	sub.w	r3, r3, r2
 800433a:	4418      	add	r0, r3
 800433c:	d1f6      	bne.n	800432c <acc_calibration_a121_calibrate+0x8e0>
 800433e:	2800      	cmp	r0, #0
 8004340:	f2c0 83ac 	blt.w	8004a9c <acc_calibration_a121_calibrate+0x1050>
 8004344:	0980      	lsrs	r0, r0, #6
 8004346:	f640 5394 	movw	r3, #3476	; 0xd94
 800434a:	fb03 f000 	mul.w	r0, r3, r0
 800434e:	0d40      	lsrs	r0, r0, #21
 8004350:	fb05 f000 	mul.w	r0, r5, r0
 8004354:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 8004358:	f8cb 0000 	str.w	r0, [fp]
 800435c:	b126      	cbz	r6, 8004368 <acc_calibration_a121_calibrate+0x91c>
 800435e:	f85b 3c04 	ldr.w	r3, [fp, #-4]
 8004362:	4283      	cmp	r3, r0
 8004364:	f240 852d 	bls.w	8004dc2 <acc_calibration_a121_calibrate+0x1376>
 8004368:	f8db 3000 	ldr.w	r3, [fp]
 800436c:	f1a3 7366 	sub.w	r3, r3, #60293120	; 0x3980000
 8004370:	f5a3 334a 	sub.w	r3, r3, #206848	; 0x32800
 8004374:	3b20      	subs	r3, #32
 8004376:	2b00      	cmp	r3, #0
 8004378:	bfb8      	it	lt
 800437a:	425b      	neglt	r3, r3
 800437c:	42bb      	cmp	r3, r7
 800437e:	d203      	bcs.n	8004388 <acc_calibration_a121_calibrate+0x93c>
 8004380:	461f      	mov	r7, r3
 8004382:	9b05      	ldr	r3, [sp, #20]
 8004384:	9303      	str	r3, [sp, #12]
 8004386:	46b0      	mov	r8, r6
 8004388:	1c72      	adds	r2, r6, #1
 800438a:	b296      	uxth	r6, r2
 800438c:	2e08      	cmp	r6, #8
 800438e:	f10b 0b04 	add.w	fp, fp, #4
 8004392:	f104 04c0 	add.w	r4, r4, #192	; 0xc0
 8004396:	d1c2      	bne.n	800431e <acc_calibration_a121_calibrate+0x8d2>
 8004398:	9a03      	ldr	r2, [sp, #12]
 800439a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800439e:	ee17 4a90 	vmov	r4, s15
 80043a2:	4656      	mov	r6, sl
 80043a4:	2a00      	cmp	r2, #0
 80043a6:	bf08      	it	eq
 80043a8:	4698      	moveq	r8, r3
 80043aa:	4d9f      	ldr	r5, [pc, #636]	; (8004628 <acc_calibration_a121_calibrate+0xbdc>)
 80043ac:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 80043b0:	f105 0a18 	add.w	sl, r5, #24
 80043b4:	2730      	movs	r7, #48	; 0x30
 80043b6:	f885 7024 	strb.w	r7, [r5, #36]	; 0x24
 80043ba:	3701      	adds	r7, #1
 80043bc:	f859 1f04 	ldr.w	r1, [r9, #4]!
 80043c0:	4650      	mov	r0, sl
 80043c2:	b2ff      	uxtb	r7, r7
 80043c4:	f7fc fb18 	bl	80009f8 <acc_diagnostic_log_scalar>
 80043c8:	2f38      	cmp	r7, #56	; 0x38
 80043ca:	d1f4      	bne.n	80043b6 <acc_calibration_a121_calibrate+0x96a>
 80043cc:	9b03      	ldr	r3, [sp, #12]
 80043ce:	2b00      	cmp	r3, #0
 80043d0:	f43f ab94 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 80043d4:	4641      	mov	r1, r8
 80043d6:	4895      	ldr	r0, [pc, #596]	; (800462c <acc_calibration_a121_calibrate+0xbe0>)
 80043d8:	f7fc fb0e 	bl	80009f8 <acc_diagnostic_log_scalar>
 80043dc:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 80043e0:	4893      	ldr	r0, [pc, #588]	; (8004630 <acc_calibration_a121_calibrate+0xbe4>)
 80043e2:	f8a3 8022 	strh.w	r8, [r3, #34]	; 0x22
 80043e6:	f7fc fb0f 	bl	8000a08 <acc_diagnostic_log_set_scope>
 80043ea:	4992      	ldr	r1, [pc, #584]	; (8004634 <acc_calibration_a121_calibrate+0xbe8>)
 80043ec:	4a92      	ldr	r2, [pc, #584]	; (8004638 <acc_calibration_a121_calibrate+0xbec>)
 80043ee:	f8cd 8000 	str.w	r8, [sp]
 80043f2:	230c      	movs	r3, #12
 80043f4:	4620      	mov	r0, r4
 80043f6:	f7ff f891 	bl	800351c <acc_confprogram_live_patch.constprop.0>
 80043fa:	4620      	mov	r0, r4
 80043fc:	f240 4116 	movw	r1, #1046	; 0x416
 8004400:	f7fc fe8c 	bl	800111c <acc_sensor_protocol_a121_run_program>
 8004404:	2800      	cmp	r0, #0
 8004406:	f43f ab79 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 800440a:	9b06      	ldr	r3, [sp, #24]
 800440c:	ed9f 6a8b 	vldr	s12, [pc, #556]	; 800463c <acc_calibration_a121_calibrate+0xbf0>
 8004410:	4637      	mov	r7, r6
 8004412:	461a      	mov	r2, r3
 8004414:	f103 05c0 	add.w	r5, r3, #192	; 0xc0
 8004418:	f503 6cd8 	add.w	ip, r3, #1728	; 0x6c0
 800441c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8004420:	f1a5 03c0 	sub.w	r3, r5, #192	; 0xc0
 8004424:	2400      	movs	r4, #0
 8004426:	f9b3 0002 	ldrsh.w	r0, [r3, #2]
 800442a:	f9b3 1000 	ldrsh.w	r1, [r3]
 800442e:	fb00 f000 	mul.w	r0, r0, r0
 8004432:	3304      	adds	r3, #4
 8004434:	fb01 0101 	mla	r1, r1, r1, r0
 8004438:	429d      	cmp	r5, r3
 800443a:	440c      	add	r4, r1
 800443c:	d1f3      	bne.n	8004426 <acc_calibration_a121_calibrate+0x9da>
 800443e:	ee07 4a90 	vmov	s15, r4
 8004442:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8004446:	35c0      	adds	r5, #192	; 0xc0
 8004448:	eec7 7a06 	vdiv.f32	s15, s14, s12
 800444c:	45ac      	cmp	ip, r5
 800444e:	eeb1 7ae7 	vsqrt.f32	s14, s15
 8004452:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8004456:	ece7 7a01 	vstmia	r7!, {s15}
 800445a:	d1e1      	bne.n	8004420 <acc_calibration_a121_calibrate+0x9d4>
 800445c:	9b06      	ldr	r3, [sp, #24]
 800445e:	f503 60c0 	add.w	r0, r3, #1536	; 0x600
 8004462:	9b04      	ldr	r3, [sp, #16]
 8004464:	f9b2 1000 	ldrsh.w	r1, [r2]
 8004468:	ecf6 5a01 	vldmia	r6!, {s11}
 800446c:	ee06 1a10 	vmov	s12, r1
 8004470:	f9b2 1002 	ldrsh.w	r1, [r2, #2]
 8004474:	ee06 1a90 	vmov	s13, r1
 8004478:	f9b2 1060 	ldrsh.w	r1, [r2, #96]	; 0x60
 800447c:	ee07 1a10 	vmov	s14, r1
 8004480:	f9b2 1062 	ldrsh.w	r1, [r2, #98]	; 0x62
 8004484:	ee07 1a90 	vmov	s15, r1
 8004488:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 800448c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8004490:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8004494:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004498:	ee26 6a25 	vmul.f32	s12, s12, s11
 800449c:	ee66 6aa5 	vmul.f32	s13, s13, s11
 80044a0:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80044a4:	ee27 7a25 	vmul.f32	s14, s14, s11
 80044a8:	ee26 5a06 	vmul.f32	s10, s12, s12
 80044ac:	ee67 5a07 	vmul.f32	s11, s14, s14
 80044b0:	ee26 6a26 	vmul.f32	s12, s12, s13
 80044b4:	ee27 7a27 	vmul.f32	s14, s14, s15
 80044b8:	ee66 6aa6 	vmul.f32	s13, s13, s13
 80044bc:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80044c0:	32c0      	adds	r2, #192	; 0xc0
 80044c2:	4290      	cmp	r0, r2
 80044c4:	ed83 5a00 	vstr	s10, [r3]
 80044c8:	ed83 6a01 	vstr	s12, [r3, #4]
 80044cc:	edc3 6a02 	vstr	s13, [r3, #8]
 80044d0:	edc3 5a18 	vstr	s11, [r3, #96]	; 0x60
 80044d4:	ed83 7a19 	vstr	s14, [r3, #100]	; 0x64
 80044d8:	edc3 7a1a 	vstr	s15, [r3, #104]	; 0x68
 80044dc:	f103 030c 	add.w	r3, r3, #12
 80044e0:	d1c0      	bne.n	8004464 <acc_calibration_a121_calibrate+0xa18>
 80044e2:	9804      	ldr	r0, [sp, #16]
 80044e4:	a914      	add	r1, sp, #80	; 0x50
 80044e6:	2210      	movs	r2, #16
 80044e8:	f7fc ff84 	bl	80013f4 <least_sqr_fit>
 80044ec:	4604      	mov	r4, r0
 80044ee:	2800      	cmp	r0, #0
 80044f0:	f43f ab04 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 80044f4:	ed9d 6a14 	vldr	s12, [sp, #80]	; 0x50
 80044f8:	ed9d 5a15 	vldr	s10, [sp, #84]	; 0x54
 80044fc:	eddd 6a16 	vldr	s13, [sp, #88]	; 0x58
 8004500:	eddf 4a4f 	vldr	s9, [pc, #316]	; 8004640 <acc_calibration_a121_calibrate+0xbf4>
 8004504:	ed9f 4a4f 	vldr	s8, [pc, #316]	; 8004644 <acc_calibration_a121_calibrate+0xbf8>
 8004508:	eeb1 7ac6 	vsqrt.f32	s14, s12
 800450c:	eef1 7a00 	vmov.f32	s15, #16	; 0x40800000  4.0
 8004510:	ee26 6a27 	vmul.f32	s12, s12, s15
 8004514:	ee65 7a05 	vmul.f32	s15, s10, s10
 8004518:	ee26 6a26 	vmul.f32	s12, s12, s13
 800451c:	eef6 5a00 	vmov.f32	s11, #96	; 0x3f000000  0.5
 8004520:	ee36 6a67 	vsub.f32	s12, s12, s15
 8004524:	eec5 6a87 	vdiv.f32	s13, s11, s14
 8004528:	eef1 7ac6 	vsqrt.f32	s15, s12
 800452c:	eeb6 6a08 	vmov.f32	s12, #104	; 0x3f400000  0.750
 8004530:	ee37 7a46 	vsub.f32	s14, s14, s12
 8004534:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8004538:	ee27 7a24 	vmul.f32	s14, s14, s9
 800453c:	ee66 6a85 	vmul.f32	s13, s13, s10
 8004540:	eeb7 5a00 	vmov.f32	s10, #112	; 0x3f800000  1.0
 8004544:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8004548:	ee76 6a85 	vadd.f32	s13, s13, s10
 800454c:	ee37 7a25 	vadd.f32	s14, s14, s11
 8004550:	eeb3 6a0f 	vmov.f32	s12, #63	; 0x41f80000  31.0
 8004554:	ee66 6a84 	vmul.f32	s13, s13, s8
 8004558:	ee67 7aa4 	vmul.f32	s15, s15, s9
 800455c:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8004560:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004564:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8004568:	ee77 7aa5 	vadd.f32	s15, s15, s11
 800456c:	f300 827d 	bgt.w	8004a6a <acc_calibration_a121_calibrate+0x101e>
 8004570:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8004574:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004578:	bf48      	it	mi
 800457a:	2100      	movmi	r1, #0
 800457c:	f140 842e 	bpl.w	8004ddc <acc_calibration_a121_calibrate+0x1390>
 8004580:	ed9f 7a31 	vldr	s14, [pc, #196]	; 8004648 <acc_calibration_a121_calibrate+0xbfc>
 8004584:	eef4 6ac7 	vcmpe.f32	s13, s14
 8004588:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800458c:	f340 8277 	ble.w	8004a7e <acc_calibration_a121_calibrate+0x1032>
 8004590:	ea6f 5181 	mvn.w	r1, r1, lsl #22
 8004594:	ea6f 5191 	mvn.w	r1, r1, lsr #22
 8004598:	eeb3 7a0f 	vmov.f32	s14, #63	; 0x41f80000  31.0
 800459c:	eef4 7ac7 	vcmpe.f32	s15, s14
 80045a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80045a4:	f300 825e 	bgt.w	8004a64 <acc_calibration_a121_calibrate+0x1018>
 80045a8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80045ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80045b0:	bf48      	it	mi
 80045b2:	2300      	movmi	r3, #0
 80045b4:	f140 8419 	bpl.w	8004dea <acc_calibration_a121_calibrate+0x139e>
 80045b8:	f8dd 2740 	ldr.w	r2, [sp, #1856]	; 0x740
 80045bc:	430b      	orrs	r3, r1
 80045be:	f8a2 3056 	strh.w	r3, [r2, #86]	; 0x56
 80045c2:	2307      	movs	r3, #7
 80045c4:	f7ff baa4 	b.w	8003b10 <acc_calibration_a121_calibrate+0xc4>
 80045c8:	f7fe fc24 	bl	8002e14 <acc_a121_cal_session_ack_program>
 80045cc:	2800      	cmp	r0, #0
 80045ce:	f43f aa95 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 80045d2:	9903      	ldr	r1, [sp, #12]
 80045d4:	2210      	movs	r2, #16
 80045d6:	4620      	mov	r0, r4
 80045d8:	f7fe fe14 	bl	8003204 <internal_buffer_processed_read.part.0.constprop.0>
 80045dc:	4680      	mov	r8, r0
 80045de:	481b      	ldr	r0, [pc, #108]	; (800464c <acc_calibration_a121_calibrate+0xc00>)
 80045e0:	f7fc f9b2 	bl	8000948 <acc_diagnostic_log_array.constprop.0>
 80045e4:	4640      	mov	r0, r8
 80045e6:	2110      	movs	r1, #16
 80045e8:	f7fc f9f6 	bl	80009d8 <acc_diagnostic_log_data_i16>
 80045ec:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 80045f0:	f8b3 6056 	ldrh.w	r6, [r3, #86]	; 0x56
 80045f4:	2500      	movs	r5, #0
 80045f6:	f006 0c1f 	and.w	ip, r6, #31
 80045fa:	f3c6 1044 	ubfx	r0, r6, #5, #5
 80045fe:	0ab6      	lsrs	r6, r6, #10
 8004600:	f108 0902 	add.w	r9, r8, #2
 8004604:	f10c 0c30 	add.w	ip, ip, #48	; 0x30
 8004608:	3030      	adds	r0, #48	; 0x30
 800460a:	3e20      	subs	r6, #32
 800460c:	9503      	str	r5, [sp, #12]
 800460e:	46ab      	mov	fp, r5
 8004610:	46ae      	mov	lr, r5
 8004612:	462f      	mov	r7, r5
 8004614:	e025      	b.n	8004662 <acc_calibration_a121_calibrate+0xc16>
 8004616:	bf00      	nop
 8004618:	200000ac 	.word	0x200000ac
 800461c:	10624dd3 	.word	0x10624dd3
 8004620:	0800af94 	.word	0x0800af94
 8004624:	000f4240 	.word	0x000f4240
 8004628:	20000000 	.word	0x20000000
 800462c:	0800afb8 	.word	0x0800afb8
 8004630:	0800afc8 	.word	0x0800afc8
 8004634:	08008b6c 	.word	0x08008b6c
 8004638:	080086f0 	.word	0x080086f0
 800463c:	42400000 	.word	0x42400000
 8004640:	42800000 	.word	0x42800000
 8004644:	42000000 	.word	0x42000000
 8004648:	427c0000 	.word	0x427c0000
 800464c:	0800afe4 	.word	0x0800afe4
 8004650:	455b      	cmp	r3, fp
 8004652:	4677      	mov	r7, lr
 8004654:	f200 823c 	bhi.w	8004ad0 <acc_calibration_a121_calibrate+0x1084>
 8004658:	469e      	mov	lr, r3
 800465a:	3501      	adds	r5, #1
 800465c:	2d08      	cmp	r5, #8
 800465e:	f000 823b 	beq.w	8004ad8 <acc_calibration_a121_calibrate+0x108c>
 8004662:	f938 2025 	ldrsh.w	r2, [r8, r5, lsl #2]
 8004666:	f939 3025 	ldrsh.w	r3, [r9, r5, lsl #2]
 800466a:	fb0c f202 	mul.w	r2, ip, r2
 800466e:	fb03 fa06 	mul.w	sl, r3, r6
 8004672:	2a00      	cmp	r2, #0
 8004674:	fb03 f300 	mul.w	r3, r3, r0
 8004678:	bfb8      	it	lt
 800467a:	323f      	addlt	r2, #63	; 0x3f
 800467c:	f1ba 0f00 	cmp.w	sl, #0
 8004680:	bfb8      	it	lt
 8004682:	f10a 0a1f 	addlt.w	sl, sl, #31
 8004686:	2b00      	cmp	r3, #0
 8004688:	bfb8      	it	lt
 800468a:	333f      	addlt	r3, #63	; 0x3f
 800468c:	1192      	asrs	r2, r2, #6
 800468e:	eb02 126a 	add.w	r2, r2, sl, asr #5
 8004692:	f343 138f 	sbfx	r3, r3, #6, #16
 8004696:	b212      	sxth	r2, r2
 8004698:	fb03 f303 	mul.w	r3, r3, r3
 800469c:	fb02 3302 	mla	r3, r2, r2, r3
 80046a0:	42bb      	cmp	r3, r7
 80046a2:	b2a9      	uxth	r1, r5
 80046a4:	d9d9      	bls.n	800465a <acc_calibration_a121_calibrate+0xc0e>
 80046a6:	4573      	cmp	r3, lr
 80046a8:	d8d2      	bhi.n	8004650 <acc_calibration_a121_calibrate+0xc04>
 80046aa:	461f      	mov	r7, r3
 80046ac:	e7d5      	b.n	800465a <acc_calibration_a121_calibrate+0xc0e>
 80046ae:	f7fe fbb1 	bl	8002e14 <acc_a121_cal_session_ack_program>
 80046b2:	2800      	cmp	r0, #0
 80046b4:	f43f aa22 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 80046b8:	9903      	ldr	r1, [sp, #12]
 80046ba:	2260      	movs	r2, #96	; 0x60
 80046bc:	4620      	mov	r0, r4
 80046be:	f7fe fda1 	bl	8003204 <internal_buffer_processed_read.part.0.constprop.0>
 80046c2:	4605      	mov	r5, r0
 80046c4:	48cf      	ldr	r0, [pc, #828]	; (8004a04 <acc_calibration_a121_calibrate+0xfb8>)
 80046c6:	f7fc f93f 	bl	8000948 <acc_diagnostic_log_array.constprop.0>
 80046ca:	4628      	mov	r0, r5
 80046cc:	2160      	movs	r1, #96	; 0x60
 80046ce:	f7fc f983 	bl	80009d8 <acc_diagnostic_log_data_i16>
 80046d2:	ab44      	add	r3, sp, #272	; 0x110
 80046d4:	9304      	str	r3, [sp, #16]
 80046d6:	1caf      	adds	r7, r5, #2
 80046d8:	4699      	mov	r9, r3
 80046da:	f04f 0800 	mov.w	r8, #0
 80046de:	f640 36b7 	movw	r6, #2999	; 0xbb7
 80046e2:	f937 1028 	ldrsh.w	r1, [r7, r8, lsl #2]
 80046e6:	f935 0028 	ldrsh.w	r0, [r5, r8, lsl #2]
 80046ea:	fb01 f301 	mul.w	r3, r1, r1
 80046ee:	fb00 3300 	mla	r3, r0, r0, r3
 80046f2:	42b3      	cmp	r3, r6
 80046f4:	f108 0801 	add.w	r8, r8, #1
 80046f8:	f77f aa00 	ble.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 80046fc:	f7fc ff3c 	bl	8001578 <acc_cal_algorithms_atan2_q16>
 8004700:	f1b8 0f30 	cmp.w	r8, #48	; 0x30
 8004704:	f849 0b04 	str.w	r0, [r9], #4
 8004708:	d1eb      	bne.n	80046e2 <acc_calibration_a121_calibrate+0xc96>
 800470a:	9b04      	ldr	r3, [sp, #16]
 800470c:	ad43      	add	r5, sp, #268	; 0x10c
 800470e:	f10d 06ae 	add.w	r6, sp, #174	; 0xae
 8004712:	4629      	mov	r1, r5
 8004714:	4632      	mov	r2, r6
 8004716:	f103 075c 	add.w	r7, r3, #92	; 0x5c
 800471a:	f851 3f04 	ldr.w	r3, [r1, #4]!
 800471e:	2b00      	cmp	r3, #0
 8004720:	bfb8      	it	lt
 8004722:	330f      	addlt	r3, #15
 8004724:	3202      	adds	r2, #2
 8004726:	111b      	asrs	r3, r3, #4
 8004728:	428f      	cmp	r7, r1
 800472a:	8013      	strh	r3, [r2, #0]
 800472c:	d1f5      	bne.n	800471a <acc_calibration_a121_calibrate+0xcce>
 800472e:	9804      	ldr	r0, [sp, #16]
 8004730:	f7fc f916 	bl	8000960 <acc_cal_algorithms_phase_unwrap.constprop.0>
 8004734:	2100      	movs	r1, #0
 8004736:	f855 3f04 	ldr.w	r3, [r5, #4]!
 800473a:	6e2a      	ldr	r2, [r5, #96]	; 0x60
 800473c:	42af      	cmp	r7, r5
 800473e:	eba3 0302 	sub.w	r3, r3, r2
 8004742:	4419      	add	r1, r3
 8004744:	d1f7      	bne.n	8004736 <acc_calibration_a121_calibrate+0xcea>
 8004746:	4bb0      	ldr	r3, [pc, #704]	; (8004a08 <acc_calibration_a121_calibrate+0xfbc>)
 8004748:	17c8      	asrs	r0, r1, #31
 800474a:	fb83 3101 	smull	r3, r1, r3, r1
 800474e:	ebc0 10a1 	rsb	r0, r0, r1, asr #6
 8004752:	f500 4399 	add.w	r3, r0, #19584	; 0x4c80
 8004756:	3330      	adds	r3, #48	; 0x30
 8004758:	f64c 1262 	movw	r2, #51554	; 0xc962
 800475c:	4293      	cmp	r3, r2
 800475e:	f63f a9cd 	bhi.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8004762:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004766:	f10d 01de 	add.w	r1, sp, #222	; 0xde
 800476a:	f103 0524 	add.w	r5, r3, #36	; 0x24
 800476e:	3322      	adds	r3, #34	; 0x22
 8004770:	f836 2f02 	ldrh.w	r2, [r6, #2]!
 8004774:	f823 2f02 	strh.w	r2, [r3, #2]!
 8004778:	42b1      	cmp	r1, r6
 800477a:	d1f9      	bne.n	8004770 <acc_calibration_a121_calibrate+0xd24>
 800477c:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004780:	f8a3 0054 	strh.w	r0, [r3, #84]	; 0x54
 8004784:	48a1      	ldr	r0, [pc, #644]	; (8004a0c <acc_calibration_a121_calibrate+0xfc0>)
 8004786:	f7fc f8df 	bl	8000948 <acc_diagnostic_log_array.constprop.0>
 800478a:	4628      	mov	r0, r5
 800478c:	2118      	movs	r1, #24
 800478e:	f7fc f923 	bl	80009d8 <acc_diagnostic_log_data_i16>
 8004792:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004796:	489e      	ldr	r0, [pc, #632]	; (8004a10 <acc_calibration_a121_calibrate+0xfc4>)
 8004798:	f9b3 1054 	ldrsh.w	r1, [r3, #84]	; 0x54
 800479c:	f7fc f92c 	bl	80009f8 <acc_diagnostic_log_scalar>
 80047a0:	489c      	ldr	r0, [pc, #624]	; (8004a14 <acc_calibration_a121_calibrate+0xfc8>)
 80047a2:	f7fc f931 	bl	8000a08 <acc_diagnostic_log_set_scope>
 80047a6:	4620      	mov	r0, r4
 80047a8:	f240 417b 	movw	r1, #1147	; 0x47b
 80047ac:	f7fc fcb6 	bl	800111c <acc_sensor_protocol_a121_run_program>
 80047b0:	4604      	mov	r4, r0
 80047b2:	2309      	movs	r3, #9
 80047b4:	2c00      	cmp	r4, #0
 80047b6:	f47f a9ab 	bne.w	8003b10 <acc_calibration_a121_calibrate+0xc4>
 80047ba:	f7ff b99f 	b.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 80047be:	f7fe fb29 	bl	8002e14 <acc_a121_cal_session_ack_program>
 80047c2:	2800      	cmp	r0, #0
 80047c4:	f43f a99a 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 80047c8:	f44f 629c 	mov.w	r2, #1248	; 0x4e0
 80047cc:	9903      	ldr	r1, [sp, #12]
 80047ce:	4620      	mov	r0, r4
 80047d0:	f7fe fd18 	bl	8003204 <internal_buffer_processed_read.part.0.constprop.0>
 80047d4:	4680      	mov	r8, r0
 80047d6:	4890      	ldr	r0, [pc, #576]	; (8004a18 <acc_calibration_a121_calibrate+0xfcc>)
 80047d8:	f7fc f8b6 	bl	8000948 <acc_diagnostic_log_array.constprop.0>
 80047dc:	af0b      	add	r7, sp, #44	; 0x2c
 80047de:	4640      	mov	r0, r8
 80047e0:	f44f 71c0 	mov.w	r1, #384	; 0x180
 80047e4:	ae2c      	add	r6, sp, #176	; 0xb0
 80047e6:	f7fc f8ff 	bl	80009e8 <acc_diagnostic_log_data_u16>
 80047ea:	2400      	movs	r4, #0
 80047ec:	aa0c      	add	r2, sp, #48	; 0x30
 80047ee:	9200      	str	r2, [sp, #0]
 80047f0:	9401      	str	r4, [sp, #4]
 80047f2:	4640      	mov	r0, r8
 80047f4:	463b      	mov	r3, r7
 80047f6:	aa44      	add	r2, sp, #272	; 0x110
 80047f8:	2190      	movs	r1, #144	; 0x90
 80047fa:	603c      	str	r4, [r7, #0]
 80047fc:	6034      	str	r4, [r6, #0]
 80047fe:	940c      	str	r4, [sp, #48]	; 0x30
 8004800:	9414      	str	r4, [sp, #80]	; 0x50
 8004802:	f7fb ffab 	bl	800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>
 8004806:	f508 7940 	add.w	r9, r8, #768	; 0x300
 800480a:	2800      	cmp	r0, #0
 800480c:	f43f a976 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8004810:	e9cd 6400 	strd	r6, r4, [sp]
 8004814:	ab14      	add	r3, sp, #80	; 0x50
 8004816:	aa44      	add	r2, sp, #272	; 0x110
 8004818:	21f0      	movs	r1, #240	; 0xf0
 800481a:	f508 7090 	add.w	r0, r8, #288	; 0x120
 800481e:	f7fb ff9d 	bl	800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>
 8004822:	2800      	cmp	r0, #0
 8004824:	f43f a96a 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8004828:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800482a:	6831      	ldr	r1, [r6, #0]
 800482c:	4d7b      	ldr	r5, [pc, #492]	; (8004a1c <acc_calibration_a121_calibrate+0xfd0>)
 800482e:	4b7c      	ldr	r3, [pc, #496]	; (8004a20 <acc_calibration_a121_calibrate+0xfd4>)
 8004830:	487c      	ldr	r0, [pc, #496]	; (8004a24 <acc_calibration_a121_calibrate+0xfd8>)
 8004832:	1a89      	subs	r1, r1, r2
 8004834:	fb03 f301 	mul.w	r3, r3, r1
 8004838:	fb05 fc02 	mul.w	ip, r5, r2
 800483c:	683a      	ldr	r2, [r7, #0]
 800483e:	0c1b      	lsrs	r3, r3, #16
 8004840:	ebc3 3c5c 	rsb	ip, r3, ip, lsr #13
 8004844:	fb05 f202 	mul.w	r2, r5, r2
 8004848:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 800484c:	0b52      	lsrs	r2, r2, #13
 800484e:	fb05 f101 	mul.w	r1, r5, r1
 8004852:	e9c3 c116 	strd	ip, r1, [r3, #88]	; 0x58
 8004856:	661a      	str	r2, [r3, #96]	; 0x60
 8004858:	f7fc f8ce 	bl	80009f8 <acc_diagnostic_log_scalar>
 800485c:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004860:	4871      	ldr	r0, [pc, #452]	; (8004a28 <acc_calibration_a121_calibrate+0xfdc>)
 8004862:	6d99      	ldr	r1, [r3, #88]	; 0x58
 8004864:	f7fc f8c8 	bl	80009f8 <acc_diagnostic_log_scalar>
 8004868:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 800486c:	486f      	ldr	r0, [pc, #444]	; (8004a2c <acc_calibration_a121_calibrate+0xfe0>)
 800486e:	6e19      	ldr	r1, [r3, #96]	; 0x60
 8004870:	f7fc f8c2 	bl	80009f8 <acc_diagnostic_log_scalar>
 8004874:	486e      	ldr	r0, [pc, #440]	; (8004a30 <acc_calibration_a121_calibrate+0xfe4>)
 8004876:	f7fc f8c7 	bl	8000a08 <acc_diagnostic_log_set_scope>
 800487a:	486e      	ldr	r0, [pc, #440]	; (8004a34 <acc_calibration_a121_calibrate+0xfe8>)
 800487c:	f7fc f864 	bl	8000948 <acc_diagnostic_log_array.constprop.0>
 8004880:	4648      	mov	r0, r9
 8004882:	f44f 7158 	mov.w	r1, #864	; 0x360
 8004886:	f7fc f8af 	bl	80009e8 <acc_diagnostic_log_data_u16>
 800488a:	e9cd 7400 	strd	r7, r4, [sp]
 800488e:	ab0a      	add	r3, sp, #40	; 0x28
 8004890:	aa44      	add	r2, sp, #272	; 0x110
 8004892:	f240 111f 	movw	r1, #287	; 0x11f
 8004896:	f208 3002 	addw	r0, r8, #770	; 0x302
 800489a:	f7fb ff5f 	bl	800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>
 800489e:	2800      	cmp	r0, #0
 80048a0:	f43f a92c 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 80048a4:	ab14      	add	r3, sp, #80	; 0x50
 80048a6:	9301      	str	r3, [sp, #4]
 80048a8:	ab0c      	add	r3, sp, #48	; 0x30
 80048aa:	9300      	str	r3, [sp, #0]
 80048ac:	aa44      	add	r2, sp, #272	; 0x110
 80048ae:	ab09      	add	r3, sp, #36	; 0x24
 80048b0:	f44f 7190 	mov.w	r1, #288	; 0x120
 80048b4:	f508 60a8 	add.w	r0, r8, #1344	; 0x540
 80048b8:	f7fb ff50 	bl	800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>
 80048bc:	2800      	cmp	r0, #0
 80048be:	f43f a91d 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 80048c2:	e9cd 4600 	strd	r4, r6, [sp]
 80048c6:	4623      	mov	r3, r4
 80048c8:	aa44      	add	r2, sp, #272	; 0x110
 80048ca:	f508 60f0 	add.w	r0, r8, #1920	; 0x780
 80048ce:	f44f 7190 	mov.w	r1, #288	; 0x120
 80048d2:	f7fb ff43 	bl	800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>
 80048d6:	4604      	mov	r4, r0
 80048d8:	2800      	cmp	r0, #0
 80048da:	f43f a90f 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 80048de:	f8d7 e000 	ldr.w	lr, [r7]
 80048e2:	f8d6 c000 	ldr.w	ip, [r6]
 80048e6:	9f14      	ldr	r7, [sp, #80]	; 0x50
 80048e8:	980c      	ldr	r0, [sp, #48]	; 0x30
 80048ea:	4b53      	ldr	r3, [pc, #332]	; (8004a38 <acc_calibration_a121_calibrate+0xfec>)
 80048ec:	4a53      	ldr	r2, [pc, #332]	; (8004a3c <acc_calibration_a121_calibrate+0xff0>)
 80048ee:	4954      	ldr	r1, [pc, #336]	; (8004a40 <acc_calibration_a121_calibrate+0xff4>)
 80048f0:	ebac 0c07 	sub.w	ip, ip, r7
 80048f4:	e9dd 8909 	ldrd	r8, r9, [sp, #36]	; 0x24
 80048f8:	eba0 000e 	sub.w	r0, r0, lr
 80048fc:	fb03 f30c 	mul.w	r3, r3, ip
 8004900:	fb05 f707 	mul.w	r7, r5, r7
 8004904:	fb02 f200 	mul.w	r2, r2, r0
 8004908:	0c1b      	lsrs	r3, r3, #16
 800490a:	eba9 0608 	sub.w	r6, r9, r8
 800490e:	ebc3 3357 	rsb	r3, r3, r7, lsr #13
 8004912:	fb05 fe0e 	mul.w	lr, r5, lr
 8004916:	f8dd 7740 	ldr.w	r7, [sp, #1856]	; 0x740
 800491a:	0c12      	lsrs	r2, r2, #16
 800491c:	fb01 f106 	mul.w	r1, r1, r6
 8004920:	ebc2 3e5e 	rsb	lr, r2, lr, lsr #13
 8004924:	fb05 f200 	mul.w	r2, r5, r0
 8004928:	fb05 f808 	mul.w	r8, r5, r8
 800492c:	0c09      	lsrs	r1, r1, #16
 800492e:	e9c7 e21b 	strd	lr, r2, [r7, #108]	; 0x6c
 8004932:	fb05 f606 	mul.w	r6, r5, r6
 8004936:	ebc1 3158 	rsb	r1, r1, r8, lsr #13
 800493a:	fb05 f50c 	mul.w	r5, r5, ip
 800493e:	4841      	ldr	r0, [pc, #260]	; (8004a44 <acc_calibration_a121_calibrate+0xff8>)
 8004940:	e9c7 351d 	strd	r3, r5, [r7, #116]	; 0x74
 8004944:	e9c7 1619 	strd	r1, r6, [r7, #100]	; 0x64
 8004948:	1e7d      	subs	r5, r7, #1
 800494a:	f107 0687 	add.w	r6, r7, #135	; 0x87
 800494e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8004952:	f815 2f01 	ldrb.w	r2, [r5, #1]!
 8004956:	4053      	eors	r3, r2
 8004958:	2208      	movs	r2, #8
 800495a:	07df      	lsls	r7, r3, #31
 800495c:	bf4c      	ite	mi
 800495e:	ea80 0353 	eormi.w	r3, r0, r3, lsr #1
 8004962:	085b      	lsrpl	r3, r3, #1
 8004964:	3a01      	subs	r2, #1
 8004966:	d1f8      	bne.n	800495a <acc_calibration_a121_calibrate+0xf0e>
 8004968:	42ae      	cmp	r6, r5
 800496a:	d1f2      	bne.n	8004952 <acc_calibration_a121_calibrate+0xf06>
 800496c:	f8dd 2740 	ldr.w	r2, [sp, #1856]	; 0x740
 8004970:	4835      	ldr	r0, [pc, #212]	; (8004a48 <acc_calibration_a121_calibrate+0xffc>)
 8004972:	43db      	mvns	r3, r3
 8004974:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8004978:	f7fc f83e 	bl	80009f8 <acc_diagnostic_log_scalar>
 800497c:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004980:	4832      	ldr	r0, [pc, #200]	; (8004a4c <acc_calibration_a121_calibrate+0x1000>)
 8004982:	6e99      	ldr	r1, [r3, #104]	; 0x68
 8004984:	f7fc f838 	bl	80009f8 <acc_diagnostic_log_scalar>
 8004988:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 800498c:	4830      	ldr	r0, [pc, #192]	; (8004a50 <acc_calibration_a121_calibrate+0x1004>)
 800498e:	6ed9      	ldr	r1, [r3, #108]	; 0x6c
 8004990:	f7fc f832 	bl	80009f8 <acc_diagnostic_log_scalar>
 8004994:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004998:	482e      	ldr	r0, [pc, #184]	; (8004a54 <acc_calibration_a121_calibrate+0x1008>)
 800499a:	6f19      	ldr	r1, [r3, #112]	; 0x70
 800499c:	f7fc f82c 	bl	80009f8 <acc_diagnostic_log_scalar>
 80049a0:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 80049a4:	482c      	ldr	r0, [pc, #176]	; (8004a58 <acc_calibration_a121_calibrate+0x100c>)
 80049a6:	6f59      	ldr	r1, [r3, #116]	; 0x74
 80049a8:	f7fc f826 	bl	80009f8 <acc_diagnostic_log_scalar>
 80049ac:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 80049b0:	482a      	ldr	r0, [pc, #168]	; (8004a5c <acc_calibration_a121_calibrate+0x1010>)
 80049b2:	6f99      	ldr	r1, [r3, #120]	; 0x78
 80049b4:	f7fc f820 	bl	80009f8 <acc_diagnostic_log_scalar>
 80049b8:	230a      	movs	r3, #10
 80049ba:	f7ff b8a9 	b.w	8003b10 <acc_calibration_a121_calibrate+0xc4>
 80049be:	f503 23c9 	add.w	r3, r3, #411648	; 0x64800
 80049c2:	337e      	adds	r3, #126	; 0x7e
 80049c4:	4543      	cmp	r3, r8
 80049c6:	dbfa      	blt.n	80049be <acc_calibration_a121_calibrate+0xf72>
 80049c8:	f7ff bb85 	b.w	80040d6 <acc_calibration_a121_calibrate+0x68a>
 80049cc:	280b      	cmp	r0, #11
 80049ce:	f63f abcf 	bhi.w	8004170 <acc_calibration_a121_calibrate+0x724>
 80049d2:	3301      	adds	r3, #1
 80049d4:	2b30      	cmp	r3, #48	; 0x30
 80049d6:	f43f a891 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 80049da:	4610      	mov	r0, r2
 80049dc:	1e5a      	subs	r2, r3, #1
 80049de:	4432      	add	r2, r6
 80049e0:	1c59      	adds	r1, r3, #1
 80049e2:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 80049e6:	1e4b      	subs	r3, r1, #1
 80049e8:	b135      	cbz	r5, 80049f8 <acc_calibration_a121_calibrate+0xfac>
 80049ea:	f812 5c01 	ldrb.w	r5, [r2, #-1]
 80049ee:	b91d      	cbnz	r5, 80049f8 <acc_calibration_a121_calibrate+0xfac>
 80049f0:	461d      	mov	r5, r3
 80049f2:	2001      	movs	r0, #1
 80049f4:	f7ff bbb9 	b.w	800416a <acc_calibration_a121_calibrate+0x71e>
 80049f8:	2930      	cmp	r1, #48	; 0x30
 80049fa:	f000 81da 	beq.w	8004db2 <acc_calibration_a121_calibrate+0x1366>
 80049fe:	3101      	adds	r1, #1
 8004a00:	e7ef      	b.n	80049e2 <acc_calibration_a121_calibrate+0xf96>
 8004a02:	bf00      	nop
 8004a04:	0800b008 	.word	0x0800b008
 8004a08:	2aaaaaab 	.word	0x2aaaaaab
 8004a0c:	0800b034 	.word	0x0800b034
 8004a10:	0800b060 	.word	0x0800b060
 8004a14:	0800b07c 	.word	0x0800b07c
 8004a18:	0800b094 	.word	0x0800b094
 8004a1c:	00010aaa 	.word	0x00010aaa
 8004a20:	00042aa8 	.word	0x00042aa8
 8004a24:	0800b0a8 	.word	0x0800b0a8
 8004a28:	0800b0bc 	.word	0x0800b0bc
 8004a2c:	0800b0d0 	.word	0x0800b0d0
 8004a30:	0800b0e0 	.word	0x0800b0e0
 8004a34:	0800b0f8 	.word	0x0800b0f8
 8004a38:	000b754e 	.word	0x000b754e
 8004a3c:	00074aa6 	.word	0x00074aa6
 8004a40:	00021554 	.word	0x00021554
 8004a44:	edb88320 	.word	0xedb88320
 8004a48:	0800b10c 	.word	0x0800b10c
 8004a4c:	0800b120 	.word	0x0800b120
 8004a50:	0800b134 	.word	0x0800b134
 8004a54:	0800b148 	.word	0x0800b148
 8004a58:	0800b15c 	.word	0x0800b15c
 8004a5c:	0800b174 	.word	0x0800b174
 8004a60:	427c0000 	.word	0x427c0000
 8004a64:	f44f 7378 	mov.w	r3, #992	; 0x3e0
 8004a68:	e5a6      	b.n	80045b8 <acc_calibration_a121_calibrate+0xb6c>
 8004a6a:	ed1f 7a03 	vldr	s14, [pc, #-12]	; 8004a60 <acc_calibration_a121_calibrate+0x1014>
 8004a6e:	eef4 6ac7 	vcmpe.f32	s13, s14
 8004a72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004a76:	f04f 011f 	mov.w	r1, #31
 8004a7a:	f73f ad89 	bgt.w	8004590 <acc_calibration_a121_calibrate+0xb44>
 8004a7e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8004a82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004a86:	f53f ad87 	bmi.w	8004598 <acc_calibration_a121_calibrate+0xb4c>
 8004a8a:	eefc 6ae6 	vcvt.u32.f32	s13, s13
 8004a8e:	ee16 3a90 	vmov	r3, s13
 8004a92:	b29b      	uxth	r3, r3
 8004a94:	ea41 2383 	orr.w	r3, r1, r3, lsl #10
 8004a98:	b219      	sxth	r1, r3
 8004a9a:	e57d      	b.n	8004598 <acc_calibration_a121_calibrate+0xb4c>
 8004a9c:	4240      	negs	r0, r0
 8004a9e:	0980      	lsrs	r0, r0, #6
 8004aa0:	f640 5394 	movw	r3, #3476	; 0xd94
 8004aa4:	fb03 f000 	mul.w	r0, r3, r0
 8004aa8:	0d40      	lsrs	r0, r0, #21
 8004aaa:	fb05 f000 	mul.w	r0, r5, r0
 8004aae:	eba9 2010 	sub.w	r0, r9, r0, lsr #8
 8004ab2:	f8cb 0000 	str.w	r0, [fp]
 8004ab6:	e451      	b.n	800435c <acc_calibration_a121_calibrate+0x910>
 8004ab8:	f1ce 0e00 	rsb	lr, lr, #0
 8004abc:	fa1f fe8e 	uxth.w	lr, lr
 8004ac0:	f1be 0f1f 	cmp.w	lr, #31
 8004ac4:	f63f a81a 	bhi.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8004ac8:	f04e 0520 	orr.w	r5, lr, #32
 8004acc:	f7ff ba49 	b.w	8003f62 <acc_calibration_a121_calibrate+0x516>
 8004ad0:	46de      	mov	lr, fp
 8004ad2:	9103      	str	r1, [sp, #12]
 8004ad4:	469b      	mov	fp, r3
 8004ad6:	e5c0      	b.n	800465a <acc_calibration_a121_calibrate+0xc0e>
 8004ad8:	ebb7 0f9b 	cmp.w	r7, fp, lsr #2
 8004adc:	f4bf a80e 	bcs.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8004ae0:	9e03      	ldr	r6, [sp, #12]
 8004ae2:	48c6      	ldr	r0, [pc, #792]	; (8004dfc <acc_calibration_a121_calibrate+0x13b0>)
 8004ae4:	4631      	mov	r1, r6
 8004ae6:	f7fb ff87 	bl	80009f8 <acc_diagnostic_log_scalar>
 8004aea:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004aee:	48c4      	ldr	r0, [pc, #784]	; (8004e00 <acc_calibration_a121_calibrate+0x13b4>)
 8004af0:	841e      	strh	r6, [r3, #32]
 8004af2:	f7fb ff89 	bl	8000a08 <acc_diagnostic_log_set_scope>
 8004af6:	4ac3      	ldr	r2, [pc, #780]	; (8004e04 <acc_calibration_a121_calibrate+0x13b8>)
 8004af8:	49c3      	ldr	r1, [pc, #780]	; (8004e08 <acc_calibration_a121_calibrate+0x13bc>)
 8004afa:	9600      	str	r6, [sp, #0]
 8004afc:	230b      	movs	r3, #11
 8004afe:	4620      	mov	r0, r4
 8004b00:	f7fe fd0c 	bl	800351c <acc_confprogram_live_patch.constprop.0>
 8004b04:	2300      	movs	r3, #0
 8004b06:	4abf      	ldr	r2, [pc, #764]	; (8004e04 <acc_calibration_a121_calibrate+0x13b8>)
 8004b08:	49bf      	ldr	r1, [pc, #764]	; (8004e08 <acc_calibration_a121_calibrate+0x13bc>)
 8004b0a:	9300      	str	r3, [sp, #0]
 8004b0c:	4620      	mov	r0, r4
 8004b0e:	2309      	movs	r3, #9
 8004b10:	f7fe fd04 	bl	800351c <acc_confprogram_live_patch.constprop.0>
 8004b14:	237e      	movs	r3, #126	; 0x7e
 8004b16:	4abb      	ldr	r2, [pc, #748]	; (8004e04 <acc_calibration_a121_calibrate+0x13b8>)
 8004b18:	49bb      	ldr	r1, [pc, #748]	; (8004e08 <acc_calibration_a121_calibrate+0x13bc>)
 8004b1a:	9300      	str	r3, [sp, #0]
 8004b1c:	4620      	mov	r0, r4
 8004b1e:	230a      	movs	r3, #10
 8004b20:	f7fe fcfc 	bl	800351c <acc_confprogram_live_patch.constprop.0>
 8004b24:	4620      	mov	r0, r4
 8004b26:	f240 4152 	movw	r1, #1106	; 0x452
 8004b2a:	f7fc faf7 	bl	800111c <acc_sensor_protocol_a121_run_program>
 8004b2e:	4604      	mov	r4, r0
 8004b30:	462b      	mov	r3, r5
 8004b32:	2c00      	cmp	r4, #0
 8004b34:	f47e afec 	bne.w	8003b10 <acc_calibration_a121_calibrate+0xc4>
 8004b38:	f7fe bfe0 	b.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8004b3c:	4620      	mov	r0, r4
 8004b3e:	8e35      	ldrh	r5, [r6, #48]	; 0x30
 8004b40:	f7fc fb1a 	bl	8001178 <acc_sensor_protocol_a121_prepare_load>
 8004b44:	2800      	cmp	r0, #0
 8004b46:	f43e afd9 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8004b4a:	9b04      	ldr	r3, [sp, #16]
 8004b4c:	f8df 92b4 	ldr.w	r9, [pc, #692]	; 8004e04 <acc_calibration_a121_calibrate+0x13b8>
 8004b50:	f8dd 8740 	ldr.w	r8, [sp, #1856]	; 0x740
 8004b54:	085b      	lsrs	r3, r3, #1
 8004b56:	086d      	lsrs	r5, r5, #1
 8004b58:	42ab      	cmp	r3, r5
 8004b5a:	bf28      	it	cs
 8004b5c:	462b      	movcs	r3, r5
 8004b5e:	3b02      	subs	r3, #2
 8004b60:	f023 0301 	bic.w	r3, r3, #1
 8004b64:	9304      	str	r3, [sp, #16]
 8004b66:	fa1f fa83 	uxth.w	sl, r3
 8004b6a:	9b03      	ldr	r3, [sp, #12]
 8004b6c:	ee08 4a10 	vmov	s16, r4
 8004b70:	f640 3b4a 	movw	fp, #2890	; 0xb4a
 8004b74:	1d1f      	adds	r7, r3, #4
 8004b76:	2500      	movs	r5, #0
 8004b78:	9b04      	ldr	r3, [sp, #16]
 8004b7a:	f5c5 6434 	rsb	r4, r5, #2880	; 0xb40
 8004b7e:	340a      	adds	r4, #10
 8004b80:	42a3      	cmp	r3, r4
 8004b82:	bf8c      	ite	hi
 8004b84:	465c      	movhi	r4, fp
 8004b86:	4654      	movls	r4, sl
 8004b88:	4b9f      	ldr	r3, [pc, #636]	; (8004e08 <acc_calibration_a121_calibrate+0x13bc>)
 8004b8a:	086e      	lsrs	r6, r5, #1
 8004b8c:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8004b90:	0862      	lsrs	r2, r4, #1
 8004b92:	4639      	mov	r1, r7
 8004b94:	f7fc f810 	bl	8000bb8 <acc_confprogram_copy>
 8004b98:	f8b8 307e 	ldrh.w	r3, [r8, #126]	; 0x7e
 8004b9c:	9301      	str	r3, [sp, #4]
 8004b9e:	221c      	movs	r2, #28
 8004ba0:	9200      	str	r2, [sp, #0]
 8004ba2:	464b      	mov	r3, r9
 8004ba4:	4622      	mov	r2, r4
 8004ba6:	4629      	mov	r1, r5
 8004ba8:	4638      	mov	r0, r7
 8004baa:	f7fc f909 	bl	8000dc0 <acc_confprogram_patch_offset>
 8004bae:	2800      	cmp	r0, #0
 8004bb0:	f43e afa4 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8004bb4:	f8b8 3080 	ldrh.w	r3, [r8, #128]	; 0x80
 8004bb8:	9301      	str	r3, [sp, #4]
 8004bba:	231a      	movs	r3, #26
 8004bbc:	9300      	str	r3, [sp, #0]
 8004bbe:	4622      	mov	r2, r4
 8004bc0:	464b      	mov	r3, r9
 8004bc2:	4629      	mov	r1, r5
 8004bc4:	4638      	mov	r0, r7
 8004bc6:	f7fc f8fb 	bl	8000dc0 <acc_confprogram_patch_offset>
 8004bca:	4684      	mov	ip, r0
 8004bcc:	f04f 0e1b 	mov.w	lr, #27
 8004bd0:	464b      	mov	r3, r9
 8004bd2:	4622      	mov	r2, r4
 8004bd4:	4629      	mov	r1, r5
 8004bd6:	4638      	mov	r0, r7
 8004bd8:	f1bc 0f00 	cmp.w	ip, #0
 8004bdc:	f43e af8e 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8004be0:	f8b8 c082 	ldrh.w	ip, [r8, #130]	; 0x82
 8004be4:	e9cd ec00 	strd	lr, ip, [sp]
 8004be8:	f7fc f8ea 	bl	8000dc0 <acc_confprogram_patch_offset>
 8004bec:	4684      	mov	ip, r0
 8004bee:	f04f 0e19 	mov.w	lr, #25
 8004bf2:	464b      	mov	r3, r9
 8004bf4:	4622      	mov	r2, r4
 8004bf6:	4629      	mov	r1, r5
 8004bf8:	4638      	mov	r0, r7
 8004bfa:	f1bc 0f00 	cmp.w	ip, #0
 8004bfe:	f43e af7d 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8004c02:	f8b8 c084 	ldrh.w	ip, [r8, #132]	; 0x84
 8004c06:	e9cd ec00 	strd	lr, ip, [sp]
 8004c0a:	f7fc f8d9 	bl	8000dc0 <acc_confprogram_patch_offset>
 8004c0e:	4684      	mov	ip, r0
 8004c10:	9a03      	ldr	r2, [sp, #12]
 8004c12:	ee18 0a10 	vmov	r0, s16
 8004c16:	4623      	mov	r3, r4
 8004c18:	4631      	mov	r1, r6
 8004c1a:	f1bc 0f00 	cmp.w	ip, #0
 8004c1e:	f43e af6d 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8004c22:	4455      	add	r5, sl
 8004c24:	f7fc faea 	bl	80011fc <acc_sensor_a121_load_confmem>
 8004c28:	b2ad      	uxth	r5, r5
 8004c2a:	f640 3349 	movw	r3, #2889	; 0xb49
 8004c2e:	429d      	cmp	r5, r3
 8004c30:	ebab 0b0a 	sub.w	fp, fp, sl
 8004c34:	f200 80a7 	bhi.w	8004d86 <acc_calibration_a121_calibrate+0x133a>
 8004c38:	fa1f fb8b 	uxth.w	fp, fp
 8004c3c:	e79c      	b.n	8004b78 <acc_calibration_a121_calibrate+0x112c>
 8004c3e:	ee17 4a90 	vmov	r4, s15
 8004c42:	f1b8 0f00 	cmp.w	r8, #0
 8004c46:	f43e af59 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8004c4a:	f080 0330 	eor.w	r3, r0, #48	; 0x30
 8004c4e:	4619      	mov	r1, r3
 8004c50:	486e      	ldr	r0, [pc, #440]	; (8004e0c <acc_calibration_a121_calibrate+0x13c0>)
 8004c52:	9305      	str	r3, [sp, #20]
 8004c54:	461e      	mov	r6, r3
 8004c56:	f7fb fecf 	bl	80009f8 <acc_diagnostic_log_scalar>
 8004c5a:	f8dd 2740 	ldr.w	r2, [sp, #1856]	; 0x740
 8004c5e:	486c      	ldr	r0, [pc, #432]	; (8004e10 <acc_calibration_a121_calibrate+0x13c4>)
 8004c60:	8096      	strh	r6, [r2, #4]
 8004c62:	f7fb fed1 	bl	8000a08 <acc_diagnostic_log_set_scope>
 8004c66:	4621      	mov	r1, r4
 8004c68:	486a      	ldr	r0, [pc, #424]	; (8004e14 <acc_calibration_a121_calibrate+0x13c8>)
 8004c6a:	f7fb fec5 	bl	80009f8 <acc_diagnostic_log_scalar>
 8004c6e:	486a      	ldr	r0, [pc, #424]	; (8004e18 <acc_calibration_a121_calibrate+0x13cc>)
 8004c70:	f7fb fe6a 	bl	8000948 <acc_diagnostic_log_array.constprop.0>
 8004c74:	9e07      	ldr	r6, [sp, #28]
 8004c76:	2130      	movs	r1, #48	; 0x30
 8004c78:	4630      	mov	r0, r6
 8004c7a:	f7fb feb5 	bl	80009e8 <acc_diagnostic_log_data_u16>
 8004c7e:	f8dd 9018 	ldr.w	r9, [sp, #24]
 8004c82:	4866      	ldr	r0, [pc, #408]	; (8004e1c <acc_calibration_a121_calibrate+0x13d0>)
 8004c84:	4649      	mov	r1, r9
 8004c86:	f7fb feb7 	bl	80009f8 <acc_diagnostic_log_scalar>
 8004c8a:	8c69      	ldrh	r1, [r5, #34]	; 0x22
 8004c8c:	f8b5 3080 	ldrh.w	r3, [r5, #128]	; 0x80
 8004c90:	1a5b      	subs	r3, r3, r1
 8004c92:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8004c96:	f6fe af31 	blt.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8004c9a:	4a61      	ldr	r2, [pc, #388]	; (8004e20 <acc_calibration_a121_calibrate+0x13d4>)
 8004c9c:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8004ca0:	fba2 3a0a 	umull	r3, sl, r2, sl
 8004ca4:	2000      	movs	r0, #0
 8004ca6:	ee07 4a90 	vmov	s15, r4
 8004caa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8004cae:	4607      	mov	r7, r0
 8004cb0:	468b      	mov	fp, r1
 8004cb2:	2210      	movs	r2, #16
 8004cb4:	f64f 7eff 	movw	lr, #65535	; 0xffff
 8004cb8:	46cc      	mov	ip, r9
 8004cba:	e00a      	b.n	8004cd2 <acc_calibration_a121_calibrate+0x1286>
 8004cbc:	42a5      	cmp	r5, r4
 8004cbe:	bf88      	it	hi
 8004cc0:	f04f 0800 	movhi.w	r8, #0
 8004cc4:	3201      	adds	r2, #1
 8004cc6:	b292      	uxth	r2, r2
 8004cc8:	2a40      	cmp	r2, #64	; 0x40
 8004cca:	4450      	add	r0, sl
 8004ccc:	d01b      	beq.n	8004d06 <acc_calibration_a121_calibrate+0x12ba>
 8004cce:	f836 1f02 	ldrh.w	r1, [r6, #2]!
 8004cd2:	eba1 030c 	sub.w	r3, r1, ip
 8004cd6:	2b00      	cmp	r3, #0
 8004cd8:	bfb8      	it	lt
 8004cda:	425b      	neglt	r3, r3
 8004cdc:	b29b      	uxth	r3, r3
 8004cde:	eb0b 4510 	add.w	r5, fp, r0, lsr #16
 8004ce2:	4573      	cmp	r3, lr
 8004ce4:	f505 7948 	add.w	r9, r5, #800	; 0x320
 8004ce8:	bf3c      	itt	cc
 8004cea:	469e      	movcc	lr, r3
 8004cec:	4617      	movcc	r7, r2
 8004cee:	4549      	cmp	r1, r9
 8004cf0:	f501 7448 	add.w	r4, r1, #800	; 0x320
 8004cf4:	d9e2      	bls.n	8004cbc <acc_calibration_a121_calibrate+0x1270>
 8004cf6:	f04f 0800 	mov.w	r8, #0
 8004cfa:	e7e3      	b.n	8004cc4 <acc_calibration_a121_calibrate+0x1278>
 8004cfc:	459c      	cmp	ip, r3
 8004cfe:	f47f a926 	bne.w	8003f4e <acc_calibration_a121_calibrate+0x502>
 8004d02:	f7fe befb 	b.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8004d06:	ee17 4a90 	vmov	r4, s15
 8004d0a:	f1b8 0f00 	cmp.w	r8, #0
 8004d0e:	f43e aef5 	beq.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8004d12:	4639      	mov	r1, r7
 8004d14:	4843      	ldr	r0, [pc, #268]	; (8004e24 <acc_calibration_a121_calibrate+0x13d8>)
 8004d16:	f7fb fe6f 	bl	80009f8 <acc_diagnostic_log_scalar>
 8004d1a:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004d1e:	4842      	ldr	r0, [pc, #264]	; (8004e28 <acc_calibration_a121_calibrate+0x13dc>)
 8004d20:	815f      	strh	r7, [r3, #10]
 8004d22:	f7fb fe71 	bl	8000a08 <acc_diagnostic_log_set_scope>
 8004d26:	2301      	movs	r3, #1
 8004d28:	e9dd 1203 	ldrd	r1, r2, [sp, #12]
 8004d2c:	4620      	mov	r0, r4
 8004d2e:	9300      	str	r3, [sp, #0]
 8004d30:	f44f 557e 	mov.w	r5, #16256	; 0x3f80
 8004d34:	ab44      	add	r3, sp, #272	; 0x110
 8004d36:	f8ad 5110 	strh.w	r5, [sp, #272]	; 0x110
 8004d3a:	f7fe f8db 	bl	8002ef4 <acc_sensor_a121_lut_buffer_write.constprop.0>
 8004d3e:	4a31      	ldr	r2, [pc, #196]	; (8004e04 <acc_calibration_a121_calibrate+0x13b8>)
 8004d40:	4931      	ldr	r1, [pc, #196]	; (8004e08 <acc_calibration_a121_calibrate+0x13bc>)
 8004d42:	9700      	str	r7, [sp, #0]
 8004d44:	2326      	movs	r3, #38	; 0x26
 8004d46:	4620      	mov	r0, r4
 8004d48:	f7fe fbe8 	bl	800351c <acc_confprogram_live_patch.constprop.0>
 8004d4c:	9b05      	ldr	r3, [sp, #20]
 8004d4e:	4a2d      	ldr	r2, [pc, #180]	; (8004e04 <acc_calibration_a121_calibrate+0x13b8>)
 8004d50:	492d      	ldr	r1, [pc, #180]	; (8004e08 <acc_calibration_a121_calibrate+0x13bc>)
 8004d52:	9300      	str	r3, [sp, #0]
 8004d54:	4620      	mov	r0, r4
 8004d56:	2324      	movs	r3, #36	; 0x24
 8004d58:	f7fe fbe0 	bl	800351c <acc_confprogram_live_patch.constprop.0>
 8004d5c:	4620      	mov	r0, r4
 8004d5e:	f240 21c5 	movw	r1, #709	; 0x2c5
 8004d62:	f7fc f9db 	bl	800111c <acc_sensor_protocol_a121_run_program>
 8004d66:	4604      	mov	r4, r0
 8004d68:	2303      	movs	r3, #3
 8004d6a:	2c00      	cmp	r4, #0
 8004d6c:	f47e aed0 	bne.w	8003b10 <acc_calibration_a121_calibrate+0xc4>
 8004d70:	f7fe bec4 	b.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8004d74:	2703      	movs	r7, #3
 8004d76:	f04f 0801 	mov.w	r8, #1
 8004d7a:	2600      	movs	r6, #0
 8004d7c:	f7ff ba27 	b.w	80041ce <acc_calibration_a121_calibrate+0x782>
 8004d80:	46d6      	mov	lr, sl
 8004d82:	f7ff b8e4 	b.w	8003f4e <acc_calibration_a121_calibrate+0x502>
 8004d86:	ee18 0a10 	vmov	r0, s16
 8004d8a:	f240 115b 	movw	r1, #347	; 0x15b
 8004d8e:	f7fc f9c5 	bl	800111c <acc_sensor_protocol_a121_run_program>
 8004d92:	4604      	mov	r4, r0
 8004d94:	2301      	movs	r3, #1
 8004d96:	2c00      	cmp	r4, #0
 8004d98:	f47e aeba 	bne.w	8003b10 <acc_calibration_a121_calibrate+0xc4>
 8004d9c:	f7fe beae 	b.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8004da0:	1ffb      	subs	r3, r7, #7
 8004da2:	2f17      	cmp	r7, #23
 8004da4:	bf88      	it	hi
 8004da6:	f1c3 0220 	rsbhi	r2, r3, #32
 8004daa:	f63e afe6 	bhi.w	8003d7a <acc_calibration_a121_calibrate+0x32e>
 8004dae:	f7fe bfe1 	b.w	8003d74 <acc_calibration_a121_calibrate+0x328>
 8004db2:	f1a0 030c 	sub.w	r3, r0, #12
 8004db6:	2b08      	cmp	r3, #8
 8004db8:	f63e aea0 	bhi.w	8003afc <acc_calibration_a121_calibrate+0xb0>
 8004dbc:	0845      	lsrs	r5, r0, #1
 8004dbe:	f7ff b9e3 	b.w	8004188 <acc_calibration_a121_calibrate+0x73c>
 8004dc2:	2300      	movs	r3, #0
 8004dc4:	ee17 4a90 	vmov	r4, s15
 8004dc8:	4656      	mov	r6, sl
 8004dca:	9303      	str	r3, [sp, #12]
 8004dcc:	f64f 78ff 	movw	r8, #65535	; 0xffff
 8004dd0:	f7ff baeb 	b.w	80043aa <acc_calibration_a121_calibrate+0x95e>
 8004dd4:	ab44      	add	r3, sp, #272	; 0x110
 8004dd6:	9304      	str	r3, [sp, #16]
 8004dd8:	f7fe bff5 	b.w	8003dc6 <acc_calibration_a121_calibrate+0x37a>
 8004ddc:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 8004de0:	ee17 3a10 	vmov	r3, s14
 8004de4:	b219      	sxth	r1, r3
 8004de6:	f7ff bbcb 	b.w	8004580 <acc_calibration_a121_calibrate+0xb34>
 8004dea:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004dee:	ee17 2a90 	vmov	r2, s15
 8004df2:	f342 020a 	sbfx	r2, r2, #0, #11
 8004df6:	0153      	lsls	r3, r2, #5
 8004df8:	f7ff bbde 	b.w	80045b8 <acc_calibration_a121_calibrate+0xb6c>
 8004dfc:	0800b1e4 	.word	0x0800b1e4
 8004e00:	0800b1f4 	.word	0x0800b1f4
 8004e04:	080086f0 	.word	0x080086f0
 8004e08:	08008b6c 	.word	0x08008b6c
 8004e0c:	0800ae6c 	.word	0x0800ae6c
 8004e10:	0800ae78 	.word	0x0800ae78
 8004e14:	0800add0 	.word	0x0800add0
 8004e18:	0800ae90 	.word	0x0800ae90
 8004e1c:	0800aea4 	.word	0x0800aea4
 8004e20:	aaaaaaab 	.word	0xaaaaaaab
 8004e24:	0800aeb0 	.word	0x0800aeb0
 8004e28:	0800aebc 	.word	0x0800aebc

08004e2c <test_sensor_calibration>:
 8004e2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004e30:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8004e32:	b087      	sub	sp, #28
 8004e34:	b1f3      	cbz	r3, 8004e74 <test_sensor_calibration+0x48>
 8004e36:	2b01      	cmp	r3, #1
 8004e38:	4604      	mov	r4, r0
 8004e3a:	d02c      	beq.n	8004e96 <test_sensor_calibration+0x6a>
 8004e3c:	6e05      	ldr	r5, [r0, #96]	; 0x60
 8004e3e:	b125      	cbz	r5, 8004e4a <test_sensor_calibration+0x1e>
 8004e40:	4b7f      	ldr	r3, [pc, #508]	; (8005040 <test_sensor_calibration+0x214>)
 8004e42:	682a      	ldr	r2, [r5, #0]
 8004e44:	429a      	cmp	r2, r3
 8004e46:	f000 809a 	beq.w	8004f7e <test_sensor_calibration+0x152>
 8004e4a:	f8df 8208 	ldr.w	r8, [pc, #520]	; 8005054 <test_sensor_calibration+0x228>
 8004e4e:	4a7d      	ldr	r2, [pc, #500]	; (8005044 <test_sensor_calibration+0x218>)
 8004e50:	f8d8 3040 	ldr.w	r3, [r8, #64]	; 0x40
 8004e54:	497c      	ldr	r1, [pc, #496]	; (8005048 <test_sensor_calibration+0x21c>)
 8004e56:	2000      	movs	r0, #0
 8004e58:	4798      	blx	r3
 8004e5a:	f8d8 3040 	ldr.w	r3, [r8, #64]	; 0x40
 8004e5e:	4a7b      	ldr	r2, [pc, #492]	; (800504c <test_sensor_calibration+0x220>)
 8004e60:	497b      	ldr	r1, [pc, #492]	; (8005050 <test_sensor_calibration+0x224>)
 8004e62:	2000      	movs	r0, #0
 8004e64:	4798      	blx	r3
 8004e66:	6e20      	ldr	r0, [r4, #96]	; 0x60
 8004e68:	f7fc fdda 	bl	8001a20 <acc_sensor_destroy>
 8004e6c:	2004      	movs	r0, #4
 8004e6e:	b007      	add	sp, #28
 8004e70:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004e74:	4b77      	ldr	r3, [pc, #476]	; (8005054 <test_sensor_calibration+0x228>)
 8004e76:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 8004e7a:	2a01      	cmp	r2, #1
 8004e7c:	d904      	bls.n	8004e88 <test_sensor_calibration+0x5c>
 8004e7e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e80:	4a75      	ldr	r2, [pc, #468]	; (8005058 <test_sensor_calibration+0x22c>)
 8004e82:	4973      	ldr	r1, [pc, #460]	; (8005050 <test_sensor_calibration+0x224>)
 8004e84:	2002      	movs	r0, #2
 8004e86:	4798      	blx	r3
 8004e88:	4874      	ldr	r0, [pc, #464]	; (800505c <test_sensor_calibration+0x230>)
 8004e8a:	f7fb fdbd 	bl	8000a08 <acc_diagnostic_log_set_scope>
 8004e8e:	2001      	movs	r0, #1
 8004e90:	b007      	add	sp, #28
 8004e92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004e96:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8005054 <test_sensor_calibration+0x228>
 8004e9a:	f898 3048 	ldrb.w	r3, [r8, #72]	; 0x48
 8004e9e:	2b01      	cmp	r3, #1
 8004ea0:	d905      	bls.n	8004eae <test_sensor_calibration+0x82>
 8004ea2:	f8d8 3040 	ldr.w	r3, [r8, #64]	; 0x40
 8004ea6:	4a6e      	ldr	r2, [pc, #440]	; (8005060 <test_sensor_calibration+0x234>)
 8004ea8:	4969      	ldr	r1, [pc, #420]	; (8005050 <test_sensor_calibration+0x224>)
 8004eaa:	2002      	movs	r0, #2
 8004eac:	4798      	blx	r3
 8004eae:	4966      	ldr	r1, [pc, #408]	; (8005048 <test_sensor_calibration+0x21c>)
 8004eb0:	f8d4 9000 	ldr.w	r9, [r4]
 8004eb4:	223b      	movs	r2, #59	; 0x3b
 8004eb6:	2014      	movs	r0, #20
 8004eb8:	f7fc f81e 	bl	8000ef8 <acc_rss_integration_mem_alloc_debug>
 8004ebc:	4605      	mov	r5, r0
 8004ebe:	2800      	cmp	r0, #0
 8004ec0:	f000 80b4 	beq.w	800502c <test_sensor_calibration+0x200>
 8004ec4:	2600      	movs	r6, #0
 8004ec6:	6006      	str	r6, [r0, #0]
 8004ec8:	6046      	str	r6, [r0, #4]
 8004eca:	6086      	str	r6, [r0, #8]
 8004ecc:	60c6      	str	r6, [r0, #12]
 8004ece:	6106      	str	r6, [r0, #16]
 8004ed0:	4964      	ldr	r1, [pc, #400]	; (8005064 <test_sensor_calibration+0x238>)
 8004ed2:	2273      	movs	r2, #115	; 0x73
 8004ed4:	f44f 70fe 	mov.w	r0, #508	; 0x1fc
 8004ed8:	f7fc f80e 	bl	8000ef8 <acc_rss_integration_mem_alloc_debug>
 8004edc:	4607      	mov	r7, r0
 8004ede:	2800      	cmp	r0, #0
 8004ee0:	f000 80a0 	beq.w	8005024 <test_sensor_calibration+0x1f8>
 8004ee4:	f44f 72fe 	mov.w	r2, #508	; 0x1fc
 8004ee8:	4631      	mov	r1, r6
 8004eea:	f001 fe36 	bl	8006b5a <memset>
 8004eee:	2301      	movs	r3, #1
 8004ef0:	4953      	ldr	r1, [pc, #332]	; (8005040 <test_sensor_calibration+0x214>)
 8004ef2:	f8a7 31c4 	strh.w	r3, [r7, #452]	; 0x1c4
 8004ef6:	f887 31c6 	strb.w	r3, [r7, #454]	; 0x1c6
 8004efa:	f10d 0216 	add.w	r2, sp, #22
 8004efe:	6029      	str	r1, [r5, #0]
 8004f00:	e9c5 6901 	strd	r6, r9, [r5, #4]
 8004f04:	4631      	mov	r1, r6
 8004f06:	612f      	str	r7, [r5, #16]
 8004f08:	736e      	strb	r6, [r5, #13]
 8004f0a:	4648      	mov	r0, r9
 8004f0c:	f8ad 6016 	strh.w	r6, [sp, #22]
 8004f10:	f7fc f8ee 	bl	80010f0 <acc_sensor_reg_read>
 8004f14:	4854      	ldr	r0, [pc, #336]	; (8005068 <test_sensor_calibration+0x23c>)
 8004f16:	f7fb fd77 	bl	8000a08 <acc_diagnostic_log_set_scope>
 8004f1a:	4854      	ldr	r0, [pc, #336]	; (800506c <test_sensor_calibration+0x240>)
 8004f1c:	4649      	mov	r1, r9
 8004f1e:	f7fb fd6b 	bl	80009f8 <acc_diagnostic_log_scalar>
 8004f22:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8004f26:	4850      	ldr	r0, [pc, #320]	; (8005068 <test_sensor_calibration+0x23c>)
 8004f28:	f7fb fd66 	bl	80009f8 <acc_diagnostic_log_scalar>
 8004f2c:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8004f30:	f241 2210 	movw	r2, #4624	; 0x1210
 8004f34:	4293      	cmp	r3, r2
 8004f36:	d036      	beq.n	8004fa6 <test_sensor_calibration+0x17a>
 8004f38:	4a4d      	ldr	r2, [pc, #308]	; (8005070 <test_sensor_calibration+0x244>)
 8004f3a:	494e      	ldr	r1, [pc, #312]	; (8005074 <test_sensor_calibration+0x248>)
 8004f3c:	f8d8 7040 	ldr.w	r7, [r8, #64]	; 0x40
 8004f40:	4630      	mov	r0, r6
 8004f42:	47b8      	blx	r7
 8004f44:	4628      	mov	r0, r5
 8004f46:	f7fc fd6b 	bl	8001a20 <acc_sensor_destroy>
 8004f4a:	f10d 0216 	add.w	r2, sp, #22
 8004f4e:	4648      	mov	r0, r9
 8004f50:	211c      	movs	r1, #28
 8004f52:	f8ad 6016 	strh.w	r6, [sp, #22]
 8004f56:	f7fc f8cb 	bl	80010f0 <acc_sensor_reg_read>
 8004f5a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8004f5e:	051b      	lsls	r3, r3, #20
 8004f60:	d564      	bpl.n	800502c <test_sensor_calibration+0x200>
 8004f62:	4635      	mov	r5, r6
 8004f64:	f8d8 3040 	ldr.w	r3, [r8, #64]	; 0x40
 8004f68:	4a43      	ldr	r2, [pc, #268]	; (8005078 <test_sensor_calibration+0x24c>)
 8004f6a:	4937      	ldr	r1, [pc, #220]	; (8005048 <test_sensor_calibration+0x21c>)
 8004f6c:	2000      	movs	r0, #0
 8004f6e:	4798      	blx	r3
 8004f70:	4628      	mov	r0, r5
 8004f72:	f7fc fd55 	bl	8001a20 <acc_sensor_destroy>
 8004f76:	2300      	movs	r3, #0
 8004f78:	6623      	str	r3, [r4, #96]	; 0x60
 8004f7a:	2004      	movs	r0, #4
 8004f7c:	e788      	b.n	8004e90 <test_sensor_calibration+0x64>
 8004f7e:	6841      	ldr	r1, [r0, #4]
 8004f80:	b171      	cbz	r1, 8004fa0 <test_sensor_calibration+0x174>
 8004f82:	f104 0364 	add.w	r3, r4, #100	; 0x64
 8004f86:	68a8      	ldr	r0, [r5, #8]
 8004f88:	68a2      	ldr	r2, [r4, #8]
 8004f8a:	9300      	str	r3, [sp, #0]
 8004f8c:	f105 030d 	add.w	r3, r5, #13
 8004f90:	f7fe fd5c 	bl	8003a4c <acc_calibration_a121_calibrate>
 8004f94:	b120      	cbz	r0, 8004fa0 <test_sensor_calibration+0x174>
 8004f96:	7b6b      	ldrb	r3, [r5, #13]
 8004f98:	2b0a      	cmp	r3, #10
 8004f9a:	d04b      	beq.n	8005034 <test_sensor_calibration+0x208>
 8004f9c:	2002      	movs	r0, #2
 8004f9e:	e777      	b.n	8004e90 <test_sensor_calibration+0x64>
 8004fa0:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8005054 <test_sensor_calibration+0x228>
 8004fa4:	e759      	b.n	8004e5a <test_sensor_calibration+0x2e>
 8004fa6:	4648      	mov	r0, r9
 8004fa8:	f10d 0216 	add.w	r2, sp, #22
 8004fac:	211c      	movs	r1, #28
 8004fae:	f8ad 6016 	strh.w	r6, [sp, #22]
 8004fb2:	f7fc f89d 	bl	80010f0 <acc_sensor_reg_read>
 8004fb6:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 8004fba:	f410 6600 	ands.w	r6, r0, #2048	; 0x800
 8004fbe:	d1d1      	bne.n	8004f64 <test_sensor_calibration+0x138>
 8004fc0:	68a8      	ldr	r0, [r5, #8]
 8004fc2:	f7fc f86b 	bl	800109c <acc_sensor_protocol_a121_init_interrupts>
 8004fc6:	2203      	movs	r2, #3
 8004fc8:	68a8      	ldr	r0, [r5, #8]
 8004fca:	9200      	str	r2, [sp, #0]
 8004fcc:	4631      	mov	r1, r6
 8004fce:	f240 1349 	movw	r3, #329	; 0x149
 8004fd2:	9003      	str	r0, [sp, #12]
 8004fd4:	f7fc f834 	bl	8001040 <acc_sensor_reg_field_write>
 8004fd8:	9803      	ldr	r0, [sp, #12]
 8004fda:	9600      	str	r6, [sp, #0]
 8004fdc:	f240 1349 	movw	r3, #329	; 0x149
 8004fe0:	2204      	movs	r2, #4
 8004fe2:	2102      	movs	r1, #2
 8004fe4:	f7fc f82c 	bl	8001040 <acc_sensor_reg_field_write>
 8004fe8:	9803      	ldr	r0, [sp, #12]
 8004fea:	9600      	str	r6, [sp, #0]
 8004fec:	f240 1349 	movw	r3, #329	; 0x149
 8004ff0:	2210      	movs	r2, #16
 8004ff2:	2104      	movs	r1, #4
 8004ff4:	f7fc f824 	bl	8001040 <acc_sensor_reg_field_write>
 8004ff8:	9803      	ldr	r0, [sp, #12]
 8004ffa:	9600      	str	r6, [sp, #0]
 8004ffc:	f240 1349 	movw	r3, #329	; 0x149
 8005000:	2220      	movs	r2, #32
 8005002:	2105      	movs	r1, #5
 8005004:	f7fc f81c 	bl	8001040 <acc_sensor_reg_field_write>
 8005008:	9803      	ldr	r0, [sp, #12]
 800500a:	9600      	str	r6, [sp, #0]
 800500c:	f240 1349 	movw	r3, #329	; 0x149
 8005010:	f44f 527f 	mov.w	r2, #16320	; 0x3fc0
 8005014:	2106      	movs	r1, #6
 8005016:	f7fc f813 	bl	8001040 <acc_sensor_reg_field_write>
 800501a:	4630      	mov	r0, r6
 800501c:	6625      	str	r5, [r4, #96]	; 0x60
 800501e:	b007      	add	sp, #28
 8005020:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005024:	6128      	str	r0, [r5, #16]
 8005026:	4628      	mov	r0, r5
 8005028:	f7fb ff5e 	bl	8000ee8 <acc_rss_integration_mem_free>
 800502c:	2300      	movs	r3, #0
 800502e:	6623      	str	r3, [r4, #96]	; 0x60
 8005030:	2004      	movs	r0, #4
 8005032:	e72d      	b.n	8004e90 <test_sensor_calibration+0x64>
 8005034:	6e20      	ldr	r0, [r4, #96]	; 0x60
 8005036:	f7fc fcf3 	bl	8001a20 <acc_sensor_destroy>
 800503a:	2003      	movs	r0, #3
 800503c:	e728      	b.n	8004e90 <test_sensor_calibration+0x64>
 800503e:	bf00      	nop
 8005040:	1337b00e 	.word	0x1337b00e
 8005044:	0800a804 	.word	0x0800a804
 8005048:	0800a81c 	.word	0x0800a81c
 800504c:	0800b2c4 	.word	0x0800b2c4
 8005050:	0800a574 	.word	0x0800a574
 8005054:	200000ac 	.word	0x200000ac
 8005058:	0800b214 	.word	0x0800b214
 800505c:	0800b234 	.word	0x0800b234
 8005060:	0800b24c 	.word	0x0800b24c
 8005064:	0800b26c 	.word	0x0800b26c
 8005068:	0800b280 	.word	0x0800b280
 800506c:	0800add0 	.word	0x0800add0
 8005070:	0800b288 	.word	0x0800b288
 8005074:	0800a444 	.word	0x0800a444
 8005078:	0800b2a8 	.word	0x0800b2a8

0800507c <acc_integration_log>:
 800507c:	b40c      	push	{r2, r3}
 800507e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005082:	b0ac      	sub	sp, #176	; 0xb0
 8005084:	ab32      	add	r3, sp, #200	; 0xc8
 8005086:	f10d 0818 	add.w	r8, sp, #24
 800508a:	f853 2b04 	ldr.w	r2, [r3], #4
 800508e:	9305      	str	r3, [sp, #20]
 8005090:	4606      	mov	r6, r0
 8005092:	460f      	mov	r7, r1
 8005094:	4640      	mov	r0, r8
 8005096:	2196      	movs	r1, #150	; 0x96
 8005098:	f001 ff26 	bl	8006ee8 <__wrap_vsnprintf>
 800509c:	2895      	cmp	r0, #149	; 0x95
 800509e:	dd06      	ble.n	80050ae <acc_integration_log+0x32>
 80050a0:	f642 622e 	movw	r2, #11822	; 0x2e2e
 80050a4:	232e      	movs	r3, #46	; 0x2e
 80050a6:	f8ad 20aa 	strh.w	r2, [sp, #170]	; 0xaa
 80050aa:	f8ad 30ac 	strh.w	r3, [sp, #172]	; 0xac
 80050ae:	4b1d      	ldr	r3, [pc, #116]	; (8005124 <acc_integration_log+0xa8>)
 80050b0:	4a1d      	ldr	r2, [pc, #116]	; (8005128 <acc_integration_log+0xac>)
 80050b2:	6818      	ldr	r0, [r3, #0]
 80050b4:	4d1d      	ldr	r5, [pc, #116]	; (800512c <acc_integration_log+0xb0>)
 80050b6:	4b1e      	ldr	r3, [pc, #120]	; (8005130 <acc_integration_log+0xb4>)
 80050b8:	4c1e      	ldr	r4, [pc, #120]	; (8005134 <acc_integration_log+0xb8>)
 80050ba:	fba2 1200 	umull	r1, r2, r2, r0
 80050be:	fba5 1500 	umull	r1, r5, r5, r0
 80050c2:	ea4f 3c92 	mov.w	ip, r2, lsr #14
 80050c6:	09ad      	lsrs	r5, r5, #6
 80050c8:	fba3 120c 	umull	r1, r2, r3, ip
 80050cc:	fba3 1305 	umull	r1, r3, r3, r5
 80050d0:	095b      	lsrs	r3, r3, #5
 80050d2:	fba4 1400 	umull	r1, r4, r4, r0
 80050d6:	2e04      	cmp	r6, #4
 80050d8:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80050dc:	ebc3 1303 	rsb	r3, r3, r3, lsl #4
 80050e0:	eba5 0383 	sub.w	r3, r5, r3, lsl #2
 80050e4:	fb01 0515 	mls	r5, r1, r5, r0
 80050e8:	bf98      	it	ls
 80050ea:	4813      	ldrls	r0, [pc, #76]	; (8005138 <acc_integration_log+0xbc>)
 80050ec:	ea4f 1252 	mov.w	r2, r2, lsr #5
 80050f0:	bf94      	ite	ls
 80050f2:	5d80      	ldrbls	r0, [r0, r6]
 80050f4:	203f      	movhi	r0, #63	; 0x3f
 80050f6:	ebc2 1202 	rsb	r2, r2, r2, lsl #4
 80050fa:	e9cd 5000 	strd	r5, r0, [sp]
 80050fe:	ebac 0282 	sub.w	r2, ip, r2, lsl #2
 8005102:	0d61      	lsrs	r1, r4, #21
 8005104:	e9cd 7802 	strd	r7, r8, [sp, #8]
 8005108:	480c      	ldr	r0, [pc, #48]	; (800513c <acc_integration_log+0xc0>)
 800510a:	f001 fec7 	bl	8006e9c <__wrap_printf>
 800510e:	4b0c      	ldr	r3, [pc, #48]	; (8005140 <acc_integration_log+0xc4>)
 8005110:	681b      	ldr	r3, [r3, #0]
 8005112:	6898      	ldr	r0, [r3, #8]
 8005114:	f001 fbf2 	bl	80068fc <fflush>
 8005118:	b02c      	add	sp, #176	; 0xb0
 800511a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800511e:	b002      	add	sp, #8
 8005120:	4770      	bx	lr
 8005122:	bf00      	nop
 8005124:	200000ac 	.word	0x200000ac
 8005128:	45e7b273 	.word	0x45e7b273
 800512c:	10624dd3 	.word	0x10624dd3
 8005130:	88888889 	.word	0x88888889
 8005134:	95217cb1 	.word	0x95217cb1
 8005138:	0800b308 	.word	0x0800b308
 800513c:	0800b2e4 	.word	0x0800b2e4
 8005140:	20000028 	.word	0x20000028

08005144 <HAL_UART_Transmit>:
 8005144:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005148:	4604      	mov	r4, r0
 800514a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 800514c:	2820      	cmp	r0, #32
 800514e:	d142      	bne.n	80051d6 <HAL_UART_Transmit+0x92>
 8005150:	460d      	mov	r5, r1
 8005152:	2900      	cmp	r1, #0
 8005154:	d03c      	beq.n	80051d0 <HAL_UART_Transmit+0x8c>
 8005156:	2a00      	cmp	r2, #0
 8005158:	d03a      	beq.n	80051d0 <HAL_UART_Transmit+0x8c>
 800515a:	461e      	mov	r6, r3
 800515c:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 8005160:	2b01      	cmp	r3, #1
 8005162:	d038      	beq.n	80051d6 <HAL_UART_Transmit+0x92>
 8005164:	2321      	movs	r3, #33	; 0x21
 8005166:	2700      	movs	r7, #0
 8005168:	f8c4 7080 	str.w	r7, [r4, #128]	; 0x80
 800516c:	67a3      	str	r3, [r4, #120]	; 0x78
 800516e:	68a3      	ldr	r3, [r4, #8]
 8005170:	4924      	ldr	r1, [pc, #144]	; (8005204 <HAL_UART_Transmit+0xc0>)
 8005172:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 8005176:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800517a:	f8d1 8000 	ldr.w	r8, [r1]
 800517e:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8005182:	d02b      	beq.n	80051dc <HAL_UART_Transmit+0x98>
 8005184:	f8b4 3052 	ldrh.w	r3, [r4, #82]	; 0x52
 8005188:	2200      	movs	r2, #0
 800518a:	b29b      	uxth	r3, r3
 800518c:	f884 2074 	strb.w	r2, [r4, #116]	; 0x74
 8005190:	b973      	cbnz	r3, 80051b0 <HAL_UART_Transmit+0x6c>
 8005192:	e02c      	b.n	80051ee <HAL_UART_Transmit+0xaa>
 8005194:	6823      	ldr	r3, [r4, #0]
 8005196:	f815 2b01 	ldrb.w	r2, [r5], #1
 800519a:	851a      	strh	r2, [r3, #40]	; 0x28
 800519c:	f8b4 0052 	ldrh.w	r0, [r4, #82]	; 0x52
 80051a0:	3801      	subs	r0, #1
 80051a2:	b280      	uxth	r0, r0
 80051a4:	f8a4 0052 	strh.w	r0, [r4, #82]	; 0x52
 80051a8:	f8b4 1052 	ldrh.w	r1, [r4, #82]	; 0x52
 80051ac:	b289      	uxth	r1, r1
 80051ae:	b1f1      	cbz	r1, 80051ee <HAL_UART_Transmit+0xaa>
 80051b0:	4633      	mov	r3, r6
 80051b2:	4642      	mov	r2, r8
 80051b4:	2180      	movs	r1, #128	; 0x80
 80051b6:	4620      	mov	r0, r4
 80051b8:	f7fb f836 	bl	8000228 <UART_WaitOnFlagUntilTimeout.constprop.0>
 80051bc:	b9a0      	cbnz	r0, 80051e8 <HAL_UART_Transmit+0xa4>
 80051be:	2d00      	cmp	r5, #0
 80051c0:	d1e8      	bne.n	8005194 <HAL_UART_Transmit+0x50>
 80051c2:	f837 3b02 	ldrh.w	r3, [r7], #2
 80051c6:	6822      	ldr	r2, [r4, #0]
 80051c8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80051cc:	8513      	strh	r3, [r2, #40]	; 0x28
 80051ce:	e7e5      	b.n	800519c <HAL_UART_Transmit+0x58>
 80051d0:	2001      	movs	r0, #1
 80051d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80051d6:	2002      	movs	r0, #2
 80051d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80051dc:	6923      	ldr	r3, [r4, #16]
 80051de:	2b00      	cmp	r3, #0
 80051e0:	d1d0      	bne.n	8005184 <HAL_UART_Transmit+0x40>
 80051e2:	462f      	mov	r7, r5
 80051e4:	461d      	mov	r5, r3
 80051e6:	e7cd      	b.n	8005184 <HAL_UART_Transmit+0x40>
 80051e8:	2003      	movs	r0, #3
 80051ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80051ee:	4633      	mov	r3, r6
 80051f0:	4642      	mov	r2, r8
 80051f2:	2140      	movs	r1, #64	; 0x40
 80051f4:	4620      	mov	r0, r4
 80051f6:	f7fb f817 	bl	8000228 <UART_WaitOnFlagUntilTimeout.constprop.0>
 80051fa:	2800      	cmp	r0, #0
 80051fc:	d1f4      	bne.n	80051e8 <HAL_UART_Transmit+0xa4>
 80051fe:	2320      	movs	r3, #32
 8005200:	67a3      	str	r3, [r4, #120]	; 0x78
 8005202:	e7e6      	b.n	80051d2 <HAL_UART_Transmit+0x8e>
 8005204:	200000ac 	.word	0x200000ac

08005208 <SystemInit>:
 8005208:	4a03      	ldr	r2, [pc, #12]	; (8005218 <SystemInit+0x10>)
 800520a:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 800520e:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8005212:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8005216:	4770      	bx	lr
 8005218:	e000ed00 	.word	0xe000ed00

0800521c <RTC_Alarm_IRQHandler>:
 800521c:	b510      	push	{r4, lr}
 800521e:	4c18      	ldr	r4, [pc, #96]	; (8005280 <RTC_Alarm_IRQHandler+0x64>)
 8005220:	4a18      	ldr	r2, [pc, #96]	; (8005284 <RTC_Alarm_IRQHandler+0x68>)
 8005222:	6863      	ldr	r3, [r4, #4]
 8005224:	f44f 2180 	mov.w	r1, #262144	; 0x40000
 8005228:	6151      	str	r1, [r2, #20]
 800522a:	689a      	ldr	r2, [r3, #8]
 800522c:	04d2      	lsls	r2, r2, #19
 800522e:	d502      	bpl.n	8005236 <RTC_Alarm_IRQHandler+0x1a>
 8005230:	68da      	ldr	r2, [r3, #12]
 8005232:	05d0      	lsls	r0, r2, #23
 8005234:	d409      	bmi.n	800524a <RTC_Alarm_IRQHandler+0x2e>
 8005236:	689a      	ldr	r2, [r3, #8]
 8005238:	0491      	lsls	r1, r2, #18
 800523a:	d502      	bpl.n	8005242 <RTC_Alarm_IRQHandler+0x26>
 800523c:	68da      	ldr	r2, [r3, #12]
 800523e:	0592      	lsls	r2, r2, #22
 8005240:	d412      	bmi.n	8005268 <RTC_Alarm_IRQHandler+0x4c>
 8005242:	2301      	movs	r3, #1
 8005244:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 8005248:	bd10      	pop	{r4, pc}
 800524a:	68da      	ldr	r2, [r3, #12]
 800524c:	b2d2      	uxtb	r2, r2
 800524e:	f462 72c0 	orn	r2, r2, #384	; 0x180
 8005252:	60da      	str	r2, [r3, #12]
 8005254:	2301      	movs	r3, #1
 8005256:	f884 3148 	strb.w	r3, [r4, #328]	; 0x148
 800525a:	f7fd fd9f 	bl	8002d9c <HAL_RTC_DeactivateAlarm.constprop.0>
 800525e:	b960      	cbnz	r0, 800527a <RTC_Alarm_IRQHandler+0x5e>
 8005260:	6863      	ldr	r3, [r4, #4]
 8005262:	f884 0148 	strb.w	r0, [r4, #328]	; 0x148
 8005266:	e7e6      	b.n	8005236 <RTC_Alarm_IRQHandler+0x1a>
 8005268:	68da      	ldr	r2, [r3, #12]
 800526a:	b2d2      	uxtb	r2, r2
 800526c:	f462 7220 	orn	r2, r2, #640	; 0x280
 8005270:	60da      	str	r2, [r3, #12]
 8005272:	2301      	movs	r3, #1
 8005274:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 8005278:	bd10      	pop	{r4, pc}
 800527a:	f7fd f907 	bl	800248c <__NVIC_SystemReset>
 800527e:	bf00      	nop
 8005280:	200000ac 	.word	0x200000ac
 8005284:	40010400 	.word	0x40010400

08005288 <EXTI15_10_IRQHandler>:
 8005288:	4b03      	ldr	r3, [pc, #12]	; (8005298 <EXTI15_10_IRQHandler+0x10>)
 800528a:	695a      	ldr	r2, [r3, #20]
 800528c:	0512      	lsls	r2, r2, #20
 800528e:	bf44      	itt	mi
 8005290:	f44f 6200 	movmi.w	r2, #2048	; 0x800
 8005294:	615a      	strmi	r2, [r3, #20]
 8005296:	4770      	bx	lr
 8005298:	40010400 	.word	0x40010400

0800529c <USART2_IRQHandler>:
 800529c:	b570      	push	{r4, r5, r6, lr}
 800529e:	4ca9      	ldr	r4, [pc, #676]	; (8005544 <USART2_IRQHandler+0x2a8>)
 80052a0:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 80052a4:	69da      	ldr	r2, [r3, #28]
 80052a6:	6819      	ldr	r1, [r3, #0]
 80052a8:	689d      	ldr	r5, [r3, #8]
 80052aa:	f640 000f 	movw	r0, #2063	; 0x80f
 80052ae:	4202      	tst	r2, r0
 80052b0:	d14c      	bne.n	800534c <USART2_IRQHandler+0xb0>
 80052b2:	0690      	lsls	r0, r2, #26
 80052b4:	d502      	bpl.n	80052bc <USART2_IRQHandler+0x20>
 80052b6:	068e      	lsls	r6, r1, #26
 80052b8:	f100 80e9 	bmi.w	800548e <USART2_IRQHandler+0x1f2>
 80052bc:	f8d4 01ac 	ldr.w	r0, [r4, #428]	; 0x1ac
 80052c0:	2801      	cmp	r0, #1
 80052c2:	d025      	beq.n	8005310 <USART2_IRQHandler+0x74>
 80052c4:	02d6      	lsls	r6, r2, #11
 80052c6:	d502      	bpl.n	80052ce <USART2_IRQHandler+0x32>
 80052c8:	0268      	lsls	r0, r5, #9
 80052ca:	f100 80ea 	bmi.w	80054a2 <USART2_IRQHandler+0x206>
 80052ce:	0616      	lsls	r6, r2, #24
 80052d0:	d414      	bmi.n	80052fc <USART2_IRQHandler+0x60>
 80052d2:	0650      	lsls	r0, r2, #25
 80052d4:	d501      	bpl.n	80052da <USART2_IRQHandler+0x3e>
 80052d6:	064a      	lsls	r2, r1, #25
 80052d8:	d402      	bmi.n	80052e0 <USART2_IRQHandler+0x44>
 80052da:	bd70      	pop	{r4, r5, r6, pc}
 80052dc:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 80052e0:	e853 2f00 	ldrex	r2, [r3]
 80052e4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80052e8:	e843 2100 	strex	r1, r2, [r3]
 80052ec:	2900      	cmp	r1, #0
 80052ee:	d1f5      	bne.n	80052dc <USART2_IRQHandler+0x40>
 80052f0:	2320      	movs	r3, #32
 80052f2:	f8c4 11b4 	str.w	r1, [r4, #436]	; 0x1b4
 80052f6:	f8c4 31c4 	str.w	r3, [r4, #452]	; 0x1c4
 80052fa:	bd70      	pop	{r4, r5, r6, pc}
 80052fc:	060d      	lsls	r5, r1, #24
 80052fe:	d5e8      	bpl.n	80052d2 <USART2_IRQHandler+0x36>
 8005300:	f8d4 31b4 	ldr.w	r3, [r4, #436]	; 0x1b4
 8005304:	2b00      	cmp	r3, #0
 8005306:	d0e8      	beq.n	80052da <USART2_IRQHandler+0x3e>
 8005308:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800530c:	488e      	ldr	r0, [pc, #568]	; (8005548 <USART2_IRQHandler+0x2ac>)
 800530e:	4718      	bx	r3
 8005310:	06d6      	lsls	r6, r2, #27
 8005312:	d5d7      	bpl.n	80052c4 <USART2_IRQHandler+0x28>
 8005314:	06c8      	lsls	r0, r1, #27
 8005316:	d5d5      	bpl.n	80052c4 <USART2_IRQHandler+0x28>
 8005318:	2210      	movs	r2, #16
 800531a:	621a      	str	r2, [r3, #32]
 800531c:	689a      	ldr	r2, [r3, #8]
 800531e:	0651      	lsls	r1, r2, #25
 8005320:	f140 80d7 	bpl.w	80054d2 <USART2_IRQHandler+0x236>
 8005324:	f8d4 21bc 	ldr.w	r2, [r4, #444]	; 0x1bc
 8005328:	6811      	ldr	r1, [r2, #0]
 800532a:	684a      	ldr	r2, [r1, #4]
 800532c:	b292      	uxth	r2, r2
 800532e:	2a00      	cmp	r2, #0
 8005330:	d0d3      	beq.n	80052da <USART2_IRQHandler+0x3e>
 8005332:	f8b4 01a4 	ldrh.w	r0, [r4, #420]	; 0x1a4
 8005336:	4290      	cmp	r0, r2
 8005338:	d9cf      	bls.n	80052da <USART2_IRQHandler+0x3e>
 800533a:	f8a4 21a6 	strh.w	r2, [r4, #422]	; 0x1a6
 800533e:	680a      	ldr	r2, [r1, #0]
 8005340:	0692      	lsls	r2, r2, #26
 8005342:	f140 8109 	bpl.w	8005558 <USART2_IRQHandler+0x2bc>
 8005346:	f8b4 31a6 	ldrh.w	r3, [r4, #422]	; 0x1a6
 800534a:	bd70      	pop	{r4, r5, r6, pc}
 800534c:	487f      	ldr	r0, [pc, #508]	; (800554c <USART2_IRQHandler+0x2b0>)
 800534e:	f005 0601 	and.w	r6, r5, #1
 8005352:	4008      	ands	r0, r1
 8005354:	4330      	orrs	r0, r6
 8005356:	d0b1      	beq.n	80052bc <USART2_IRQHandler+0x20>
 8005358:	07d5      	lsls	r5, r2, #31
 800535a:	d509      	bpl.n	8005370 <USART2_IRQHandler+0xd4>
 800535c:	05c8      	lsls	r0, r1, #23
 800535e:	d507      	bpl.n	8005370 <USART2_IRQHandler+0xd4>
 8005360:	2001      	movs	r0, #1
 8005362:	6218      	str	r0, [r3, #32]
 8005364:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 8005368:	f040 0001 	orr.w	r0, r0, #1
 800536c:	f8c4 01cc 	str.w	r0, [r4, #460]	; 0x1cc
 8005370:	0795      	lsls	r5, r2, #30
 8005372:	d57f      	bpl.n	8005474 <USART2_IRQHandler+0x1d8>
 8005374:	b14e      	cbz	r6, 800538a <USART2_IRQHandler+0xee>
 8005376:	2002      	movs	r0, #2
 8005378:	6218      	str	r0, [r3, #32]
 800537a:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 800537e:	f040 0004 	orr.w	r0, r0, #4
 8005382:	f8c4 01cc 	str.w	r0, [r4, #460]	; 0x1cc
 8005386:	0750      	lsls	r0, r2, #29
 8005388:	d478      	bmi.n	800547c <USART2_IRQHandler+0x1e0>
 800538a:	0710      	lsls	r0, r2, #28
 800538c:	d50b      	bpl.n	80053a6 <USART2_IRQHandler+0x10a>
 800538e:	f001 0020 	and.w	r0, r1, #32
 8005392:	4330      	orrs	r0, r6
 8005394:	d007      	beq.n	80053a6 <USART2_IRQHandler+0x10a>
 8005396:	2008      	movs	r0, #8
 8005398:	6218      	str	r0, [r3, #32]
 800539a:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 800539e:	f040 0008 	orr.w	r0, r0, #8
 80053a2:	f8c4 01cc 	str.w	r0, [r4, #460]	; 0x1cc
 80053a6:	0516      	lsls	r6, r2, #20
 80053a8:	d50a      	bpl.n	80053c0 <USART2_IRQHandler+0x124>
 80053aa:	014d      	lsls	r5, r1, #5
 80053ac:	d508      	bpl.n	80053c0 <USART2_IRQHandler+0x124>
 80053ae:	f44f 6000 	mov.w	r0, #2048	; 0x800
 80053b2:	6218      	str	r0, [r3, #32]
 80053b4:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 80053b8:	f040 0020 	orr.w	r0, r0, #32
 80053bc:	f8c4 01cc 	str.w	r0, [r4, #460]	; 0x1cc
 80053c0:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 80053c4:	2800      	cmp	r0, #0
 80053c6:	d088      	beq.n	80052da <USART2_IRQHandler+0x3e>
 80053c8:	0690      	lsls	r0, r2, #26
 80053ca:	d501      	bpl.n	80053d0 <USART2_IRQHandler+0x134>
 80053cc:	068a      	lsls	r2, r1, #26
 80053ce:	d477      	bmi.n	80054c0 <USART2_IRQHandler+0x224>
 80053d0:	f8d4 11cc 	ldr.w	r1, [r4, #460]	; 0x1cc
 80053d4:	689a      	ldr	r2, [r3, #8]
 80053d6:	f001 0128 	and.w	r1, r1, #40	; 0x28
 80053da:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80053de:	430a      	orrs	r2, r1
 80053e0:	d102      	bne.n	80053e8 <USART2_IRQHandler+0x14c>
 80053e2:	e0f5      	b.n	80055d0 <USART2_IRQHandler+0x334>
 80053e4:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 80053e8:	e853 2f00 	ldrex	r2, [r3]
 80053ec:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80053f0:	e843 2100 	strex	r1, r2, [r3]
 80053f4:	2900      	cmp	r1, #0
 80053f6:	d1f5      	bne.n	80053e4 <USART2_IRQHandler+0x148>
 80053f8:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 80053fc:	f102 0308 	add.w	r3, r2, #8
 8005400:	e853 3f00 	ldrex	r3, [r3]
 8005404:	f023 0301 	bic.w	r3, r3, #1
 8005408:	3208      	adds	r2, #8
 800540a:	e842 3100 	strex	r1, r3, [r2]
 800540e:	2900      	cmp	r1, #0
 8005410:	d1f2      	bne.n	80053f8 <USART2_IRQHandler+0x15c>
 8005412:	f8d4 31ac 	ldr.w	r3, [r4, #428]	; 0x1ac
 8005416:	2b01      	cmp	r3, #1
 8005418:	d047      	beq.n	80054aa <USART2_IRQHandler+0x20e>
 800541a:	2300      	movs	r3, #0
 800541c:	2120      	movs	r1, #32
 800541e:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8005422:	f8c4 11c8 	str.w	r1, [r4, #456]	; 0x1c8
 8005426:	f8c4 31ac 	str.w	r3, [r4, #428]	; 0x1ac
 800542a:	6891      	ldr	r1, [r2, #8]
 800542c:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
 8005430:	064b      	lsls	r3, r1, #25
 8005432:	d402      	bmi.n	800543a <USART2_IRQHandler+0x19e>
 8005434:	e751      	b.n	80052da <USART2_IRQHandler+0x3e>
 8005436:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 800543a:	f102 0308 	add.w	r3, r2, #8
 800543e:	e853 3f00 	ldrex	r3, [r3]
 8005442:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005446:	3208      	adds	r2, #8
 8005448:	e842 3100 	strex	r1, r3, [r2]
 800544c:	2900      	cmp	r1, #0
 800544e:	d1f2      	bne.n	8005436 <USART2_IRQHandler+0x19a>
 8005450:	f8d4 01bc 	ldr.w	r0, [r4, #444]	; 0x1bc
 8005454:	2800      	cmp	r0, #0
 8005456:	f43f af40 	beq.w	80052da <USART2_IRQHandler+0x3e>
 800545a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800545e:	4a3c      	ldr	r2, [pc, #240]	; (8005550 <USART2_IRQHandler+0x2b4>)
 8005460:	6382      	str	r2, [r0, #56]	; 0x38
 8005462:	2b02      	cmp	r3, #2
 8005464:	f000 80b7 	beq.w	80055d6 <USART2_IRQHandler+0x33a>
 8005468:	2304      	movs	r3, #4
 800546a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800546e:	63c3      	str	r3, [r0, #60]	; 0x3c
 8005470:	f7fc baf8 	b.w	8001a64 <UART_DMAAbortOnError>
 8005474:	0755      	lsls	r5, r2, #29
 8005476:	d588      	bpl.n	800538a <USART2_IRQHandler+0xee>
 8005478:	2e00      	cmp	r6, #0
 800547a:	d086      	beq.n	800538a <USART2_IRQHandler+0xee>
 800547c:	2004      	movs	r0, #4
 800547e:	6218      	str	r0, [r3, #32]
 8005480:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 8005484:	f040 0002 	orr.w	r0, r0, #2
 8005488:	f8c4 01cc 	str.w	r0, [r4, #460]	; 0x1cc
 800548c:	e77d      	b.n	800538a <USART2_IRQHandler+0xee>
 800548e:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
 8005492:	2b00      	cmp	r3, #0
 8005494:	f43f af21 	beq.w	80052da <USART2_IRQHandler+0x3e>
 8005498:	f504 70a6 	add.w	r0, r4, #332	; 0x14c
 800549c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80054a0:	4718      	bx	r3
 80054a2:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 80054a6:	621a      	str	r2, [r3, #32]
 80054a8:	bd70      	pop	{r4, r5, r6, pc}
 80054aa:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 80054ae:	e852 3f00 	ldrex	r3, [r2]
 80054b2:	f023 0310 	bic.w	r3, r3, #16
 80054b6:	e842 3100 	strex	r1, r3, [r2]
 80054ba:	2900      	cmp	r1, #0
 80054bc:	d1f5      	bne.n	80054aa <USART2_IRQHandler+0x20e>
 80054be:	e7ac      	b.n	800541a <USART2_IRQHandler+0x17e>
 80054c0:	f8d4 21b0 	ldr.w	r2, [r4, #432]	; 0x1b0
 80054c4:	2a00      	cmp	r2, #0
 80054c6:	d083      	beq.n	80053d0 <USART2_IRQHandler+0x134>
 80054c8:	481f      	ldr	r0, [pc, #124]	; (8005548 <USART2_IRQHandler+0x2ac>)
 80054ca:	4790      	blx	r2
 80054cc:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 80054d0:	e77e      	b.n	80053d0 <USART2_IRQHandler+0x134>
 80054d2:	f8b4 11a6 	ldrh.w	r1, [r4, #422]	; 0x1a6
 80054d6:	f8b4 21a6 	ldrh.w	r2, [r4, #422]	; 0x1a6
 80054da:	b292      	uxth	r2, r2
 80054dc:	b289      	uxth	r1, r1
 80054de:	2a00      	cmp	r2, #0
 80054e0:	f43f aefb 	beq.w	80052da <USART2_IRQHandler+0x3e>
 80054e4:	f8b4 21a4 	ldrh.w	r2, [r4, #420]	; 0x1a4
 80054e8:	428a      	cmp	r2, r1
 80054ea:	f43f aef6 	beq.w	80052da <USART2_IRQHandler+0x3e>
 80054ee:	e001      	b.n	80054f4 <USART2_IRQHandler+0x258>
 80054f0:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 80054f4:	e853 2f00 	ldrex	r2, [r3]
 80054f8:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80054fc:	e843 2100 	strex	r1, r2, [r3]
 8005500:	2900      	cmp	r1, #0
 8005502:	d1f5      	bne.n	80054f0 <USART2_IRQHandler+0x254>
 8005504:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8005508:	f102 0308 	add.w	r3, r2, #8
 800550c:	e853 3f00 	ldrex	r3, [r3]
 8005510:	f023 0301 	bic.w	r3, r3, #1
 8005514:	3208      	adds	r2, #8
 8005516:	e842 3100 	strex	r1, r3, [r2]
 800551a:	2900      	cmp	r1, #0
 800551c:	d1f2      	bne.n	8005504 <USART2_IRQHandler+0x268>
 800551e:	2320      	movs	r3, #32
 8005520:	f8c4 31c8 	str.w	r3, [r4, #456]	; 0x1c8
 8005524:	f8c4 11b0 	str.w	r1, [r4, #432]	; 0x1b0
 8005528:	f8c4 11ac 	str.w	r1, [r4, #428]	; 0x1ac
 800552c:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8005530:	e852 3f00 	ldrex	r3, [r2]
 8005534:	f023 0310 	bic.w	r3, r3, #16
 8005538:	e842 3100 	strex	r1, r3, [r2]
 800553c:	2900      	cmp	r1, #0
 800553e:	d1f5      	bne.n	800552c <USART2_IRQHandler+0x290>
 8005540:	bd70      	pop	{r4, r5, r6, pc}
 8005542:	bf00      	nop
 8005544:	200000ac 	.word	0x200000ac
 8005548:	200001f8 	.word	0x200001f8
 800554c:	04000120 	.word	0x04000120
 8005550:	08001a65 	.word	0x08001a65
 8005554:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 8005558:	e853 2f00 	ldrex	r2, [r3]
 800555c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005560:	e843 2100 	strex	r1, r2, [r3]
 8005564:	2900      	cmp	r1, #0
 8005566:	d1f5      	bne.n	8005554 <USART2_IRQHandler+0x2b8>
 8005568:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 800556c:	f102 0308 	add.w	r3, r2, #8
 8005570:	e853 3f00 	ldrex	r3, [r3]
 8005574:	f023 0301 	bic.w	r3, r3, #1
 8005578:	3208      	adds	r2, #8
 800557a:	e842 3100 	strex	r1, r3, [r2]
 800557e:	2900      	cmp	r1, #0
 8005580:	d1f2      	bne.n	8005568 <USART2_IRQHandler+0x2cc>
 8005582:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8005586:	f102 0308 	add.w	r3, r2, #8
 800558a:	e853 3f00 	ldrex	r3, [r3]
 800558e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005592:	3208      	adds	r2, #8
 8005594:	e842 3100 	strex	r1, r3, [r2]
 8005598:	2900      	cmp	r1, #0
 800559a:	d1f2      	bne.n	8005582 <USART2_IRQHandler+0x2e6>
 800559c:	2320      	movs	r3, #32
 800559e:	f8c4 31c8 	str.w	r3, [r4, #456]	; 0x1c8
 80055a2:	f8c4 11ac 	str.w	r1, [r4, #428]	; 0x1ac
 80055a6:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 80055aa:	e852 3f00 	ldrex	r3, [r2]
 80055ae:	f023 0310 	bic.w	r3, r3, #16
 80055b2:	e842 3100 	strex	r1, r3, [r2]
 80055b6:	2900      	cmp	r1, #0
 80055b8:	d1f5      	bne.n	80055a6 <USART2_IRQHandler+0x30a>
 80055ba:	f8d4 31bc 	ldr.w	r3, [r4, #444]	; 0x1bc
 80055be:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
 80055c2:	2a02      	cmp	r2, #2
 80055c4:	d020      	beq.n	8005608 <USART2_IRQHandler+0x36c>
 80055c6:	2204      	movs	r2, #4
 80055c8:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 80055cc:	63da      	str	r2, [r3, #60]	; 0x3c
 80055ce:	e6ba      	b.n	8005346 <USART2_IRQHandler+0xaa>
 80055d0:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
 80055d4:	bd70      	pop	{r4, r5, r6, pc}
 80055d6:	6802      	ldr	r2, [r0, #0]
 80055d8:	6c43      	ldr	r3, [r0, #68]	; 0x44
 80055da:	6814      	ldr	r4, [r2, #0]
 80055dc:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80055de:	f024 040e 	bic.w	r4, r4, #14
 80055e2:	6014      	str	r4, [r2, #0]
 80055e4:	6814      	ldr	r4, [r2, #0]
 80055e6:	f024 0401 	bic.w	r4, r4, #1
 80055ea:	6014      	str	r4, [r2, #0]
 80055ec:	f003 031c 	and.w	r3, r3, #28
 80055f0:	2201      	movs	r2, #1
 80055f2:	fa02 f303 	lsl.w	r3, r2, r3
 80055f6:	606b      	str	r3, [r5, #4]
 80055f8:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80055fc:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8005600:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005604:	f7fc ba2e 	b.w	8001a64 <UART_DMAAbortOnError>
 8005608:	6818      	ldr	r0, [r3, #0]
 800560a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800560c:	6805      	ldr	r5, [r0, #0]
 800560e:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 8005610:	f025 050e 	bic.w	r5, r5, #14
 8005614:	6005      	str	r5, [r0, #0]
 8005616:	6805      	ldr	r5, [r0, #0]
 8005618:	f025 0501 	bic.w	r5, r5, #1
 800561c:	6005      	str	r5, [r0, #0]
 800561e:	f002 021c 	and.w	r2, r2, #28
 8005622:	2001      	movs	r0, #1
 8005624:	fa00 f202 	lsl.w	r2, r0, r2
 8005628:	6072      	str	r2, [r6, #4]
 800562a:	f883 0025 	strb.w	r0, [r3, #37]	; 0x25
 800562e:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 8005632:	e688      	b.n	8005346 <USART2_IRQHandler+0xaa>

08005634 <I2C2_EV_IRQHandler>:
 8005634:	4808      	ldr	r0, [pc, #32]	; (8005658 <I2C2_EV_IRQHandler+0x24>)
 8005636:	b410      	push	{r4}
 8005638:	f8d0 31d0 	ldr.w	r3, [r0, #464]	; 0x1d0
 800563c:	f8d0 4204 	ldr.w	r4, [r0, #516]	; 0x204
 8005640:	6999      	ldr	r1, [r3, #24]
 8005642:	681a      	ldr	r2, [r3, #0]
 8005644:	b12c      	cbz	r4, 8005652 <I2C2_EV_IRQHandler+0x1e>
 8005646:	4623      	mov	r3, r4
 8005648:	f500 70e8 	add.w	r0, r0, #464	; 0x1d0
 800564c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005650:	4718      	bx	r3
 8005652:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005656:	4770      	bx	lr
 8005658:	200000ac 	.word	0x200000ac

0800565c <DMA1_Channel7_IRQHandler>:
 800565c:	4801      	ldr	r0, [pc, #4]	; (8005664 <DMA1_Channel7_IRQHandler+0x8>)
 800565e:	f7fc be4b 	b.w	80022f8 <HAL_DMA_IRQHandler>
 8005662:	bf00      	nop
 8005664:	20000148 	.word	0x20000148

08005668 <DMA1_Channel6_IRQHandler>:
 8005668:	4801      	ldr	r0, [pc, #4]	; (8005670 <DMA1_Channel6_IRQHandler+0x8>)
 800566a:	f7fc be45 	b.w	80022f8 <HAL_DMA_IRQHandler>
 800566e:	bf00      	nop
 8005670:	20000100 	.word	0x20000100

08005674 <DMA1_Channel3_IRQHandler>:
 8005674:	4801      	ldr	r0, [pc, #4]	; (800567c <DMA1_Channel3_IRQHandler+0x8>)
 8005676:	f7fc be3f 	b.w	80022f8 <HAL_DMA_IRQHandler>
 800567a:	bf00      	nop
 800567c:	200002d0 	.word	0x200002d0

08005680 <DMA1_Channel2_IRQHandler>:
 8005680:	4801      	ldr	r0, [pc, #4]	; (8005688 <DMA1_Channel2_IRQHandler+0x8>)
 8005682:	f7fc be39 	b.w	80022f8 <HAL_DMA_IRQHandler>
 8005686:	bf00      	nop
 8005688:	20000318 	.word	0x20000318

0800568c <EXTI3_IRQHandler>:
 800568c:	4b03      	ldr	r3, [pc, #12]	; (800569c <EXTI3_IRQHandler+0x10>)
 800568e:	695a      	ldr	r2, [r3, #20]
 8005690:	0712      	lsls	r2, r2, #28
 8005692:	bf44      	itt	mi
 8005694:	2208      	movmi	r2, #8
 8005696:	615a      	strmi	r2, [r3, #20]
 8005698:	4770      	bx	lr
 800569a:	bf00      	nop
 800569c:	40010400 	.word	0x40010400

080056a0 <RTC_WKUP_IRQHandler>:
 80056a0:	4b0c      	ldr	r3, [pc, #48]	; (80056d4 <RTC_WKUP_IRQHandler+0x34>)
 80056a2:	490d      	ldr	r1, [pc, #52]	; (80056d8 <RTC_WKUP_IRQHandler+0x38>)
 80056a4:	685a      	ldr	r2, [r3, #4]
 80056a6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80056aa:	6148      	str	r0, [r1, #20]
 80056ac:	68d1      	ldr	r1, [r2, #12]
 80056ae:	0549      	lsls	r1, r1, #21
 80056b0:	d403      	bmi.n	80056ba <RTC_WKUP_IRQHandler+0x1a>
 80056b2:	2201      	movs	r2, #1
 80056b4:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 80056b8:	4770      	bx	lr
 80056ba:	68d1      	ldr	r1, [r2, #12]
 80056bc:	b2c9      	uxtb	r1, r1
 80056be:	f461 6190 	orn	r1, r1, #1152	; 0x480
 80056c2:	60d1      	str	r1, [r2, #12]
 80056c4:	2001      	movs	r0, #1
 80056c6:	2201      	movs	r2, #1
 80056c8:	f883 0051 	strb.w	r0, [r3, #81]	; 0x51
 80056cc:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 80056d0:	4770      	bx	lr
 80056d2:	bf00      	nop
 80056d4:	200000ac 	.word	0x200000ac
 80056d8:	40010400 	.word	0x40010400

080056dc <SysTick_Handler>:
 80056dc:	4a02      	ldr	r2, [pc, #8]	; (80056e8 <SysTick_Handler+0xc>)
 80056de:	6813      	ldr	r3, [r2, #0]
 80056e0:	3301      	adds	r3, #1
 80056e2:	6013      	str	r3, [r2, #0]
 80056e4:	4770      	bx	lr
 80056e6:	bf00      	nop
 80056e8:	200000ac 	.word	0x200000ac

080056ec <PendSV_Handler>:
 80056ec:	4770      	bx	lr
 80056ee:	bf00      	nop

080056f0 <SVC_Handler>:
 80056f0:	4770      	bx	lr
 80056f2:	bf00      	nop

080056f4 <DebugMon_Handler>:
 80056f4:	4770      	bx	lr
 80056f6:	bf00      	nop

080056f8 <UsageFault_Handler>:
 80056f8:	e7fe      	b.n	80056f8 <UsageFault_Handler>
 80056fa:	bf00      	nop

080056fc <BusFault_Handler>:
 80056fc:	e7fe      	b.n	80056fc <BusFault_Handler>
 80056fe:	bf00      	nop

08005700 <MemManage_Handler>:
 8005700:	e7fe      	b.n	8005700 <MemManage_Handler>
 8005702:	bf00      	nop

08005704 <HardFault_Handler>:
 8005704:	e7fe      	b.n	8005704 <HardFault_Handler>
 8005706:	bf00      	nop

08005708 <NMI_Handler>:
 8005708:	e7fe      	b.n	8005708 <NMI_Handler>
 800570a:	bf00      	nop

0800570c <strlen>:
 800570c:	4603      	mov	r3, r0
 800570e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005712:	2a00      	cmp	r2, #0
 8005714:	d1fb      	bne.n	800570e <strlen+0x2>
 8005716:	1a18      	subs	r0, r3, r0
 8005718:	3801      	subs	r0, #1
 800571a:	4770      	bx	lr

0800571c <__aeabi_uldivmod>:
 800571c:	b953      	cbnz	r3, 8005734 <__aeabi_uldivmod+0x18>
 800571e:	b94a      	cbnz	r2, 8005734 <__aeabi_uldivmod+0x18>
 8005720:	2900      	cmp	r1, #0
 8005722:	bf08      	it	eq
 8005724:	2800      	cmpeq	r0, #0
 8005726:	bf1c      	itt	ne
 8005728:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 800572c:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8005730:	f000 b96e 	b.w	8005a10 <__aeabi_idiv0>
 8005734:	f1ad 0c08 	sub.w	ip, sp, #8
 8005738:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 800573c:	f000 f806 	bl	800574c <__udivmoddi4>
 8005740:	f8dd e004 	ldr.w	lr, [sp, #4]
 8005744:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8005748:	b004      	add	sp, #16
 800574a:	4770      	bx	lr

0800574c <__udivmoddi4>:
 800574c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005750:	9d08      	ldr	r5, [sp, #32]
 8005752:	4604      	mov	r4, r0
 8005754:	468c      	mov	ip, r1
 8005756:	2b00      	cmp	r3, #0
 8005758:	f040 8083 	bne.w	8005862 <__udivmoddi4+0x116>
 800575c:	428a      	cmp	r2, r1
 800575e:	4617      	mov	r7, r2
 8005760:	d947      	bls.n	80057f2 <__udivmoddi4+0xa6>
 8005762:	fab2 f282 	clz	r2, r2
 8005766:	b142      	cbz	r2, 800577a <__udivmoddi4+0x2e>
 8005768:	f1c2 0020 	rsb	r0, r2, #32
 800576c:	fa24 f000 	lsr.w	r0, r4, r0
 8005770:	4091      	lsls	r1, r2
 8005772:	4097      	lsls	r7, r2
 8005774:	ea40 0c01 	orr.w	ip, r0, r1
 8005778:	4094      	lsls	r4, r2
 800577a:	ea4f 4817 	mov.w	r8, r7, lsr #16
 800577e:	0c23      	lsrs	r3, r4, #16
 8005780:	fbbc f6f8 	udiv	r6, ip, r8
 8005784:	fa1f fe87 	uxth.w	lr, r7
 8005788:	fb08 c116 	mls	r1, r8, r6, ip
 800578c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8005790:	fb06 f10e 	mul.w	r1, r6, lr
 8005794:	4299      	cmp	r1, r3
 8005796:	d909      	bls.n	80057ac <__udivmoddi4+0x60>
 8005798:	18fb      	adds	r3, r7, r3
 800579a:	f106 30ff 	add.w	r0, r6, #4294967295	; 0xffffffff
 800579e:	f080 8119 	bcs.w	80059d4 <__udivmoddi4+0x288>
 80057a2:	4299      	cmp	r1, r3
 80057a4:	f240 8116 	bls.w	80059d4 <__udivmoddi4+0x288>
 80057a8:	3e02      	subs	r6, #2
 80057aa:	443b      	add	r3, r7
 80057ac:	1a5b      	subs	r3, r3, r1
 80057ae:	b2a4      	uxth	r4, r4
 80057b0:	fbb3 f0f8 	udiv	r0, r3, r8
 80057b4:	fb08 3310 	mls	r3, r8, r0, r3
 80057b8:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80057bc:	fb00 fe0e 	mul.w	lr, r0, lr
 80057c0:	45a6      	cmp	lr, r4
 80057c2:	d909      	bls.n	80057d8 <__udivmoddi4+0x8c>
 80057c4:	193c      	adds	r4, r7, r4
 80057c6:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 80057ca:	f080 8105 	bcs.w	80059d8 <__udivmoddi4+0x28c>
 80057ce:	45a6      	cmp	lr, r4
 80057d0:	f240 8102 	bls.w	80059d8 <__udivmoddi4+0x28c>
 80057d4:	3802      	subs	r0, #2
 80057d6:	443c      	add	r4, r7
 80057d8:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80057dc:	eba4 040e 	sub.w	r4, r4, lr
 80057e0:	2600      	movs	r6, #0
 80057e2:	b11d      	cbz	r5, 80057ec <__udivmoddi4+0xa0>
 80057e4:	40d4      	lsrs	r4, r2
 80057e6:	2300      	movs	r3, #0
 80057e8:	e9c5 4300 	strd	r4, r3, [r5]
 80057ec:	4631      	mov	r1, r6
 80057ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80057f2:	b902      	cbnz	r2, 80057f6 <__udivmoddi4+0xaa>
 80057f4:	deff      	udf	#255	; 0xff
 80057f6:	fab2 f282 	clz	r2, r2
 80057fa:	2a00      	cmp	r2, #0
 80057fc:	d150      	bne.n	80058a0 <__udivmoddi4+0x154>
 80057fe:	1bcb      	subs	r3, r1, r7
 8005800:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8005804:	fa1f f887 	uxth.w	r8, r7
 8005808:	2601      	movs	r6, #1
 800580a:	fbb3 fcfe 	udiv	ip, r3, lr
 800580e:	0c21      	lsrs	r1, r4, #16
 8005810:	fb0e 331c 	mls	r3, lr, ip, r3
 8005814:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8005818:	fb08 f30c 	mul.w	r3, r8, ip
 800581c:	428b      	cmp	r3, r1
 800581e:	d907      	bls.n	8005830 <__udivmoddi4+0xe4>
 8005820:	1879      	adds	r1, r7, r1
 8005822:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
 8005826:	d202      	bcs.n	800582e <__udivmoddi4+0xe2>
 8005828:	428b      	cmp	r3, r1
 800582a:	f200 80e9 	bhi.w	8005a00 <__udivmoddi4+0x2b4>
 800582e:	4684      	mov	ip, r0
 8005830:	1ac9      	subs	r1, r1, r3
 8005832:	b2a3      	uxth	r3, r4
 8005834:	fbb1 f0fe 	udiv	r0, r1, lr
 8005838:	fb0e 1110 	mls	r1, lr, r0, r1
 800583c:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 8005840:	fb08 f800 	mul.w	r8, r8, r0
 8005844:	45a0      	cmp	r8, r4
 8005846:	d907      	bls.n	8005858 <__udivmoddi4+0x10c>
 8005848:	193c      	adds	r4, r7, r4
 800584a:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 800584e:	d202      	bcs.n	8005856 <__udivmoddi4+0x10a>
 8005850:	45a0      	cmp	r8, r4
 8005852:	f200 80d9 	bhi.w	8005a08 <__udivmoddi4+0x2bc>
 8005856:	4618      	mov	r0, r3
 8005858:	eba4 0408 	sub.w	r4, r4, r8
 800585c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8005860:	e7bf      	b.n	80057e2 <__udivmoddi4+0x96>
 8005862:	428b      	cmp	r3, r1
 8005864:	d909      	bls.n	800587a <__udivmoddi4+0x12e>
 8005866:	2d00      	cmp	r5, #0
 8005868:	f000 80b1 	beq.w	80059ce <__udivmoddi4+0x282>
 800586c:	2600      	movs	r6, #0
 800586e:	e9c5 0100 	strd	r0, r1, [r5]
 8005872:	4630      	mov	r0, r6
 8005874:	4631      	mov	r1, r6
 8005876:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800587a:	fab3 f683 	clz	r6, r3
 800587e:	2e00      	cmp	r6, #0
 8005880:	d14a      	bne.n	8005918 <__udivmoddi4+0x1cc>
 8005882:	428b      	cmp	r3, r1
 8005884:	d302      	bcc.n	800588c <__udivmoddi4+0x140>
 8005886:	4282      	cmp	r2, r0
 8005888:	f200 80b8 	bhi.w	80059fc <__udivmoddi4+0x2b0>
 800588c:	1a84      	subs	r4, r0, r2
 800588e:	eb61 0103 	sbc.w	r1, r1, r3
 8005892:	2001      	movs	r0, #1
 8005894:	468c      	mov	ip, r1
 8005896:	2d00      	cmp	r5, #0
 8005898:	d0a8      	beq.n	80057ec <__udivmoddi4+0xa0>
 800589a:	e9c5 4c00 	strd	r4, ip, [r5]
 800589e:	e7a5      	b.n	80057ec <__udivmoddi4+0xa0>
 80058a0:	f1c2 0320 	rsb	r3, r2, #32
 80058a4:	fa20 f603 	lsr.w	r6, r0, r3
 80058a8:	4097      	lsls	r7, r2
 80058aa:	fa01 f002 	lsl.w	r0, r1, r2
 80058ae:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80058b2:	40d9      	lsrs	r1, r3
 80058b4:	4330      	orrs	r0, r6
 80058b6:	0c03      	lsrs	r3, r0, #16
 80058b8:	fbb1 f6fe 	udiv	r6, r1, lr
 80058bc:	fa1f f887 	uxth.w	r8, r7
 80058c0:	fb0e 1116 	mls	r1, lr, r6, r1
 80058c4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80058c8:	fb06 f108 	mul.w	r1, r6, r8
 80058cc:	4299      	cmp	r1, r3
 80058ce:	fa04 f402 	lsl.w	r4, r4, r2
 80058d2:	d909      	bls.n	80058e8 <__udivmoddi4+0x19c>
 80058d4:	18fb      	adds	r3, r7, r3
 80058d6:	f106 3cff 	add.w	ip, r6, #4294967295	; 0xffffffff
 80058da:	f080 808d 	bcs.w	80059f8 <__udivmoddi4+0x2ac>
 80058de:	4299      	cmp	r1, r3
 80058e0:	f240 808a 	bls.w	80059f8 <__udivmoddi4+0x2ac>
 80058e4:	3e02      	subs	r6, #2
 80058e6:	443b      	add	r3, r7
 80058e8:	1a5b      	subs	r3, r3, r1
 80058ea:	b281      	uxth	r1, r0
 80058ec:	fbb3 f0fe 	udiv	r0, r3, lr
 80058f0:	fb0e 3310 	mls	r3, lr, r0, r3
 80058f4:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80058f8:	fb00 f308 	mul.w	r3, r0, r8
 80058fc:	428b      	cmp	r3, r1
 80058fe:	d907      	bls.n	8005910 <__udivmoddi4+0x1c4>
 8005900:	1879      	adds	r1, r7, r1
 8005902:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8005906:	d273      	bcs.n	80059f0 <__udivmoddi4+0x2a4>
 8005908:	428b      	cmp	r3, r1
 800590a:	d971      	bls.n	80059f0 <__udivmoddi4+0x2a4>
 800590c:	3802      	subs	r0, #2
 800590e:	4439      	add	r1, r7
 8005910:	1acb      	subs	r3, r1, r3
 8005912:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 8005916:	e778      	b.n	800580a <__udivmoddi4+0xbe>
 8005918:	f1c6 0c20 	rsb	ip, r6, #32
 800591c:	fa03 f406 	lsl.w	r4, r3, r6
 8005920:	fa22 f30c 	lsr.w	r3, r2, ip
 8005924:	431c      	orrs	r4, r3
 8005926:	fa20 f70c 	lsr.w	r7, r0, ip
 800592a:	fa01 f306 	lsl.w	r3, r1, r6
 800592e:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 8005932:	fa21 f10c 	lsr.w	r1, r1, ip
 8005936:	431f      	orrs	r7, r3
 8005938:	0c3b      	lsrs	r3, r7, #16
 800593a:	fbb1 f9fe 	udiv	r9, r1, lr
 800593e:	fa1f f884 	uxth.w	r8, r4
 8005942:	fb0e 1119 	mls	r1, lr, r9, r1
 8005946:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 800594a:	fb09 fa08 	mul.w	sl, r9, r8
 800594e:	458a      	cmp	sl, r1
 8005950:	fa02 f206 	lsl.w	r2, r2, r6
 8005954:	fa00 f306 	lsl.w	r3, r0, r6
 8005958:	d908      	bls.n	800596c <__udivmoddi4+0x220>
 800595a:	1861      	adds	r1, r4, r1
 800595c:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
 8005960:	d248      	bcs.n	80059f4 <__udivmoddi4+0x2a8>
 8005962:	458a      	cmp	sl, r1
 8005964:	d946      	bls.n	80059f4 <__udivmoddi4+0x2a8>
 8005966:	f1a9 0902 	sub.w	r9, r9, #2
 800596a:	4421      	add	r1, r4
 800596c:	eba1 010a 	sub.w	r1, r1, sl
 8005970:	b2bf      	uxth	r7, r7
 8005972:	fbb1 f0fe 	udiv	r0, r1, lr
 8005976:	fb0e 1110 	mls	r1, lr, r0, r1
 800597a:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 800597e:	fb00 f808 	mul.w	r8, r0, r8
 8005982:	45b8      	cmp	r8, r7
 8005984:	d907      	bls.n	8005996 <__udivmoddi4+0x24a>
 8005986:	19e7      	adds	r7, r4, r7
 8005988:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
 800598c:	d22e      	bcs.n	80059ec <__udivmoddi4+0x2a0>
 800598e:	45b8      	cmp	r8, r7
 8005990:	d92c      	bls.n	80059ec <__udivmoddi4+0x2a0>
 8005992:	3802      	subs	r0, #2
 8005994:	4427      	add	r7, r4
 8005996:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800599a:	eba7 0708 	sub.w	r7, r7, r8
 800599e:	fba0 8902 	umull	r8, r9, r0, r2
 80059a2:	454f      	cmp	r7, r9
 80059a4:	46c6      	mov	lr, r8
 80059a6:	4649      	mov	r1, r9
 80059a8:	d31a      	bcc.n	80059e0 <__udivmoddi4+0x294>
 80059aa:	d017      	beq.n	80059dc <__udivmoddi4+0x290>
 80059ac:	b15d      	cbz	r5, 80059c6 <__udivmoddi4+0x27a>
 80059ae:	ebb3 020e 	subs.w	r2, r3, lr
 80059b2:	eb67 0701 	sbc.w	r7, r7, r1
 80059b6:	fa07 fc0c 	lsl.w	ip, r7, ip
 80059ba:	40f2      	lsrs	r2, r6
 80059bc:	ea4c 0202 	orr.w	r2, ip, r2
 80059c0:	40f7      	lsrs	r7, r6
 80059c2:	e9c5 2700 	strd	r2, r7, [r5]
 80059c6:	2600      	movs	r6, #0
 80059c8:	4631      	mov	r1, r6
 80059ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80059ce:	462e      	mov	r6, r5
 80059d0:	4628      	mov	r0, r5
 80059d2:	e70b      	b.n	80057ec <__udivmoddi4+0xa0>
 80059d4:	4606      	mov	r6, r0
 80059d6:	e6e9      	b.n	80057ac <__udivmoddi4+0x60>
 80059d8:	4618      	mov	r0, r3
 80059da:	e6fd      	b.n	80057d8 <__udivmoddi4+0x8c>
 80059dc:	4543      	cmp	r3, r8
 80059de:	d2e5      	bcs.n	80059ac <__udivmoddi4+0x260>
 80059e0:	ebb8 0e02 	subs.w	lr, r8, r2
 80059e4:	eb69 0104 	sbc.w	r1, r9, r4
 80059e8:	3801      	subs	r0, #1
 80059ea:	e7df      	b.n	80059ac <__udivmoddi4+0x260>
 80059ec:	4608      	mov	r0, r1
 80059ee:	e7d2      	b.n	8005996 <__udivmoddi4+0x24a>
 80059f0:	4660      	mov	r0, ip
 80059f2:	e78d      	b.n	8005910 <__udivmoddi4+0x1c4>
 80059f4:	4681      	mov	r9, r0
 80059f6:	e7b9      	b.n	800596c <__udivmoddi4+0x220>
 80059f8:	4666      	mov	r6, ip
 80059fa:	e775      	b.n	80058e8 <__udivmoddi4+0x19c>
 80059fc:	4630      	mov	r0, r6
 80059fe:	e74a      	b.n	8005896 <__udivmoddi4+0x14a>
 8005a00:	f1ac 0c02 	sub.w	ip, ip, #2
 8005a04:	4439      	add	r1, r7
 8005a06:	e713      	b.n	8005830 <__udivmoddi4+0xe4>
 8005a08:	3802      	subs	r0, #2
 8005a0a:	443c      	add	r4, r7
 8005a0c:	e724      	b.n	8005858 <__udivmoddi4+0x10c>
 8005a0e:	bf00      	nop

08005a10 <__aeabi_idiv0>:
 8005a10:	4770      	bx	lr
 8005a12:	bf00      	nop

08005a14 <main>:
 8005a14:	4945      	ldr	r1, [pc, #276]	; (8005b2c <main+0x118>)
 8005a16:	4b46      	ldr	r3, [pc, #280]	; (8005b30 <main+0x11c>)
 8005a18:	68ca      	ldr	r2, [r1, #12]
 8005a1a:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8005a1e:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
 8005a22:	4002      	ands	r2, r0
 8005a24:	4313      	orrs	r3, r2
 8005a26:	b0d1      	sub	sp, #324	; 0x144
 8005a28:	60cb      	str	r3, [r1, #12]
 8005a2a:	200f      	movs	r0, #15
 8005a2c:	f7fc fd04 	bl	8002438 <HAL_InitTick>
 8005a30:	2800      	cmp	r0, #0
 8005a32:	f000 8306 	beq.w	8006042 <main+0x62e>
 8005a36:	4a3f      	ldr	r2, [pc, #252]	; (8005b34 <main+0x120>)
 8005a38:	6813      	ldr	r3, [r2, #0]
 8005a3a:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8005a3e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8005a42:	d01e      	beq.n	8005a82 <main+0x6e>
 8005a44:	6813      	ldr	r3, [r2, #0]
 8005a46:	493c      	ldr	r1, [pc, #240]	; (8005b38 <main+0x124>)
 8005a48:	483c      	ldr	r0, [pc, #240]	; (8005b3c <main+0x128>)
 8005a4a:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8005a4e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005a52:	6013      	str	r3, [r2, #0]
 8005a54:	680c      	ldr	r4, [r1, #0]
 8005a56:	6951      	ldr	r1, [r2, #20]
 8005a58:	2332      	movs	r3, #50	; 0x32
 8005a5a:	fb03 f304 	mul.w	r3, r3, r4
 8005a5e:	fbb3 f3f0 	udiv	r3, r3, r0
 8005a62:	0548      	lsls	r0, r1, #21
 8005a64:	f103 0301 	add.w	r3, r3, #1
 8005a68:	d506      	bpl.n	8005a78 <main+0x64>
 8005a6a:	e000      	b.n	8005a6e <main+0x5a>
 8005a6c:	b123      	cbz	r3, 8005a78 <main+0x64>
 8005a6e:	6951      	ldr	r1, [r2, #20]
 8005a70:	0549      	lsls	r1, r1, #21
 8005a72:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 8005a76:	d4f9      	bmi.n	8005a6c <main+0x58>
 8005a78:	4b2e      	ldr	r3, [pc, #184]	; (8005b34 <main+0x120>)
 8005a7a:	695b      	ldr	r3, [r3, #20]
 8005a7c:	055f      	lsls	r7, r3, #21
 8005a7e:	f100 82de 	bmi.w	800603e <main+0x62a>
 8005a82:	4b2f      	ldr	r3, [pc, #188]	; (8005b40 <main+0x12c>)
 8005a84:	6899      	ldr	r1, [r3, #8]
 8005a86:	68db      	ldr	r3, [r3, #12]
 8005a88:	f001 010c 	and.w	r1, r1, #12
 8005a8c:	2904      	cmp	r1, #4
 8005a8e:	f000 82f1 	beq.w	8006074 <main+0x660>
 8005a92:	290c      	cmp	r1, #12
 8005a94:	f000 82e9 	beq.w	800606a <main+0x656>
 8005a98:	4b29      	ldr	r3, [pc, #164]	; (8005b40 <main+0x12c>)
 8005a9a:	4c2a      	ldr	r4, [pc, #168]	; (8005b44 <main+0x130>)
 8005a9c:	681a      	ldr	r2, [r3, #0]
 8005a9e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005aa2:	601a      	str	r2, [r3, #0]
 8005aa4:	6820      	ldr	r0, [r4, #0]
 8005aa6:	e004      	b.n	8005ab2 <main+0x9e>
 8005aa8:	6822      	ldr	r2, [r4, #0]
 8005aaa:	1a12      	subs	r2, r2, r0
 8005aac:	2a02      	cmp	r2, #2
 8005aae:	f200 82c6 	bhi.w	800603e <main+0x62a>
 8005ab2:	681a      	ldr	r2, [r3, #0]
 8005ab4:	0556      	lsls	r6, r2, #21
 8005ab6:	d5f7      	bpl.n	8005aa8 <main+0x94>
 8005ab8:	685a      	ldr	r2, [r3, #4]
 8005aba:	f022 52f8 	bic.w	r2, r2, #520093696	; 0x1f000000
 8005abe:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005ac2:	605a      	str	r2, [r3, #4]
 8005ac4:	e2df      	b.n	8006086 <main+0x672>
 8005ac6:	f402 40fe 	and.w	r0, r2, #32512	; 0x7f00
 8005aca:	f5b0 6f20 	cmp.w	r0, #2560	; 0xa00
 8005ace:	f040 82f1 	bne.w	80060b4 <main+0x6a0>
 8005ad2:	f002 4078 	and.w	r0, r2, #4160749568	; 0xf8000000
 8005ad6:	f1b0 5f60 	cmp.w	r0, #939524096	; 0x38000000
 8005ada:	f040 82eb 	bne.w	80060b4 <main+0x6a0>
 8005ade:	481a      	ldr	r0, [pc, #104]	; (8005b48 <main+0x134>)
 8005ae0:	4202      	tst	r2, r0
 8005ae2:	f040 82e7 	bne.w	80060b4 <main+0x6a0>
 8005ae6:	681a      	ldr	r2, [r3, #0]
 8005ae8:	0195      	lsls	r5, r2, #6
 8005aea:	f140 83e9 	bpl.w	80062c0 <main+0x8ac>
 8005aee:	4a17      	ldr	r2, [pc, #92]	; (8005b4c <main+0x138>)
 8005af0:	6813      	ldr	r3, [r2, #0]
 8005af2:	0759      	lsls	r1, r3, #29
 8005af4:	d40b      	bmi.n	8005b0e <main+0xfa>
 8005af6:	6813      	ldr	r3, [r2, #0]
 8005af8:	f023 0307 	bic.w	r3, r3, #7
 8005afc:	f043 0304 	orr.w	r3, r3, #4
 8005b00:	6013      	str	r3, [r2, #0]
 8005b02:	6813      	ldr	r3, [r2, #0]
 8005b04:	f003 0307 	and.w	r3, r3, #7
 8005b08:	2b04      	cmp	r3, #4
 8005b0a:	f040 8298 	bne.w	800603e <main+0x62a>
 8005b0e:	4b0c      	ldr	r3, [pc, #48]	; (8005b40 <main+0x12c>)
 8005b10:	689a      	ldr	r2, [r3, #8]
 8005b12:	681a      	ldr	r2, [r3, #0]
 8005b14:	0192      	lsls	r2, r2, #6
 8005b16:	f140 8292 	bpl.w	800603e <main+0x62a>
 8005b1a:	689a      	ldr	r2, [r3, #8]
 8005b1c:	f042 0203 	orr.w	r2, r2, #3
 8005b20:	609a      	str	r2, [r3, #8]
 8005b22:	6820      	ldr	r0, [r4, #0]
 8005b24:	f241 3188 	movw	r1, #5000	; 0x1388
 8005b28:	e017      	b.n	8005b5a <main+0x146>
 8005b2a:	bf00      	nop
 8005b2c:	e000ed00 	.word	0xe000ed00
 8005b30:	05fa0300 	.word	0x05fa0300
 8005b34:	40007000 	.word	0x40007000
 8005b38:	20000000 	.word	0x20000000
 8005b3c:	000f4240 	.word	0x000f4240
 8005b40:	40021000 	.word	0x40021000
 8005b44:	200000ac 	.word	0x200000ac
 8005b48:	06600070 	.word	0x06600070
 8005b4c:	40022000 	.word	0x40022000
 8005b50:	6822      	ldr	r2, [r4, #0]
 8005b52:	1a12      	subs	r2, r2, r0
 8005b54:	428a      	cmp	r2, r1
 8005b56:	f200 8272 	bhi.w	800603e <main+0x62a>
 8005b5a:	689a      	ldr	r2, [r3, #8]
 8005b5c:	f002 020c 	and.w	r2, r2, #12
 8005b60:	2a0c      	cmp	r2, #12
 8005b62:	d1f5      	bne.n	8005b50 <main+0x13c>
 8005b64:	689a      	ldr	r2, [r3, #8]
 8005b66:	f012 0ff0 	tst.w	r2, #240	; 0xf0
 8005b6a:	d003      	beq.n	8005b74 <main+0x160>
 8005b6c:	689a      	ldr	r2, [r3, #8]
 8005b6e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8005b72:	609a      	str	r2, [r3, #8]
 8005b74:	4a9b      	ldr	r2, [pc, #620]	; (8005de4 <main+0x3d0>)
 8005b76:	6813      	ldr	r3, [r2, #0]
 8005b78:	f003 0307 	and.w	r3, r3, #7
 8005b7c:	2b04      	cmp	r3, #4
 8005b7e:	d90b      	bls.n	8005b98 <main+0x184>
 8005b80:	6813      	ldr	r3, [r2, #0]
 8005b82:	f023 0307 	bic.w	r3, r3, #7
 8005b86:	f043 0304 	orr.w	r3, r3, #4
 8005b8a:	6013      	str	r3, [r2, #0]
 8005b8c:	6813      	ldr	r3, [r2, #0]
 8005b8e:	f003 0307 	and.w	r3, r3, #7
 8005b92:	2b04      	cmp	r3, #4
 8005b94:	f040 8253 	bne.w	800603e <main+0x62a>
 8005b98:	4d93      	ldr	r5, [pc, #588]	; (8005de8 <main+0x3d4>)
 8005b9a:	f8df 8270 	ldr.w	r8, [pc, #624]	; 8005e0c <main+0x3f8>
 8005b9e:	68ab      	ldr	r3, [r5, #8]
 8005ba0:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8005ba4:	60ab      	str	r3, [r5, #8]
 8005ba6:	68ab      	ldr	r3, [r5, #8]
 8005ba8:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 8005bac:	60ab      	str	r3, [r5, #8]
 8005bae:	f7fc fa61 	bl	8002074 <HAL_RCC_GetSysClockFreq>
 8005bb2:	68ab      	ldr	r3, [r5, #8]
 8005bb4:	4a8d      	ldr	r2, [pc, #564]	; (8005dec <main+0x3d8>)
 8005bb6:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8005bba:	4443      	add	r3, r8
 8005bbc:	f893 3f48 	ldrb.w	r3, [r3, #3912]	; 0xf48
 8005bc0:	f003 031f 	and.w	r3, r3, #31
 8005bc4:	fa20 f303 	lsr.w	r3, r0, r3
 8005bc8:	6850      	ldr	r0, [r2, #4]
 8005bca:	6013      	str	r3, [r2, #0]
 8005bcc:	f7fc fc34 	bl	8002438 <HAL_InitTick>
 8005bd0:	4606      	mov	r6, r0
 8005bd2:	2800      	cmp	r0, #0
 8005bd4:	f040 8233 	bne.w	800603e <main+0x62a>
 8005bd8:	e9cd 003c 	strd	r0, r0, [sp, #240]	; 0xf0
 8005bdc:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8005bde:	4b84      	ldr	r3, [pc, #528]	; (8005df0 <main+0x3dc>)
 8005be0:	f042 0202 	orr.w	r2, r2, #2
 8005be4:	64ea      	str	r2, [r5, #76]	; 0x4c
 8005be6:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8005be8:	f002 0202 	and.w	r2, r2, #2
 8005bec:	9206      	str	r2, [sp, #24]
 8005bee:	9a06      	ldr	r2, [sp, #24]
 8005bf0:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8005bf2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8005bf6:	64ea      	str	r2, [r5, #76]	; 0x4c
 8005bf8:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8005bfa:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8005bfe:	9205      	str	r2, [sp, #20]
 8005c00:	9a05      	ldr	r2, [sp, #20]
 8005c02:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8005c04:	f042 0201 	orr.w	r2, r2, #1
 8005c08:	64ea      	str	r2, [r5, #76]	; 0x4c
 8005c0a:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8005c0c:	f04f 4a90 	mov.w	sl, #1207959552	; 0x48000000
 8005c10:	f002 0201 	and.w	r2, r2, #1
 8005c14:	9204      	str	r2, [sp, #16]
 8005c16:	f04f 0910 	mov.w	r9, #16
 8005c1a:	f241 2201 	movw	r2, #4609	; 0x1201
 8005c1e:	2702      	movs	r7, #2
 8005c20:	9904      	ldr	r1, [sp, #16]
 8005c22:	629a      	str	r2, [r3, #40]	; 0x28
 8005c24:	f44f 1c88 	mov.w	ip, #1114112	; 0x110000
 8005c28:	4618      	mov	r0, r3
 8005c2a:	f8ca 9028 	str.w	r9, [sl, #40]	; 0x28
 8005c2e:	2308      	movs	r3, #8
 8005c30:	a939      	add	r1, sp, #228	; 0xe4
 8005c32:	e9cd 3c39 	strd	r3, ip, [sp, #228]	; 0xe4
 8005c36:	f04f 0b09 	mov.w	fp, #9
 8005c3a:	973b      	str	r7, [sp, #236]	; 0xec
 8005c3c:	f7fc fa70 	bl	8002120 <HAL_GPIO_Init>
 8005c40:	486c      	ldr	r0, [pc, #432]	; (8005df4 <main+0x3e0>)
 8005c42:	f8cd b0e4 	str.w	fp, [sp, #228]	; 0xe4
 8005c46:	a939      	add	r1, sp, #228	; 0xe4
 8005c48:	e9cd 673a 	strd	r6, r7, [sp, #232]	; 0xe8
 8005c4c:	f7fc fa68 	bl	8002120 <HAL_GPIO_Init>
 8005c50:	f44f 1c44 	mov.w	ip, #3211264	; 0x310000
 8005c54:	f44f 6e00 	mov.w	lr, #2048	; 0x800
 8005c58:	a939      	add	r1, sp, #228	; 0xe4
 8005c5a:	4650      	mov	r0, sl
 8005c5c:	e9cd ec39 	strd	lr, ip, [sp, #228]	; 0xe4
 8005c60:	973b      	str	r7, [sp, #236]	; 0xec
 8005c62:	f7fc fa5d 	bl	8002120 <HAL_GPIO_Init>
 8005c66:	4b62      	ldr	r3, [pc, #392]	; (8005df0 <main+0x3dc>)
 8005c68:	963b      	str	r6, [sp, #236]	; 0xec
 8005c6a:	4618      	mov	r0, r3
 8005c6c:	2301      	movs	r3, #1
 8005c6e:	f241 2201 	movw	r2, #4609	; 0x1201
 8005c72:	a939      	add	r1, sp, #228	; 0xe4
 8005c74:	933a      	str	r3, [sp, #232]	; 0xe8
 8005c76:	2303      	movs	r3, #3
 8005c78:	9239      	str	r2, [sp, #228]	; 0xe4
 8005c7a:	933c      	str	r3, [sp, #240]	; 0xf0
 8005c7c:	f7fc fa50 	bl	8002120 <HAL_GPIO_Init>
 8005c80:	4b5b      	ldr	r3, [pc, #364]	; (8005df0 <main+0x3dc>)
 8005c82:	9739      	str	r7, [sp, #228]	; 0xe4
 8005c84:	4618      	mov	r0, r3
 8005c86:	a939      	add	r1, sp, #228	; 0xe4
 8005c88:	e9cd 673a 	strd	r6, r7, [sp, #232]	; 0xe8
 8005c8c:	f7fc fa48 	bl	8002120 <HAL_GPIO_Init>
 8005c90:	2301      	movs	r3, #1
 8005c92:	e9cd 373a 	strd	r3, r7, [sp, #232]	; 0xe8
 8005c96:	a939      	add	r1, sp, #228	; 0xe4
 8005c98:	2303      	movs	r3, #3
 8005c9a:	4650      	mov	r0, sl
 8005c9c:	933c      	str	r3, [sp, #240]	; 0xf0
 8005c9e:	f8cd 90e4 	str.w	r9, [sp, #228]	; 0xe4
 8005ca2:	f7fc fa3d 	bl	8002120 <HAL_GPIO_Init>
 8005ca6:	4631      	mov	r1, r6
 8005ca8:	4658      	mov	r0, fp
 8005caa:	f7fa fa91 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8005cae:	4658      	mov	r0, fp
 8005cb0:	f7fc fbb6 	bl	8002420 <HAL_NVIC_EnableIRQ.part.0>
 8005cb4:	4631      	mov	r1, r6
 8005cb6:	2028      	movs	r0, #40	; 0x28
 8005cb8:	f7fa fa8a 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8005cbc:	2028      	movs	r0, #40	; 0x28
 8005cbe:	f7fc fbaf 	bl	8002420 <HAL_NVIC_EnableIRQ.part.0>
 8005cc2:	6cab      	ldr	r3, [r5, #72]	; 0x48
 8005cc4:	f043 0301 	orr.w	r3, r3, #1
 8005cc8:	64ab      	str	r3, [r5, #72]	; 0x48
 8005cca:	6cab      	ldr	r3, [r5, #72]	; 0x48
 8005ccc:	f003 0301 	and.w	r3, r3, #1
 8005cd0:	4631      	mov	r1, r6
 8005cd2:	9303      	str	r3, [sp, #12]
 8005cd4:	200c      	movs	r0, #12
 8005cd6:	9b03      	ldr	r3, [sp, #12]
 8005cd8:	f7fa fa7a 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8005cdc:	200c      	movs	r0, #12
 8005cde:	f7fc fb9f 	bl	8002420 <HAL_NVIC_EnableIRQ.part.0>
 8005ce2:	4631      	mov	r1, r6
 8005ce4:	200d      	movs	r0, #13
 8005ce6:	f7fa fa73 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8005cea:	200d      	movs	r0, #13
 8005cec:	f7fc fb98 	bl	8002420 <HAL_NVIC_EnableIRQ.part.0>
 8005cf0:	4631      	mov	r1, r6
 8005cf2:	4648      	mov	r0, r9
 8005cf4:	f7fa fa6c 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8005cf8:	4648      	mov	r0, r9
 8005cfa:	f7fc fb91 	bl	8002420 <HAL_NVIC_EnableIRQ.part.0>
 8005cfe:	4631      	mov	r1, r6
 8005d00:	2011      	movs	r0, #17
 8005d02:	f7fa fa65 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8005d06:	2011      	movs	r0, #17
 8005d08:	f7fc fb8a 	bl	8002420 <HAL_NVIC_EnableIRQ.part.0>
 8005d0c:	493a      	ldr	r1, [pc, #232]	; (8005df8 <main+0x3e4>)
 8005d0e:	483b      	ldr	r0, [pc, #236]	; (8005dfc <main+0x3e8>)
 8005d10:	f8c4 6154 	str.w	r6, [r4, #340]	; 0x154
 8005d14:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8005d18:	230c      	movs	r3, #12
 8005d1a:	f44f 7c40 	mov.w	ip, #768	; 0x300
 8005d1e:	e9c4 6656 	strd	r6, r6, [r4, #344]	; 0x158
 8005d22:	e9c4 665a 	strd	r6, r6, [r4, #360]	; 0x168
 8005d26:	e9c4 1253 	strd	r1, r2, [r4, #332]	; 0x14c
 8005d2a:	e9c4 3c58 	strd	r3, ip, [r4, #352]	; 0x160
 8005d2e:	f8c4 6170 	str.w	r6, [r4, #368]	; 0x170
 8005d32:	f7fc fc67 	bl	8002604 <HAL_UART_Init.constprop.0>
 8005d36:	2800      	cmp	r0, #0
 8005d38:	f040 8181 	bne.w	800603e <main+0x62a>
 8005d3c:	4b30      	ldr	r3, [pc, #192]	; (8005e00 <main+0x3ec>)
 8005d3e:	f894 2141 	ldrb.w	r2, [r4, #321]	; 0x141
 8005d42:	f8c4 00ec 	str.w	r0, [r4, #236]	; 0xec
 8005d46:	f44f 7c82 	mov.w	ip, #260	; 0x104
 8005d4a:	f44f 6170 	mov.w	r1, #3840	; 0xf00
 8005d4e:	2608      	movs	r6, #8
 8005d50:	e9c4 3c39 	strd	r3, ip, [r4, #228]	; 0xe4
 8005d54:	f8c4 10f0 	str.w	r1, [r4, #240]	; 0xf0
 8005d58:	f44f 7c00 	mov.w	ip, #512	; 0x200
 8005d5c:	2107      	movs	r1, #7
 8005d5e:	f8c4 6118 	str.w	r6, [r4, #280]	; 0x118
 8005d62:	e9c4 003d 	strd	r0, r0, [r4, #244]	; 0xf4
 8005d66:	e9c4 0040 	strd	r0, r0, [r4, #256]	; 0x100
 8005d6a:	e9c4 0042 	strd	r0, r0, [r4, #264]	; 0x108
 8005d6e:	f8c4 0114 	str.w	r0, [r4, #276]	; 0x114
 8005d72:	f002 06ff 	and.w	r6, r2, #255	; 0xff
 8005d76:	f8c4 c0fc 	str.w	ip, [r4, #252]	; 0xfc
 8005d7a:	f8c4 1110 	str.w	r1, [r4, #272]	; 0x110
 8005d7e:	2a00      	cmp	r2, #0
 8005d80:	f000 83cf 	beq.w	8006522 <main+0xb0e>
 8005d84:	f884 7141 	strb.w	r7, [r4, #321]	; 0x141
 8005d88:	681a      	ldr	r2, [r3, #0]
 8005d8a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005d8e:	601a      	str	r2, [r3, #0]
 8005d90:	f640 7108 	movw	r1, #3848	; 0xf08
 8005d94:	f44f 7241 	mov.w	r2, #772	; 0x304
 8005d98:	f8d4 510c 	ldr.w	r5, [r4, #268]	; 0x10c
 8005d9c:	f405 5500 	and.w	r5, r5, #8192	; 0x2000
 8005da0:	4308      	orrs	r0, r1
 8005da2:	4315      	orrs	r5, r2
 8005da4:	2601      	movs	r6, #1
 8005da6:	2200      	movs	r2, #0
 8005da8:	601d      	str	r5, [r3, #0]
 8005daa:	6058      	str	r0, [r3, #4]
 8005dac:	f8c4 2144 	str.w	r2, [r4, #324]	; 0x144
 8005db0:	f884 6141 	strb.w	r6, [r4, #321]	; 0x141
 8005db4:	f894 3211 	ldrb.w	r3, [r4, #529]	; 0x211
 8005db8:	4912      	ldr	r1, [pc, #72]	; (8005e04 <main+0x3f0>)
 8005dba:	4813      	ldr	r0, [pc, #76]	; (8005e08 <main+0x3f4>)
 8005dbc:	f8c4 21f0 	str.w	r2, [r4, #496]	; 0x1f0
 8005dc0:	e9c4 2278 	strd	r2, r2, [r4, #480]	; 0x1e0
 8005dc4:	e9c4 227a 	strd	r2, r2, [r4, #488]	; 0x1e8
 8005dc8:	22a4      	movs	r2, #164	; 0xa4
 8005dca:	e9c4 1275 	strd	r1, r2, [r4, #468]	; 0x1d4
 8005dce:	f8c4 61dc 	str.w	r6, [r4, #476]	; 0x1dc
 8005dd2:	f003 05ff 	and.w	r5, r3, #255	; 0xff
 8005dd6:	f8c4 01d0 	str.w	r0, [r4, #464]	; 0x1d0
 8005dda:	2b00      	cmp	r3, #0
 8005ddc:	f000 8362 	beq.w	80064a4 <main+0xa90>
 8005de0:	e016      	b.n	8005e10 <main+0x3fc>
 8005de2:	bf00      	nop
 8005de4:	40022000 	.word	0x40022000
 8005de8:	40021000 	.word	0x40021000
 8005dec:	20000000 	.word	0x20000000
 8005df0:	48000400 	.word	0x48000400
 8005df4:	48001c00 	.word	0x48001c00
 8005df8:	40004400 	.word	0x40004400
 8005dfc:	200001f8 	.word	0x200001f8
 8005e00:	40013000 	.word	0x40013000
 8005e04:	10909cec 	.word	0x10909cec
 8005e08:	40005800 	.word	0x40005800
 8005e0c:	080079a8 	.word	0x080079a8
 8005e10:	f8d4 31d0 	ldr.w	r3, [r4, #464]	; 0x1d0
 8005e14:	2224      	movs	r2, #36	; 0x24
 8005e16:	f884 2211 	strb.w	r2, [r4, #529]	; 0x211
 8005e1a:	6819      	ldr	r1, [r3, #0]
 8005e1c:	f8d4 21d4 	ldr.w	r2, [r4, #468]	; 0x1d4
 8005e20:	f021 0101 	bic.w	r1, r1, #1
 8005e24:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8005e28:	6019      	str	r1, [r3, #0]
 8005e2a:	611a      	str	r2, [r3, #16]
 8005e2c:	689a      	ldr	r2, [r3, #8]
 8005e2e:	f8d4 11dc 	ldr.w	r1, [r4, #476]	; 0x1dc
 8005e32:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8005e36:	2901      	cmp	r1, #1
 8005e38:	609a      	str	r2, [r3, #8]
 8005e3a:	f8d4 21d8 	ldr.w	r2, [r4, #472]	; 0x1d8
 8005e3e:	f000 8300 	beq.w	8006442 <main+0xa2e>
 8005e42:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 8005e46:	2902      	cmp	r1, #2
 8005e48:	609a      	str	r2, [r3, #8]
 8005e4a:	bf04      	itt	eq
 8005e4c:	f44f 6200 	moveq.w	r2, #2048	; 0x800
 8005e50:	605a      	streq	r2, [r3, #4]
 8005e52:	6859      	ldr	r1, [r3, #4]
 8005e54:	f8d4 51e8 	ldr.w	r5, [r4, #488]	; 0x1e8
 8005e58:	e9d4 2678 	ldrd	r2, r6, [r4, #480]	; 0x1e0
 8005e5c:	f041 7100 	orr.w	r1, r1, #33554432	; 0x2000000
 8005e60:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8005e64:	6059      	str	r1, [r3, #4]
 8005e66:	4332      	orrs	r2, r6
 8005e68:	68d8      	ldr	r0, [r3, #12]
 8005e6a:	f8d4 11ec 	ldr.w	r1, [r4, #492]	; 0x1ec
 8005e6e:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8005e72:	f8d4 51f0 	ldr.w	r5, [r4, #496]	; 0x1f0
 8005e76:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
 8005e7a:	4329      	orrs	r1, r5
 8005e7c:	60d8      	str	r0, [r3, #12]
 8005e7e:	60da      	str	r2, [r3, #12]
 8005e80:	6019      	str	r1, [r3, #0]
 8005e82:	6819      	ldr	r1, [r3, #0]
 8005e84:	2200      	movs	r2, #0
 8005e86:	f041 0101 	orr.w	r1, r1, #1
 8005e8a:	2020      	movs	r0, #32
 8005e8c:	6019      	str	r1, [r3, #0]
 8005e8e:	f8c4 2214 	str.w	r2, [r4, #532]	; 0x214
 8005e92:	f884 0211 	strb.w	r0, [r4, #529]	; 0x211
 8005e96:	f8c4 2200 	str.w	r2, [r4, #512]	; 0x200
 8005e9a:	f884 2212 	strb.w	r2, [r4, #530]	; 0x212
 8005e9e:	f894 1211 	ldrb.w	r1, [r4, #529]	; 0x211
 8005ea2:	4281      	cmp	r1, r0
 8005ea4:	b2cd      	uxtb	r5, r1
 8005ea6:	f040 80ca 	bne.w	800603e <main+0x62a>
 8005eaa:	f894 1210 	ldrb.w	r1, [r4, #528]	; 0x210
 8005eae:	2901      	cmp	r1, #1
 8005eb0:	f000 80c5 	beq.w	800603e <main+0x62a>
 8005eb4:	2024      	movs	r0, #36	; 0x24
 8005eb6:	f884 0211 	strb.w	r0, [r4, #529]	; 0x211
 8005eba:	6819      	ldr	r1, [r3, #0]
 8005ebc:	f021 0101 	bic.w	r1, r1, #1
 8005ec0:	6019      	str	r1, [r3, #0]
 8005ec2:	6819      	ldr	r1, [r3, #0]
 8005ec4:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
 8005ec8:	6019      	str	r1, [r3, #0]
 8005eca:	6819      	ldr	r1, [r3, #0]
 8005ecc:	6019      	str	r1, [r3, #0]
 8005ece:	6819      	ldr	r1, [r3, #0]
 8005ed0:	f041 0101 	orr.w	r1, r1, #1
 8005ed4:	6019      	str	r1, [r3, #0]
 8005ed6:	f884 5211 	strb.w	r5, [r4, #529]	; 0x211
 8005eda:	f894 1211 	ldrb.w	r1, [r4, #529]	; 0x211
 8005ede:	f884 2210 	strb.w	r2, [r4, #528]	; 0x210
 8005ee2:	2920      	cmp	r1, #32
 8005ee4:	b2cd      	uxtb	r5, r1
 8005ee6:	f040 80aa 	bne.w	800603e <main+0x62a>
 8005eea:	f884 0211 	strb.w	r0, [r4, #529]	; 0x211
 8005eee:	6819      	ldr	r1, [r3, #0]
 8005ef0:	4886      	ldr	r0, [pc, #536]	; (800610c <main+0x6f8>)
 8005ef2:	4e87      	ldr	r6, [pc, #540]	; (8006110 <main+0x6fc>)
 8005ef4:	f021 0101 	bic.w	r1, r1, #1
 8005ef8:	6019      	str	r1, [r3, #0]
 8005efa:	6819      	ldr	r1, [r3, #0]
 8005efc:	f421 6170 	bic.w	r1, r1, #3840	; 0xf00
 8005f00:	6019      	str	r1, [r3, #0]
 8005f02:	6819      	ldr	r1, [r3, #0]
 8005f04:	f041 0101 	orr.w	r1, r1, #1
 8005f08:	6019      	str	r1, [r3, #0]
 8005f0a:	f44f 2161 	mov.w	r1, #921600	; 0xe1000
 8005f0e:	230c      	movs	r3, #12
 8005f10:	f884 5211 	strb.w	r5, [r4, #529]	; 0x211
 8005f14:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8005f18:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8005f1c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8005f20:	e9c0 6100 	strd	r6, r1, [r0]
 8005f24:	f884 2210 	strb.w	r2, [r4, #528]	; 0x210
 8005f28:	6102      	str	r2, [r0, #16]
 8005f2a:	6143      	str	r3, [r0, #20]
 8005f2c:	f7fc fb6a 	bl	8002604 <HAL_UART_Init.constprop.0>
 8005f30:	4605      	mov	r5, r0
 8005f32:	2800      	cmp	r0, #0
 8005f34:	f040 8083 	bne.w	800603e <main+0x62a>
 8005f38:	222c      	movs	r2, #44	; 0x2c
 8005f3a:	4629      	mov	r1, r5
 8005f3c:	a817      	add	r0, sp, #92	; 0x5c
 8005f3e:	f000 fe0c 	bl	8006b5a <memset>
 8005f42:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8005f46:	60a5      	str	r5, [r4, #8]
 8005f48:	f5a6 3688 	sub.w	r6, r6, #69632	; 0x11000
 8005f4c:	201f      	movs	r0, #31
 8005f4e:	f240 32e7 	movw	r2, #999	; 0x3e7
 8005f52:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8005f56:	e9c4 5507 	strd	r5, r5, [r4, #28]
 8005f5a:	e9c4 0203 	strd	r0, r2, [r4, #12]
 8005f5e:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 8005f62:	6066      	str	r6, [r4, #4]
 8005f64:	2b00      	cmp	r3, #0
 8005f66:	f000 8243 	beq.w	80063f0 <main+0x9dc>
 8005f6a:	6863      	ldr	r3, [r4, #4]
 8005f6c:	2702      	movs	r7, #2
 8005f6e:	f04f 0aca 	mov.w	sl, #202	; 0xca
 8005f72:	f04f 0953 	mov.w	r9, #83	; 0x53
 8005f76:	f884 7025 	strb.w	r7, [r4, #37]	; 0x25
 8005f7a:	f8c3 a024 	str.w	sl, [r3, #36]	; 0x24
 8005f7e:	f8c3 9024 	str.w	r9, [r3, #36]	; 0x24
 8005f82:	f7fa fb0b 	bl	800059c <RTC_EnterInitMode.constprop.0>
 8005f86:	2800      	cmp	r0, #0
 8005f88:	d159      	bne.n	800603e <main+0x62a>
 8005f8a:	e9d4 1301 	ldrd	r1, r3, [r4, #4]
 8005f8e:	688a      	ldr	r2, [r1, #8]
 8005f90:	6965      	ldr	r5, [r4, #20]
 8005f92:	69e0      	ldr	r0, [r4, #28]
 8005f94:	f422 02e0 	bic.w	r2, r2, #7340032	; 0x700000
 8005f98:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005f9c:	608a      	str	r2, [r1, #8]
 8005f9e:	688a      	ldr	r2, [r1, #8]
 8005fa0:	432b      	orrs	r3, r5
 8005fa2:	4303      	orrs	r3, r0
 8005fa4:	4313      	orrs	r3, r2
 8005fa6:	6922      	ldr	r2, [r4, #16]
 8005fa8:	608b      	str	r3, [r1, #8]
 8005faa:	610a      	str	r2, [r1, #16]
 8005fac:	690b      	ldr	r3, [r1, #16]
 8005fae:	68e2      	ldr	r2, [r4, #12]
 8005fb0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005fb4:	610b      	str	r3, [r1, #16]
 8005fb6:	f7fa fac9 	bl	800054c <RTC_ExitInitMode.constprop.0>
 8005fba:	2800      	cmp	r0, #0
 8005fbc:	d13f      	bne.n	800603e <main+0x62a>
 8005fbe:	6863      	ldr	r3, [r4, #4]
 8005fc0:	6a22      	ldr	r2, [r4, #32]
 8005fc2:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
 8005fc4:	69a0      	ldr	r0, [r4, #24]
 8005fc6:	f894 c024 	ldrb.w	ip, [r4, #36]	; 0x24
 8005fca:	f021 0103 	bic.w	r1, r1, #3
 8005fce:	64d9      	str	r1, [r3, #76]	; 0x4c
 8005fd0:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
 8005fd2:	2501      	movs	r5, #1
 8005fd4:	4302      	orrs	r2, r0
 8005fd6:	430a      	orrs	r2, r1
 8005fd8:	26ff      	movs	r6, #255	; 0xff
 8005fda:	45ac      	cmp	ip, r5
 8005fdc:	64da      	str	r2, [r3, #76]	; 0x4c
 8005fde:	625e      	str	r6, [r3, #36]	; 0x24
 8005fe0:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8005fe4:	d02b      	beq.n	800603e <main+0x62a>
 8005fe6:	f884 7025 	strb.w	r7, [r4, #37]	; 0x25
 8005fea:	f8c3 a024 	str.w	sl, [r3, #36]	; 0x24
 8005fee:	f8c3 9024 	str.w	r9, [r3, #36]	; 0x24
 8005ff2:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8005ff6:	f7fa fad1 	bl	800059c <RTC_EnterInitMode.constprop.0>
 8005ffa:	6863      	ldr	r3, [r4, #4]
 8005ffc:	b9d8      	cbnz	r0, 8006036 <main+0x622>
 8005ffe:	689a      	ldr	r2, [r3, #8]
 8006000:	6018      	str	r0, [r3, #0]
 8006002:	689a      	ldr	r2, [r3, #8]
 8006004:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8006008:	609a      	str	r2, [r3, #8]
 800600a:	689a      	ldr	r2, [r3, #8]
 800600c:	609a      	str	r2, [r3, #8]
 800600e:	f7fa fa9d 	bl	800054c <RTC_ExitInitMode.constprop.0>
 8006012:	6863      	ldr	r3, [r4, #4]
 8006014:	625e      	str	r6, [r3, #36]	; 0x24
 8006016:	b978      	cbnz	r0, 8006038 <main+0x624>
 8006018:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 800601c:	f884 7025 	strb.w	r7, [r4, #37]	; 0x25
 8006020:	f8c3 a024 	str.w	sl, [r3, #36]	; 0x24
 8006024:	f8c3 9024 	str.w	r9, [r3, #36]	; 0x24
 8006028:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 800602c:	f7fa fab6 	bl	800059c <RTC_EnterInitMode.constprop.0>
 8006030:	6863      	ldr	r3, [r4, #4]
 8006032:	2800      	cmp	r0, #0
 8006034:	d076      	beq.n	8006124 <main+0x710>
 8006036:	625e      	str	r6, [r3, #36]	; 0x24
 8006038:	2300      	movs	r3, #0
 800603a:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 800603e:	f7fc fa25 	bl	800248c <__NVIC_SystemReset>
 8006042:	4b34      	ldr	r3, [pc, #208]	; (8006114 <main+0x700>)
 8006044:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8006046:	f042 0201 	orr.w	r2, r2, #1
 800604a:	661a      	str	r2, [r3, #96]	; 0x60
 800604c:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 800604e:	f002 0201 	and.w	r2, r2, #1
 8006052:	9208      	str	r2, [sp, #32]
 8006054:	9a08      	ldr	r2, [sp, #32]
 8006056:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8006058:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800605c:	659a      	str	r2, [r3, #88]	; 0x58
 800605e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006060:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006064:	9307      	str	r3, [sp, #28]
 8006066:	9b07      	ldr	r3, [sp, #28]
 8006068:	e4e5      	b.n	8005a36 <main+0x22>
 800606a:	f003 0303 	and.w	r3, r3, #3
 800606e:	2b02      	cmp	r3, #2
 8006070:	f47f ad12 	bne.w	8005a98 <main+0x84>
 8006074:	4a27      	ldr	r2, [pc, #156]	; (8006114 <main+0x700>)
 8006076:	4c28      	ldr	r4, [pc, #160]	; (8006118 <main+0x704>)
 8006078:	6813      	ldr	r3, [r2, #0]
 800607a:	6853      	ldr	r3, [r2, #4]
 800607c:	f023 53f8 	bic.w	r3, r3, #520093696	; 0x1f000000
 8006080:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8006084:	6053      	str	r3, [r2, #4]
 8006086:	4b23      	ldr	r3, [pc, #140]	; (8006114 <main+0x700>)
 8006088:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800608c:	f042 0201 	orr.w	r2, r2, #1
 8006090:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 8006094:	6820      	ldr	r0, [r4, #0]
 8006096:	e003      	b.n	80060a0 <main+0x68c>
 8006098:	6822      	ldr	r2, [r4, #0]
 800609a:	1a12      	subs	r2, r2, r0
 800609c:	2a02      	cmp	r2, #2
 800609e:	d8ce      	bhi.n	800603e <main+0x62a>
 80060a0:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 80060a4:	0795      	lsls	r5, r2, #30
 80060a6:	d5f7      	bpl.n	8006098 <main+0x684>
 80060a8:	68da      	ldr	r2, [r3, #12]
 80060aa:	f002 0003 	and.w	r0, r2, #3
 80060ae:	2802      	cmp	r0, #2
 80060b0:	f43f ad09 	beq.w	8005ac6 <main+0xb2>
 80060b4:	290c      	cmp	r1, #12
 80060b6:	d0c2      	beq.n	800603e <main+0x62a>
 80060b8:	4b16      	ldr	r3, [pc, #88]	; (8006114 <main+0x700>)
 80060ba:	681a      	ldr	r2, [r3, #0]
 80060bc:	0152      	lsls	r2, r2, #5
 80060be:	d4be      	bmi.n	800603e <main+0x62a>
 80060c0:	681a      	ldr	r2, [r3, #0]
 80060c2:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 80060c6:	601a      	str	r2, [r3, #0]
 80060c8:	6821      	ldr	r1, [r4, #0]
 80060ca:	e003      	b.n	80060d4 <main+0x6c0>
 80060cc:	6822      	ldr	r2, [r4, #0]
 80060ce:	1a52      	subs	r2, r2, r1
 80060d0:	2a02      	cmp	r2, #2
 80060d2:	d8b4      	bhi.n	800603e <main+0x62a>
 80060d4:	681a      	ldr	r2, [r3, #0]
 80060d6:	0197      	lsls	r7, r2, #6
 80060d8:	d4f8      	bmi.n	80060cc <main+0x6b8>
 80060da:	68d8      	ldr	r0, [r3, #12]
 80060dc:	490f      	ldr	r1, [pc, #60]	; (800611c <main+0x708>)
 80060de:	4a10      	ldr	r2, [pc, #64]	; (8006120 <main+0x70c>)
 80060e0:	4d0c      	ldr	r5, [pc, #48]	; (8006114 <main+0x700>)
 80060e2:	4001      	ands	r1, r0
 80060e4:	430a      	orrs	r2, r1
 80060e6:	60da      	str	r2, [r3, #12]
 80060e8:	681a      	ldr	r2, [r3, #0]
 80060ea:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80060ee:	601a      	str	r2, [r3, #0]
 80060f0:	68da      	ldr	r2, [r3, #12]
 80060f2:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80060f6:	60da      	str	r2, [r3, #12]
 80060f8:	6822      	ldr	r2, [r4, #0]
 80060fa:	682b      	ldr	r3, [r5, #0]
 80060fc:	019e      	lsls	r6, r3, #6
 80060fe:	f53f acf6 	bmi.w	8005aee <main+0xda>
 8006102:	6823      	ldr	r3, [r4, #0]
 8006104:	1a9b      	subs	r3, r3, r2
 8006106:	2b02      	cmp	r3, #2
 8006108:	d9f7      	bls.n	80060fa <main+0x6e6>
 800610a:	e798      	b.n	800603e <main+0x62a>
 800610c:	200003d0 	.word	0x200003d0
 8006110:	40013800 	.word	0x40013800
 8006114:	40021000 	.word	0x40021000
 8006118:	200000ac 	.word	0x200000ac
 800611c:	019d808c 	.word	0x019d808c
 8006120:	38000a02 	.word	0x38000a02
 8006124:	f242 1201 	movw	r2, #8449	; 0x2101
 8006128:	605a      	str	r2, [r3, #4]
 800612a:	f7fa fa0f 	bl	800054c <RTC_ExitInitMode.constprop.0>
 800612e:	6862      	ldr	r2, [r4, #4]
 8006130:	4603      	mov	r3, r0
 8006132:	6256      	str	r6, [r2, #36]	; 0x24
 8006134:	2800      	cmp	r0, #0
 8006136:	f47f af7f 	bne.w	8006038 <main+0x624>
 800613a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800613e:	a817      	add	r0, sp, #92	; 0x5c
 8006140:	e9cd 331a 	strd	r3, r3, [sp, #104]	; 0x68
 8006144:	e9cd 331e 	strd	r3, r3, [sp, #120]	; 0x78
 8006148:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 800614c:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8006150:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 8006154:	f88d 305e 	strb.w	r3, [sp, #94]	; 0x5e
 8006158:	9318      	str	r3, [sp, #96]	; 0x60
 800615a:	931c      	str	r3, [sp, #112]	; 0x70
 800615c:	f88d 5080 	strb.w	r5, [sp, #128]	; 0x80
 8006160:	9221      	str	r2, [sp, #132]	; 0x84
 8006162:	f7fa f90b 	bl	800037c <HAL_RTC_SetAlarm_IT.constprop.0>
 8006166:	2800      	cmp	r0, #0
 8006168:	f47f af69 	bne.w	800603e <main+0x62a>
 800616c:	4eba      	ldr	r6, [pc, #744]	; (8006458 <main+0xa44>)
 800616e:	49bb      	ldr	r1, [pc, #748]	; (800645c <main+0xa48>)
 8006170:	48bb      	ldr	r0, [pc, #748]	; (8006460 <main+0xa4c>)
 8006172:	4dbc      	ldr	r5, [pc, #752]	; (8006464 <main+0xa50>)
 8006174:	f000 fe92 	bl	8006e9c <__wrap_printf>
 8006178:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800617a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800617c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8006180:	f8df c310 	ldr.w	ip, [pc, #784]	; 8006494 <main+0xa80>
 8006184:	f884 7048 	strb.w	r7, [r4, #72]	; 0x48
 8006188:	e885 0003 	stmia.w	r5, {r0, r1}
 800618c:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8006190:	f8c4 c04c 	str.w	ip, [r4, #76]	; 0x4c
 8006194:	f000 fe48 	bl	8006e28 <malloc>
 8006198:	4681      	mov	r9, r0
 800619a:	2800      	cmp	r0, #0
 800619c:	f000 817e 	beq.w	800649c <main+0xa88>
 80061a0:	49b1      	ldr	r1, [pc, #708]	; (8006468 <main+0xa54>)
 80061a2:	22c8      	movs	r2, #200	; 0xc8
 80061a4:	f44f 7092 	mov.w	r0, #292	; 0x124
 80061a8:	f7fa fea6 	bl	8000ef8 <acc_rss_integration_mem_alloc_debug>
 80061ac:	4605      	mov	r5, r0
 80061ae:	2800      	cmp	r0, #0
 80061b0:	f000 814b 	beq.w	800644a <main+0xa36>
 80061b4:	f44f 7292 	mov.w	r2, #292	; 0x124
 80061b8:	2100      	movs	r1, #0
 80061ba:	f000 fcce 	bl	8006b5a <memset>
 80061be:	2301      	movs	r3, #1
 80061c0:	602b      	str	r3, [r5, #0]
 80061c2:	4629      	mov	r1, r5
 80061c4:	f105 0030 	add.w	r0, r5, #48	; 0x30
 80061c8:	462b      	mov	r3, r5
 80061ca:	2200      	movs	r2, #0
 80061cc:	631a      	str	r2, [r3, #48]	; 0x30
 80061ce:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80061d2:	3308      	adds	r3, #8
 80061d4:	4298      	cmp	r0, r3
 80061d6:	d1f9      	bne.n	80061cc <main+0x7b8>
 80061d8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80061dc:	f509 6300 	add.w	r3, r9, #2048	; 0x800
 80061e0:	e9c5 2902 	strd	r2, r9, [r5, #8]
 80061e4:	616b      	str	r3, [r5, #20]
 80061e6:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80061ea:	f44f 63ff 	mov.w	r3, #2040	; 0x7f8
 80061ee:	612a      	str	r2, [r5, #16]
 80061f0:	61ab      	str	r3, [r5, #24]
 80061f2:	f04f 3201 	mov.w	r2, #16843009	; 0x1010101
 80061f6:	f240 1301 	movw	r3, #257	; 0x101
 80061fa:	61ea      	str	r2, [r5, #28]
 80061fc:	f8c5 9004 	str.w	r9, [r5, #4]
 8006200:	842b      	strh	r3, [r5, #32]
 8006202:	2200      	movs	r2, #0
 8006204:	630a      	str	r2, [r1, #48]	; 0x30
 8006206:	f881 2034 	strb.w	r2, [r1, #52]	; 0x34
 800620a:	3108      	adds	r1, #8
 800620c:	4288      	cmp	r0, r1
 800620e:	d1f9      	bne.n	8006204 <main+0x7f0>
 8006210:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 8006214:	4f95      	ldr	r7, [pc, #596]	; (800646c <main+0xa58>)
 8006216:	846a      	strh	r2, [r5, #34]	; 0x22
 8006218:	626a      	str	r2, [r5, #36]	; 0x24
 800621a:	852a      	strh	r2, [r5, #40]	; 0x28
 800621c:	4a94      	ldr	r2, [pc, #592]	; (8006470 <main+0xa5c>)
 800621e:	2b01      	cmp	r3, #1
 8006220:	e9c4 720a 	strd	r7, r2, [r4, #40]	; 0x28
 8006224:	d90f      	bls.n	8006246 <main+0x832>
 8006226:	6c26      	ldr	r6, [r4, #64]	; 0x40
 8006228:	4a92      	ldr	r2, [pc, #584]	; (8006474 <main+0xa60>)
 800622a:	4993      	ldr	r1, [pc, #588]	; (8006478 <main+0xa64>)
 800622c:	2002      	movs	r0, #2
 800622e:	47b0      	blx	r6
 8006230:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 8006234:	2b01      	cmp	r3, #1
 8006236:	d906      	bls.n	8006246 <main+0x832>
 8006238:	6c26      	ldr	r6, [r4, #64]	; 0x40
 800623a:	4a90      	ldr	r2, [pc, #576]	; (800647c <main+0xa68>)
 800623c:	498e      	ldr	r1, [pc, #568]	; (8006478 <main+0xa64>)
 800623e:	f1a7 0370 	sub.w	r3, r7, #112	; 0x70
 8006242:	2002      	movs	r0, #2
 8006244:	47b0      	blx	r6
 8006246:	4f8e      	ldr	r7, [pc, #568]	; (8006480 <main+0xa6c>)
 8006248:	f8df b24c 	ldr.w	fp, [pc, #588]	; 8006498 <main+0xa84>
 800624c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8006250:	61bb      	str	r3, [r7, #24]
 8006252:	f7fc f92d 	bl	80024b0 <acc_integration_sleep_us.constprop.0>
 8006256:	2200      	movs	r2, #0
 8006258:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 800625a:	2b05      	cmp	r3, #5
 800625c:	d905      	bls.n	800626a <main+0x856>
 800625e:	e042      	b.n	80062e6 <main+0x8d2>
 8006260:	3301      	adds	r3, #1
 8006262:	b29b      	uxth	r3, r3
 8006264:	2b06      	cmp	r3, #6
 8006266:	846b      	strh	r3, [r5, #34]	; 0x22
 8006268:	d03f      	beq.n	80062ea <main+0x8d6>
 800626a:	18e9      	adds	r1, r5, r3
 800626c:	7f09      	ldrb	r1, [r1, #28]
 800626e:	2900      	cmp	r1, #0
 8006270:	d0f6      	beq.n	8006260 <main+0x84c>
 8006272:	2a00      	cmp	r2, #0
 8006274:	d175      	bne.n	8006362 <main+0x94e>
 8006276:	0059      	lsls	r1, r3, #1
 8006278:	f44f 5680 	mov.w	r6, #4096	; 0x1000
 800627c:	f04f 0a01 	mov.w	sl, #1
 8006280:	440b      	add	r3, r1
 8006282:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 8006286:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800628a:	4628      	mov	r0, r5
 800628c:	681b      	ldr	r3, [r3, #0]
 800628e:	4798      	blx	r3
 8006290:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 8006292:	8d2a      	ldrh	r2, [r5, #40]	; 0x28
 8006294:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8006296:	eb03 0e43 	add.w	lr, r3, r3, lsl #1
 800629a:	eb08 0e8e 	add.w	lr, r8, lr, lsl #2
 800629e:	eb05 0c02 	add.w	ip, r5, r2
 80062a2:	3101      	adds	r1, #1
 80062a4:	f89e eff8 	ldrb.w	lr, [lr, #4088]	; 0xff8
 80062a8:	6269      	str	r1, [r5, #36]	; 0x24
 80062aa:	3801      	subs	r0, #1
 80062ac:	f88c e02a 	strb.w	lr, [ip, #42]	; 0x2a
 80062b0:	0059      	lsls	r1, r3, #1
 80062b2:	2803      	cmp	r0, #3
 80062b4:	f200 81e5 	bhi.w	8006682 <main+0xc6e>
 80062b8:	e8df f000 	tbb	[pc, r0]
 80062bc:	67802d48 	.word	0x67802d48
 80062c0:	681a      	ldr	r2, [r3, #0]
 80062c2:	4970      	ldr	r1, [pc, #448]	; (8006484 <main+0xa70>)
 80062c4:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80062c8:	601a      	str	r2, [r3, #0]
 80062ca:	68da      	ldr	r2, [r3, #12]
 80062cc:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80062d0:	60da      	str	r2, [r3, #12]
 80062d2:	6822      	ldr	r2, [r4, #0]
 80062d4:	680b      	ldr	r3, [r1, #0]
 80062d6:	0198      	lsls	r0, r3, #6
 80062d8:	f53f ac09 	bmi.w	8005aee <main+0xda>
 80062dc:	6823      	ldr	r3, [r4, #0]
 80062de:	1a9b      	subs	r3, r3, r2
 80062e0:	2b02      	cmp	r3, #2
 80062e2:	d9f7      	bls.n	80062d4 <main+0x8c0>
 80062e4:	e6ab      	b.n	800603e <main+0x62a>
 80062e6:	2b06      	cmp	r3, #6
 80062e8:	d1c3      	bne.n	8006272 <main+0x85e>
 80062ea:	4628      	mov	r0, r5
 80062ec:	f7fa fdfc 	bl	8000ee8 <acc_rss_integration_mem_free>
 80062f0:	4a63      	ldr	r2, [pc, #396]	; (8006480 <main+0xa6c>)
 80062f2:	2300      	movs	r3, #0
 80062f4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80062f8:	e9c4 330a 	strd	r3, r3, [r4, #40]	; 0x28
 80062fc:	6291      	str	r1, [r2, #40]	; 0x28
 80062fe:	f7fc f8d7 	bl	80024b0 <acc_integration_sleep_us.constprop.0>
 8006302:	4648      	mov	r0, r9
 8006304:	f000 fd98 	bl	8006e38 <free>
 8006308:	485f      	ldr	r0, [pc, #380]	; (8006488 <main+0xa74>)
 800630a:	f000 fdb1 	bl	8006e70 <__wrap_puts>
 800630e:	485f      	ldr	r0, [pc, #380]	; (800648c <main+0xa78>)
 8006310:	f000 fdae 	bl	8006e70 <__wrap_puts>
 8006314:	e7fe      	b.n	8006314 <main+0x900>
 8006316:	6822      	ldr	r2, [r4, #0]
 8006318:	693b      	ldr	r3, [r7, #16]
 800631a:	0718      	lsls	r0, r3, #28
 800631c:	d505      	bpl.n	800632a <main+0x916>
 800631e:	693a      	ldr	r2, [r7, #16]
 8006320:	f082 0208 	eor.w	r2, r2, #8
 8006324:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 8006328:	e796      	b.n	8006258 <main+0x844>
 800632a:	6823      	ldr	r3, [r4, #0]
 800632c:	1a9b      	subs	r3, r3, r2
 800632e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8006332:	d2f4      	bcs.n	800631e <main+0x90a>
 8006334:	b672      	cpsid	i
 8006336:	693b      	ldr	r3, [r7, #16]
 8006338:	0719      	lsls	r1, r3, #28
 800633a:	d400      	bmi.n	800633e <main+0x92a>
 800633c:	bf30      	wfi
 800633e:	b662      	cpsie	i
 8006340:	f3bf 8f6f 	isb	sy
 8006344:	693b      	ldr	r3, [r7, #16]
 8006346:	071b      	lsls	r3, r3, #28
 8006348:	d4e9      	bmi.n	800631e <main+0x90a>
 800634a:	e7ee      	b.n	800632a <main+0x916>
 800634c:	62be      	str	r6, [r7, #40]	; 0x28
 800634e:	f7fc f8af 	bl	80024b0 <acc_integration_sleep_us.constprop.0>
 8006352:	61be      	str	r6, [r7, #24]
 8006354:	f7fc f8ac 	bl	80024b0 <acc_integration_sleep_us.constprop.0>
 8006358:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 800635a:	2b05      	cmp	r3, #5
 800635c:	d843      	bhi.n	80063e6 <main+0x9d2>
 800635e:	2200      	movs	r2, #0
 8006360:	e783      	b.n	800626a <main+0x856>
 8006362:	f04f 0a0c 	mov.w	sl, #12
 8006366:	fb0a 8303 	mla	r3, sl, r3, r8
 800636a:	493f      	ldr	r1, [pc, #252]	; (8006468 <main+0xa54>)
 800636c:	f8d3 3ffc 	ldr.w	r3, [r3, #4092]	; 0xffc
 8006370:	6c26      	ldr	r6, [r4, #64]	; 0x40
 8006372:	465a      	mov	r2, fp
 8006374:	2000      	movs	r0, #0
 8006376:	47b0      	blx	r6
 8006378:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 800637a:	8d2a      	ldrh	r2, [r5, #40]	; 0x28
 800637c:	fb0a 8603 	mla	r6, sl, r3, r8
 8006380:	18a9      	adds	r1, r5, r2
 8006382:	f896 0ff8 	ldrb.w	r0, [r6, #4088]	; 0xff8
 8006386:	f881 002a 	strb.w	r0, [r1, #42]	; 0x2a
 800638a:	210c      	movs	r1, #12
 800638c:	fb01 8103 	mla	r1, r1, r3, r8
 8006390:	eb05 00c2 	add.w	r0, r5, r2, lsl #3
 8006394:	3301      	adds	r3, #1
 8006396:	f8d1 1ffc 	ldr.w	r1, [r1, #4092]	; 0xffc
 800639a:	6301      	str	r1, [r0, #48]	; 0x30
 800639c:	b29b      	uxth	r3, r3
 800639e:	1c51      	adds	r1, r2, #1
 80063a0:	2b05      	cmp	r3, #5
 80063a2:	f04f 0200 	mov.w	r2, #0
 80063a6:	f880 2034 	strb.w	r2, [r0, #52]	; 0x34
 80063aa:	846b      	strh	r3, [r5, #34]	; 0x22
 80063ac:	8529      	strh	r1, [r5, #40]	; 0x28
 80063ae:	626a      	str	r2, [r5, #36]	; 0x24
 80063b0:	f67f af5b 	bls.w	800626a <main+0x856>
 80063b4:	2b06      	cmp	r3, #6
 80063b6:	f47f af5e 	bne.w	8006276 <main+0x862>
 80063ba:	e796      	b.n	80062ea <main+0x8d6>
 80063bc:	210c      	movs	r1, #12
 80063be:	fb01 8103 	mla	r1, r1, r3, r8
 80063c2:	eb05 00c2 	add.w	r0, r5, r2, lsl #3
 80063c6:	3301      	adds	r3, #1
 80063c8:	f8d1 1ffc 	ldr.w	r1, [r1, #4092]	; 0xffc
 80063cc:	6301      	str	r1, [r0, #48]	; 0x30
 80063ce:	b29b      	uxth	r3, r3
 80063d0:	1c51      	adds	r1, r2, #1
 80063d2:	2b05      	cmp	r3, #5
 80063d4:	f04f 0200 	mov.w	r2, #0
 80063d8:	f880 a034 	strb.w	sl, [r0, #52]	; 0x34
 80063dc:	846b      	strh	r3, [r5, #34]	; 0x22
 80063de:	8529      	strh	r1, [r5, #40]	; 0x28
 80063e0:	626a      	str	r2, [r5, #36]	; 0x24
 80063e2:	f67f af42 	bls.w	800626a <main+0x856>
 80063e6:	2b06      	cmp	r3, #6
 80063e8:	f43f af7f 	beq.w	80062ea <main+0x8d6>
 80063ec:	0059      	lsls	r1, r3, #1
 80063ee:	e747      	b.n	8006280 <main+0x86c>
 80063f0:	2254      	movs	r2, #84	; 0x54
 80063f2:	a83a      	add	r0, sp, #232	; 0xe8
 80063f4:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 80063f8:	f000 fbaf 	bl	8006b5a <memset>
 80063fc:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8006400:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006404:	a839      	add	r0, sp, #228	; 0xe4
 8006406:	9239      	str	r2, [sp, #228]	; 0xe4
 8006408:	934f      	str	r3, [sp, #316]	; 0x13c
 800640a:	f7fb fc73 	bl	8001cf4 <HAL_RCCEx_PeriphCLKConfig>
 800640e:	4601      	mov	r1, r0
 8006410:	2800      	cmp	r0, #0
 8006412:	f47f ae14 	bne.w	800603e <main+0x62a>
 8006416:	4a1b      	ldr	r2, [pc, #108]	; (8006484 <main+0xa70>)
 8006418:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 800641c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006420:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8006424:	9001      	str	r0, [sp, #4]
 8006426:	2003      	movs	r0, #3
 8006428:	f7f9 fed2 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 800642c:	2003      	movs	r0, #3
 800642e:	f7fb fff7 	bl	8002420 <HAL_NVIC_EnableIRQ.part.0>
 8006432:	9901      	ldr	r1, [sp, #4]
 8006434:	2029      	movs	r0, #41	; 0x29
 8006436:	f7f9 fecb 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 800643a:	2029      	movs	r0, #41	; 0x29
 800643c:	f7fb fff0 	bl	8002420 <HAL_NVIC_EnableIRQ.part.0>
 8006440:	e593      	b.n	8005f6a <main+0x556>
 8006442:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006446:	609a      	str	r2, [r3, #8]
 8006448:	e503      	b.n	8005e52 <main+0x43e>
 800644a:	4811      	ldr	r0, [pc, #68]	; (8006490 <main+0xa7c>)
 800644c:	f000 fd10 	bl	8006e70 <__wrap_puts>
 8006450:	4648      	mov	r0, r9
 8006452:	f000 fcf1 	bl	8006e38 <free>
 8006456:	e75d      	b.n	8006314 <main+0x900>
 8006458:	08008958 	.word	0x08008958
 800645c:	08008900 	.word	0x08008900
 8006460:	0800b310 	.word	0x0800b310
 8006464:	200000dc 	.word	0x200000dc
 8006468:	0800a574 	.word	0x0800a574
 800646c:	08008970 	.word	0x08008970
 8006470:	20000360 	.word	0x20000360
 8006474:	0800b35c 	.word	0x0800b35c
 8006478:	0800a2cc 	.word	0x0800a2cc
 800647c:	0800b374 	.word	0x0800b374
 8006480:	48000400 	.word	0x48000400
 8006484:	40021000 	.word	0x40021000
 8006488:	0800b3a8 	.word	0x0800b3a8
 800648c:	0800b3cc 	.word	0x0800b3cc
 8006490:	0800b3e4 	.word	0x0800b3e4
 8006494:	016e3600 	.word	0x016e3600
 8006498:	0800b388 	.word	0x0800b388
 800649c:	487c      	ldr	r0, [pc, #496]	; (8006690 <main+0xc7c>)
 800649e:	f000 fce7 	bl	8006e70 <__wrap_puts>
 80064a2:	e737      	b.n	8006314 <main+0x900>
 80064a4:	2258      	movs	r2, #88	; 0x58
 80064a6:	4629      	mov	r1, r5
 80064a8:	a823      	add	r0, sp, #140	; 0x8c
 80064aa:	e9cd 5512 	strd	r5, r5, [sp, #72]	; 0x48
 80064ae:	e9cd 5514 	strd	r5, r5, [sp, #80]	; 0x50
 80064b2:	f884 5210 	strb.w	r5, [r4, #528]	; 0x210
 80064b6:	9516      	str	r5, [sp, #88]	; 0x58
 80064b8:	f000 fb4f 	bl	8006b5a <memset>
 80064bc:	2380      	movs	r3, #128	; 0x80
 80064be:	a822      	add	r0, sp, #136	; 0x88
 80064c0:	952f      	str	r5, [sp, #188]	; 0xbc
 80064c2:	9322      	str	r3, [sp, #136]	; 0x88
 80064c4:	f7fb fc16 	bl	8001cf4 <HAL_RCCEx_PeriphCLKConfig>
 80064c8:	4607      	mov	r7, r0
 80064ca:	2800      	cmp	r0, #0
 80064cc:	f47f adb7 	bne.w	800603e <main+0x62a>
 80064d0:	4d70      	ldr	r5, [pc, #448]	; (8006694 <main+0xc80>)
 80064d2:	4871      	ldr	r0, [pc, #452]	; (8006698 <main+0xc84>)
 80064d4:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 80064d6:	f043 0302 	orr.w	r3, r3, #2
 80064da:	64eb      	str	r3, [r5, #76]	; 0x4c
 80064dc:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 80064de:	9614      	str	r6, [sp, #80]	; 0x50
 80064e0:	f003 0302 	and.w	r3, r3, #2
 80064e4:	930c      	str	r3, [sp, #48]	; 0x30
 80064e6:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 80064ea:	9312      	str	r3, [sp, #72]	; 0x48
 80064ec:	2312      	movs	r3, #18
 80064ee:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80064f0:	9313      	str	r3, [sp, #76]	; 0x4c
 80064f2:	2203      	movs	r2, #3
 80064f4:	a912      	add	r1, sp, #72	; 0x48
 80064f6:	2304      	movs	r3, #4
 80064f8:	e9cd 2315 	strd	r2, r3, [sp, #84]	; 0x54
 80064fc:	f7fb fe10 	bl	8002120 <HAL_GPIO_Init>
 8006500:	6dab      	ldr	r3, [r5, #88]	; 0x58
 8006502:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8006506:	65ab      	str	r3, [r5, #88]	; 0x58
 8006508:	6dab      	ldr	r3, [r5, #88]	; 0x58
 800650a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800650e:	930b      	str	r3, [sp, #44]	; 0x2c
 8006510:	4639      	mov	r1, r7
 8006512:	2021      	movs	r0, #33	; 0x21
 8006514:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006516:	f7f9 fe5b 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 800651a:	2021      	movs	r0, #33	; 0x21
 800651c:	f7fb ff80 	bl	8002420 <HAL_NVIC_EnableIRQ.part.0>
 8006520:	e476      	b.n	8005e10 <main+0x3fc>
 8006522:	f884 6140 	strb.w	r6, [r4, #320]	; 0x140
 8006526:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8006528:	f8df b178 	ldr.w	fp, [pc, #376]	; 80066a4 <main+0xc90>
 800652c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8006530:	662b      	str	r3, [r5, #96]	; 0x60
 8006532:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8006534:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8006538:	930a      	str	r3, [sp, #40]	; 0x28
 800653a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800653c:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 800653e:	f043 0301 	orr.w	r3, r3, #1
 8006542:	64eb      	str	r3, [r5, #76]	; 0x4c
 8006544:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8006546:	970e      	str	r7, [sp, #56]	; 0x38
 8006548:	f003 0301 	and.w	r3, r3, #1
 800654c:	9309      	str	r3, [sp, #36]	; 0x24
 800654e:	2103      	movs	r1, #3
 8006550:	4650      	mov	r0, sl
 8006552:	22e0      	movs	r2, #224	; 0xe0
 8006554:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006556:	9110      	str	r1, [sp, #64]	; 0x40
 8006558:	2305      	movs	r3, #5
 800655a:	a90d      	add	r1, sp, #52	; 0x34
 800655c:	920d      	str	r2, [sp, #52]	; 0x34
 800655e:	9311      	str	r3, [sp, #68]	; 0x44
 8006560:	960f      	str	r6, [sp, #60]	; 0x3c
 8006562:	2580      	movs	r5, #128	; 0x80
 8006564:	f7fb fddc 	bl	8002120 <HAL_GPIO_Init>
 8006568:	f44f 6a80 	mov.w	sl, #1024	; 0x400
 800656c:	4a4b      	ldr	r2, [pc, #300]	; (800669c <main+0xc88>)
 800656e:	f8c4 226c 	str.w	r2, [r4, #620]	; 0x26c
 8006572:	f44f 7380 	mov.w	r3, #256	; 0x100
 8006576:	2101      	movs	r1, #1
 8006578:	4658      	mov	r0, fp
 800657a:	e9c4 669d 	strd	r6, r6, [r4, #628]	; 0x274
 800657e:	e9c4 66a2 	strd	r6, r6, [r4, #648]	; 0x288
 8006582:	e9c4 539f 	strd	r5, r3, [r4, #636]	; 0x27c
 8006586:	f8c4 1270 	str.w	r1, [r4, #624]	; 0x270
 800658a:	f8c4 a284 	str.w	sl, [r4, #644]	; 0x284
 800658e:	f7f9 fea3 	bl	80002d8 <HAL_DMA_Init.constprop.0>
 8006592:	4602      	mov	r2, r0
 8006594:	2800      	cmp	r0, #0
 8006596:	f47f ad52 	bne.w	800603e <main+0x62a>
 800659a:	f1ab 0648 	sub.w	r6, fp, #72	; 0x48
 800659e:	2301      	movs	r3, #1
 80065a0:	493f      	ldr	r1, [pc, #252]	; (80066a0 <main+0xc8c>)
 80065a2:	f8c4 b13c 	str.w	fp, [r4, #316]	; 0x13c
 80065a6:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
 80065aa:	f5ab 7bc4 	sub.w	fp, fp, #392	; 0x188
 80065ae:	f44f 7380 	mov.w	r3, #256	; 0x100
 80065b2:	4630      	mov	r0, r6
 80065b4:	e9c4 258c 	strd	r2, r5, [r4, #560]	; 0x230
 80065b8:	e9c4 3a8e 	strd	r3, sl, [r4, #568]	; 0x238
 80065bc:	e9c4 2290 	strd	r2, r2, [r4, #576]	; 0x240
 80065c0:	f8c4 922c 	str.w	r9, [r4, #556]	; 0x22c
 80065c4:	f8c4 b294 	str.w	fp, [r4, #660]	; 0x294
 80065c8:	f8c4 1224 	str.w	r1, [r4, #548]	; 0x224
 80065cc:	f7f9 fe84 	bl	80002d8 <HAL_DMA_Init.constprop.0>
 80065d0:	2800      	cmp	r0, #0
 80065d2:	f47f ad34 	bne.w	800603e <main+0x62a>
 80065d6:	e9d4 313a 	ldrd	r3, r1, [r4, #232]	; 0xe8
 80065da:	f8d4 20f4 	ldr.w	r2, [r4, #244]	; 0xf4
 80065de:	f8d4 50f8 	ldr.w	r5, [r4, #248]	; 0xf8
 80065e2:	f8d4 c0fc 	ldr.w	ip, [r4, #252]	; 0xfc
 80065e6:	f884 7141 	strb.w	r7, [r4, #321]	; 0x141
 80065ea:	f403 7382 	and.w	r3, r3, #260	; 0x104
 80065ee:	f401 4104 	and.w	r1, r1, #33792	; 0x8400
 80065f2:	ea43 0701 	orr.w	r7, r3, r1
 80065f6:	f002 0202 	and.w	r2, r2, #2
 80065fa:	433a      	orrs	r2, r7
 80065fc:	f005 0501 	and.w	r5, r5, #1
 8006600:	432a      	orrs	r2, r5
 8006602:	f40c 7500 	and.w	r5, ip, #512	; 0x200
 8006606:	ea42 0e05 	orr.w	lr, r2, r5
 800660a:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
 800660e:	f8d4 1108 	ldr.w	r1, [r4, #264]	; 0x108
 8006612:	f8c4 6138 	str.w	r6, [r4, #312]	; 0x138
 8006616:	f8d4 6118 	ldr.w	r6, [r4, #280]	; 0x118
 800661a:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
 800661e:	f8d4 70f0 	ldr.w	r7, [r4, #240]	; 0xf0
 8006622:	f8c4 b24c 	str.w	fp, [r4, #588]	; 0x24c
 8006626:	ea4f 451c 	mov.w	r5, ip, lsr #16
 800662a:	f002 0c38 	and.w	ip, r2, #56	; 0x38
 800662e:	f8d4 2104 	ldr.w	r2, [r4, #260]	; 0x104
 8006632:	f006 0608 	and.w	r6, r6, #8
 8006636:	f001 0110 	and.w	r1, r1, #16
 800663a:	ea4e 0c0c 	orr.w	ip, lr, ip
 800663e:	4331      	orrs	r1, r6
 8006640:	f002 0e80 	and.w	lr, r2, #128	; 0x80
 8006644:	681e      	ldr	r6, [r3, #0]
 8006646:	ea4c 020e 	orr.w	r2, ip, lr
 800664a:	f407 6c70 	and.w	ip, r7, #3840	; 0xf00
 800664e:	f005 0504 	and.w	r5, r5, #4
 8006652:	f026 0640 	bic.w	r6, r6, #64	; 0x40
 8006656:	ea41 010c 	orr.w	r1, r1, ip
 800665a:	f5b7 6fe0 	cmp.w	r7, #1792	; 0x700
 800665e:	ea41 0105 	orr.w	r1, r1, r5
 8006662:	601e      	str	r6, [r3, #0]
 8006664:	d808      	bhi.n	8006678 <main+0xc64>
 8006666:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800666a:	f43f ab95 	beq.w	8005d98 <main+0x384>
 800666e:	2500      	movs	r5, #0
 8006670:	f8c4 510c 	str.w	r5, [r4, #268]	; 0x10c
 8006674:	f7ff bb90 	b.w	8005d98 <main+0x384>
 8006678:	f5b7 6f70 	cmp.w	r7, #3840	; 0xf00
 800667c:	d1f7      	bne.n	800666e <main+0xc5a>
 800667e:	f7ff bb8b 	b.w	8005d98 <main+0x384>
 8006682:	2b05      	cmp	r3, #5
 8006684:	f67f ae6b 	bls.w	800635e <main+0x94a>
 8006688:	2b06      	cmp	r3, #6
 800668a:	f47f adf9 	bne.w	8006280 <main+0x86c>
 800668e:	e62c      	b.n	80062ea <main+0x8d6>
 8006690:	0800b330 	.word	0x0800b330
 8006694:	40021000 	.word	0x40021000
 8006698:	48000400 	.word	0x48000400
 800669c:	4002001c 	.word	0x4002001c
 80066a0:	40020030 	.word	0x40020030
 80066a4:	20000318 	.word	0x20000318

080066a8 <_close>:
int _close(int file)
{
	(void)file;

	return -1;
}
 80066a8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80066ac:	4770      	bx	lr
 80066ae:	bf00      	nop

080066b0 <_lseek>:
	(void)file;
	(void)ptr;
	(void)dir;

	return 0;
}
 80066b0:	2000      	movs	r0, #0
 80066b2:	4770      	bx	lr

080066b4 <_read>:
	(void)file;
	(void)ptr;
	(void)len;

	return -1;
}
 80066b4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80066b8:	4770      	bx	lr
 80066ba:	bf00      	nop

080066bc <_write>:


int _write(int file, char *ptr, int len)
{
 80066bc:	b510      	push	{r4, lr}
	(void)file;
	HAL_UART_Transmit(&DEBUG_UART_HANDLE, (uint8_t *)ptr, len, 0xFFFF);
 80066be:	f64f 73ff 	movw	r3, #65535	; 0xffff
{
 80066c2:	4614      	mov	r4, r2
	HAL_UART_Transmit(&DEBUG_UART_HANDLE, (uint8_t *)ptr, len, 0xFFFF);
 80066c4:	4802      	ldr	r0, [pc, #8]	; (80066d0 <_write+0x14>)
 80066c6:	b292      	uxth	r2, r2
 80066c8:	f7fe fd3c 	bl	8005144 <HAL_UART_Transmit>
	return len;
}
 80066cc:	4620      	mov	r0, r4
 80066ce:	bd10      	pop	{r4, pc}
 80066d0:	200003d0 	.word	0x200003d0

080066d4 <Reset_Handler>:
 80066d4:	f8df d034 	ldr.w	sp, [pc, #52]	; 800670c <LoopForever+0x2>
 80066d8:	f7fe fd96 	bl	8005208 <SystemInit>
 80066dc:	480c      	ldr	r0, [pc, #48]	; (8006710 <LoopForever+0x6>)
 80066de:	490d      	ldr	r1, [pc, #52]	; (8006714 <LoopForever+0xa>)
 80066e0:	4a0d      	ldr	r2, [pc, #52]	; (8006718 <LoopForever+0xe>)
 80066e2:	2300      	movs	r3, #0
 80066e4:	e002      	b.n	80066ec <LoopCopyDataInit>

080066e6 <CopyDataInit>:
 80066e6:	58d4      	ldr	r4, [r2, r3]
 80066e8:	50c4      	str	r4, [r0, r3]
 80066ea:	3304      	adds	r3, #4

080066ec <LoopCopyDataInit>:
 80066ec:	18c4      	adds	r4, r0, r3
 80066ee:	428c      	cmp	r4, r1
 80066f0:	d3f9      	bcc.n	80066e6 <CopyDataInit>
 80066f2:	4a0a      	ldr	r2, [pc, #40]	; (800671c <LoopForever+0x12>)
 80066f4:	4c0a      	ldr	r4, [pc, #40]	; (8006720 <LoopForever+0x16>)
 80066f6:	2300      	movs	r3, #0
 80066f8:	e001      	b.n	80066fe <LoopFillZerobss>

080066fa <FillZerobss>:
 80066fa:	6013      	str	r3, [r2, #0]
 80066fc:	3204      	adds	r2, #4

080066fe <LoopFillZerobss>:
 80066fe:	42a2      	cmp	r2, r4
 8006700:	d3fb      	bcc.n	80066fa <FillZerobss>
 8006702:	f000 fa03 	bl	8006b0c <__libc_init_array>
 8006706:	f7ff f985 	bl	8005a14 <main>

0800670a <LoopForever>:
 800670a:	e7fe      	b.n	800670a <LoopForever>
 800670c:	20010000 	.word	0x20010000
 8006710:	20000000 	.word	0x20000000
 8006714:	20000090 	.word	0x20000090
 8006718:	0800b508 	.word	0x0800b508
 800671c:	20000090 	.word	0x20000090
 8006720:	20000464 	.word	0x20000464

08006724 <ADC1_IRQHandler>:
 8006724:	e7fe      	b.n	8006724 <ADC1_IRQHandler>
	...

08006728 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8006728:	490c      	ldr	r1, [pc, #48]	; (800675c <_sbrk+0x34>)
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800672a:	4a0d      	ldr	r2, [pc, #52]	; (8006760 <_sbrk+0x38>)
  if (NULL == __sbrk_heap_end)
 800672c:	680b      	ldr	r3, [r1, #0]
{
 800672e:	b510      	push	{r4, lr}
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8006730:	4c0c      	ldr	r4, [pc, #48]	; (8006764 <_sbrk+0x3c>)
 8006732:	1b12      	subs	r2, r2, r4
  if (NULL == __sbrk_heap_end)
 8006734:	b12b      	cbz	r3, 8006742 <_sbrk+0x1a>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8006736:	4418      	add	r0, r3
 8006738:	4290      	cmp	r0, r2
 800673a:	d807      	bhi.n	800674c <_sbrk+0x24>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
 800673c:	6008      	str	r0, [r1, #0]

  return (void *)prev_heap_end;
}
 800673e:	4618      	mov	r0, r3
 8006740:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
 8006742:	4b09      	ldr	r3, [pc, #36]	; (8006768 <_sbrk+0x40>)
 8006744:	600b      	str	r3, [r1, #0]
  if (__sbrk_heap_end + incr > max_heap)
 8006746:	4418      	add	r0, r3
 8006748:	4290      	cmp	r0, r2
 800674a:	d9f7      	bls.n	800673c <_sbrk+0x14>
    errno = ENOMEM;
 800674c:	f000 f80e 	bl	800676c <__errno>
 8006750:	230c      	movs	r3, #12
 8006752:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8006754:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8006758:	4618      	mov	r0, r3
 800675a:	bd10      	pop	{r4, pc}
 800675c:	200003c4 	.word	0x200003c4
 8006760:	20010000 	.word	0x20010000
 8006764:	00001400 	.word	0x00001400
 8006768:	20000468 	.word	0x20000468

0800676c <__errno>:
 800676c:	4b01      	ldr	r3, [pc, #4]	; (8006774 <__errno+0x8>)
 800676e:	6818      	ldr	r0, [r3, #0]
 8006770:	4770      	bx	lr
 8006772:	bf00      	nop
 8006774:	20000028 	.word	0x20000028

08006778 <__sflush_r>:
 8006778:	898a      	ldrh	r2, [r1, #12]
 800677a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800677e:	4605      	mov	r5, r0
 8006780:	0710      	lsls	r0, r2, #28
 8006782:	460c      	mov	r4, r1
 8006784:	d458      	bmi.n	8006838 <__sflush_r+0xc0>
 8006786:	684b      	ldr	r3, [r1, #4]
 8006788:	2b00      	cmp	r3, #0
 800678a:	dc05      	bgt.n	8006798 <__sflush_r+0x20>
 800678c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800678e:	2b00      	cmp	r3, #0
 8006790:	dc02      	bgt.n	8006798 <__sflush_r+0x20>
 8006792:	2000      	movs	r0, #0
 8006794:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006798:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800679a:	2e00      	cmp	r6, #0
 800679c:	d0f9      	beq.n	8006792 <__sflush_r+0x1a>
 800679e:	2300      	movs	r3, #0
 80067a0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80067a4:	682f      	ldr	r7, [r5, #0]
 80067a6:	602b      	str	r3, [r5, #0]
 80067a8:	d032      	beq.n	8006810 <__sflush_r+0x98>
 80067aa:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80067ac:	89a3      	ldrh	r3, [r4, #12]
 80067ae:	075a      	lsls	r2, r3, #29
 80067b0:	d505      	bpl.n	80067be <__sflush_r+0x46>
 80067b2:	6863      	ldr	r3, [r4, #4]
 80067b4:	1ac0      	subs	r0, r0, r3
 80067b6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80067b8:	b10b      	cbz	r3, 80067be <__sflush_r+0x46>
 80067ba:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80067bc:	1ac0      	subs	r0, r0, r3
 80067be:	2300      	movs	r3, #0
 80067c0:	4602      	mov	r2, r0
 80067c2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80067c4:	6a21      	ldr	r1, [r4, #32]
 80067c6:	4628      	mov	r0, r5
 80067c8:	47b0      	blx	r6
 80067ca:	1c43      	adds	r3, r0, #1
 80067cc:	89a3      	ldrh	r3, [r4, #12]
 80067ce:	d106      	bne.n	80067de <__sflush_r+0x66>
 80067d0:	6829      	ldr	r1, [r5, #0]
 80067d2:	291d      	cmp	r1, #29
 80067d4:	d82c      	bhi.n	8006830 <__sflush_r+0xb8>
 80067d6:	4a2a      	ldr	r2, [pc, #168]	; (8006880 <__sflush_r+0x108>)
 80067d8:	40ca      	lsrs	r2, r1
 80067da:	07d6      	lsls	r6, r2, #31
 80067dc:	d528      	bpl.n	8006830 <__sflush_r+0xb8>
 80067de:	2200      	movs	r2, #0
 80067e0:	6062      	str	r2, [r4, #4]
 80067e2:	04d9      	lsls	r1, r3, #19
 80067e4:	6922      	ldr	r2, [r4, #16]
 80067e6:	6022      	str	r2, [r4, #0]
 80067e8:	d504      	bpl.n	80067f4 <__sflush_r+0x7c>
 80067ea:	1c42      	adds	r2, r0, #1
 80067ec:	d101      	bne.n	80067f2 <__sflush_r+0x7a>
 80067ee:	682b      	ldr	r3, [r5, #0]
 80067f0:	b903      	cbnz	r3, 80067f4 <__sflush_r+0x7c>
 80067f2:	6560      	str	r0, [r4, #84]	; 0x54
 80067f4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80067f6:	602f      	str	r7, [r5, #0]
 80067f8:	2900      	cmp	r1, #0
 80067fa:	d0ca      	beq.n	8006792 <__sflush_r+0x1a>
 80067fc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8006800:	4299      	cmp	r1, r3
 8006802:	d002      	beq.n	800680a <__sflush_r+0x92>
 8006804:	4628      	mov	r0, r5
 8006806:	f000 f9b1 	bl	8006b6c <_free_r>
 800680a:	2000      	movs	r0, #0
 800680c:	6360      	str	r0, [r4, #52]	; 0x34
 800680e:	e7c1      	b.n	8006794 <__sflush_r+0x1c>
 8006810:	6a21      	ldr	r1, [r4, #32]
 8006812:	2301      	movs	r3, #1
 8006814:	4628      	mov	r0, r5
 8006816:	47b0      	blx	r6
 8006818:	1c41      	adds	r1, r0, #1
 800681a:	d1c7      	bne.n	80067ac <__sflush_r+0x34>
 800681c:	682b      	ldr	r3, [r5, #0]
 800681e:	2b00      	cmp	r3, #0
 8006820:	d0c4      	beq.n	80067ac <__sflush_r+0x34>
 8006822:	2b1d      	cmp	r3, #29
 8006824:	d001      	beq.n	800682a <__sflush_r+0xb2>
 8006826:	2b16      	cmp	r3, #22
 8006828:	d101      	bne.n	800682e <__sflush_r+0xb6>
 800682a:	602f      	str	r7, [r5, #0]
 800682c:	e7b1      	b.n	8006792 <__sflush_r+0x1a>
 800682e:	89a3      	ldrh	r3, [r4, #12]
 8006830:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006834:	81a3      	strh	r3, [r4, #12]
 8006836:	e7ad      	b.n	8006794 <__sflush_r+0x1c>
 8006838:	690f      	ldr	r7, [r1, #16]
 800683a:	2f00      	cmp	r7, #0
 800683c:	d0a9      	beq.n	8006792 <__sflush_r+0x1a>
 800683e:	0793      	lsls	r3, r2, #30
 8006840:	680e      	ldr	r6, [r1, #0]
 8006842:	bf08      	it	eq
 8006844:	694b      	ldreq	r3, [r1, #20]
 8006846:	600f      	str	r7, [r1, #0]
 8006848:	bf18      	it	ne
 800684a:	2300      	movne	r3, #0
 800684c:	eba6 0807 	sub.w	r8, r6, r7
 8006850:	608b      	str	r3, [r1, #8]
 8006852:	f1b8 0f00 	cmp.w	r8, #0
 8006856:	dd9c      	ble.n	8006792 <__sflush_r+0x1a>
 8006858:	6a21      	ldr	r1, [r4, #32]
 800685a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800685c:	4643      	mov	r3, r8
 800685e:	463a      	mov	r2, r7
 8006860:	4628      	mov	r0, r5
 8006862:	47b0      	blx	r6
 8006864:	2800      	cmp	r0, #0
 8006866:	dc06      	bgt.n	8006876 <__sflush_r+0xfe>
 8006868:	89a3      	ldrh	r3, [r4, #12]
 800686a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800686e:	81a3      	strh	r3, [r4, #12]
 8006870:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006874:	e78e      	b.n	8006794 <__sflush_r+0x1c>
 8006876:	4407      	add	r7, r0
 8006878:	eba8 0800 	sub.w	r8, r8, r0
 800687c:	e7e9      	b.n	8006852 <__sflush_r+0xda>
 800687e:	bf00      	nop
 8006880:	20400001 	.word	0x20400001

08006884 <_fflush_r>:
 8006884:	b538      	push	{r3, r4, r5, lr}
 8006886:	690b      	ldr	r3, [r1, #16]
 8006888:	4605      	mov	r5, r0
 800688a:	460c      	mov	r4, r1
 800688c:	b913      	cbnz	r3, 8006894 <_fflush_r+0x10>
 800688e:	2500      	movs	r5, #0
 8006890:	4628      	mov	r0, r5
 8006892:	bd38      	pop	{r3, r4, r5, pc}
 8006894:	b118      	cbz	r0, 800689e <_fflush_r+0x1a>
 8006896:	6983      	ldr	r3, [r0, #24]
 8006898:	b90b      	cbnz	r3, 800689e <_fflush_r+0x1a>
 800689a:	f000 f899 	bl	80069d0 <__sinit>
 800689e:	4b14      	ldr	r3, [pc, #80]	; (80068f0 <_fflush_r+0x6c>)
 80068a0:	429c      	cmp	r4, r3
 80068a2:	d11b      	bne.n	80068dc <_fflush_r+0x58>
 80068a4:	686c      	ldr	r4, [r5, #4]
 80068a6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80068aa:	2b00      	cmp	r3, #0
 80068ac:	d0ef      	beq.n	800688e <_fflush_r+0xa>
 80068ae:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80068b0:	07d0      	lsls	r0, r2, #31
 80068b2:	d404      	bmi.n	80068be <_fflush_r+0x3a>
 80068b4:	0599      	lsls	r1, r3, #22
 80068b6:	d402      	bmi.n	80068be <_fflush_r+0x3a>
 80068b8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80068ba:	f000 f94c 	bl	8006b56 <__retarget_lock_acquire_recursive>
 80068be:	4628      	mov	r0, r5
 80068c0:	4621      	mov	r1, r4
 80068c2:	f7ff ff59 	bl	8006778 <__sflush_r>
 80068c6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80068c8:	07da      	lsls	r2, r3, #31
 80068ca:	4605      	mov	r5, r0
 80068cc:	d4e0      	bmi.n	8006890 <_fflush_r+0xc>
 80068ce:	89a3      	ldrh	r3, [r4, #12]
 80068d0:	059b      	lsls	r3, r3, #22
 80068d2:	d4dd      	bmi.n	8006890 <_fflush_r+0xc>
 80068d4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80068d6:	f000 f93f 	bl	8006b58 <__retarget_lock_release_recursive>
 80068da:	e7d9      	b.n	8006890 <_fflush_r+0xc>
 80068dc:	4b05      	ldr	r3, [pc, #20]	; (80068f4 <_fflush_r+0x70>)
 80068de:	429c      	cmp	r4, r3
 80068e0:	d101      	bne.n	80068e6 <_fflush_r+0x62>
 80068e2:	68ac      	ldr	r4, [r5, #8]
 80068e4:	e7df      	b.n	80068a6 <_fflush_r+0x22>
 80068e6:	4b04      	ldr	r3, [pc, #16]	; (80068f8 <_fflush_r+0x74>)
 80068e8:	429c      	cmp	r4, r3
 80068ea:	bf08      	it	eq
 80068ec:	68ec      	ldreq	r4, [r5, #12]
 80068ee:	e7da      	b.n	80068a6 <_fflush_r+0x22>
 80068f0:	0800b4a8 	.word	0x0800b4a8
 80068f4:	0800b4c8 	.word	0x0800b4c8
 80068f8:	0800b488 	.word	0x0800b488

080068fc <fflush>:
 80068fc:	4601      	mov	r1, r0
 80068fe:	b920      	cbnz	r0, 800690a <fflush+0xe>
 8006900:	4b04      	ldr	r3, [pc, #16]	; (8006914 <fflush+0x18>)
 8006902:	4905      	ldr	r1, [pc, #20]	; (8006918 <fflush+0x1c>)
 8006904:	6818      	ldr	r0, [r3, #0]
 8006906:	f000 b8e1 	b.w	8006acc <_fwalk_reent>
 800690a:	4b04      	ldr	r3, [pc, #16]	; (800691c <fflush+0x20>)
 800690c:	6818      	ldr	r0, [r3, #0]
 800690e:	f7ff bfb9 	b.w	8006884 <_fflush_r>
 8006912:	bf00      	nop
 8006914:	0800b4e8 	.word	0x0800b4e8
 8006918:	08006885 	.word	0x08006885
 800691c:	20000028 	.word	0x20000028

08006920 <std>:
 8006920:	2300      	movs	r3, #0
 8006922:	b510      	push	{r4, lr}
 8006924:	4604      	mov	r4, r0
 8006926:	e9c0 3300 	strd	r3, r3, [r0]
 800692a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800692e:	6083      	str	r3, [r0, #8]
 8006930:	8181      	strh	r1, [r0, #12]
 8006932:	6643      	str	r3, [r0, #100]	; 0x64
 8006934:	81c2      	strh	r2, [r0, #14]
 8006936:	6183      	str	r3, [r0, #24]
 8006938:	4619      	mov	r1, r3
 800693a:	2208      	movs	r2, #8
 800693c:	305c      	adds	r0, #92	; 0x5c
 800693e:	f000 f90c 	bl	8006b5a <memset>
 8006942:	4b05      	ldr	r3, [pc, #20]	; (8006958 <std+0x38>)
 8006944:	6263      	str	r3, [r4, #36]	; 0x24
 8006946:	4b05      	ldr	r3, [pc, #20]	; (800695c <std+0x3c>)
 8006948:	62a3      	str	r3, [r4, #40]	; 0x28
 800694a:	4b05      	ldr	r3, [pc, #20]	; (8006960 <std+0x40>)
 800694c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800694e:	4b05      	ldr	r3, [pc, #20]	; (8006964 <std+0x44>)
 8006950:	6224      	str	r4, [r4, #32]
 8006952:	6323      	str	r3, [r4, #48]	; 0x30
 8006954:	bd10      	pop	{r4, pc}
 8006956:	bf00      	nop
 8006958:	08006ce1 	.word	0x08006ce1
 800695c:	08006d03 	.word	0x08006d03
 8006960:	08006d3b 	.word	0x08006d3b
 8006964:	08006d5f 	.word	0x08006d5f

08006968 <_cleanup_r>:
 8006968:	4901      	ldr	r1, [pc, #4]	; (8006970 <_cleanup_r+0x8>)
 800696a:	f000 b8af 	b.w	8006acc <_fwalk_reent>
 800696e:	bf00      	nop
 8006970:	08006885 	.word	0x08006885

08006974 <__sfmoreglue>:
 8006974:	b570      	push	{r4, r5, r6, lr}
 8006976:	1e4a      	subs	r2, r1, #1
 8006978:	2568      	movs	r5, #104	; 0x68
 800697a:	4355      	muls	r5, r2
 800697c:	460e      	mov	r6, r1
 800697e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8006982:	f000 f943 	bl	8006c0c <_malloc_r>
 8006986:	4604      	mov	r4, r0
 8006988:	b140      	cbz	r0, 800699c <__sfmoreglue+0x28>
 800698a:	2100      	movs	r1, #0
 800698c:	e9c0 1600 	strd	r1, r6, [r0]
 8006990:	300c      	adds	r0, #12
 8006992:	60a0      	str	r0, [r4, #8]
 8006994:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8006998:	f000 f8df 	bl	8006b5a <memset>
 800699c:	4620      	mov	r0, r4
 800699e:	bd70      	pop	{r4, r5, r6, pc}

080069a0 <__sfp_lock_acquire>:
 80069a0:	4801      	ldr	r0, [pc, #4]	; (80069a8 <__sfp_lock_acquire+0x8>)
 80069a2:	f000 b8d8 	b.w	8006b56 <__retarget_lock_acquire_recursive>
 80069a6:	bf00      	nop
 80069a8:	2000045c 	.word	0x2000045c

080069ac <__sfp_lock_release>:
 80069ac:	4801      	ldr	r0, [pc, #4]	; (80069b4 <__sfp_lock_release+0x8>)
 80069ae:	f000 b8d3 	b.w	8006b58 <__retarget_lock_release_recursive>
 80069b2:	bf00      	nop
 80069b4:	2000045c 	.word	0x2000045c

080069b8 <__sinit_lock_acquire>:
 80069b8:	4801      	ldr	r0, [pc, #4]	; (80069c0 <__sinit_lock_acquire+0x8>)
 80069ba:	f000 b8cc 	b.w	8006b56 <__retarget_lock_acquire_recursive>
 80069be:	bf00      	nop
 80069c0:	20000457 	.word	0x20000457

080069c4 <__sinit_lock_release>:
 80069c4:	4801      	ldr	r0, [pc, #4]	; (80069cc <__sinit_lock_release+0x8>)
 80069c6:	f000 b8c7 	b.w	8006b58 <__retarget_lock_release_recursive>
 80069ca:	bf00      	nop
 80069cc:	20000457 	.word	0x20000457

080069d0 <__sinit>:
 80069d0:	b510      	push	{r4, lr}
 80069d2:	4604      	mov	r4, r0
 80069d4:	f7ff fff0 	bl	80069b8 <__sinit_lock_acquire>
 80069d8:	69a3      	ldr	r3, [r4, #24]
 80069da:	b11b      	cbz	r3, 80069e4 <__sinit+0x14>
 80069dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80069e0:	f7ff bff0 	b.w	80069c4 <__sinit_lock_release>
 80069e4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80069e8:	6523      	str	r3, [r4, #80]	; 0x50
 80069ea:	4b13      	ldr	r3, [pc, #76]	; (8006a38 <__sinit+0x68>)
 80069ec:	4a13      	ldr	r2, [pc, #76]	; (8006a3c <__sinit+0x6c>)
 80069ee:	681b      	ldr	r3, [r3, #0]
 80069f0:	62a2      	str	r2, [r4, #40]	; 0x28
 80069f2:	42a3      	cmp	r3, r4
 80069f4:	bf04      	itt	eq
 80069f6:	2301      	moveq	r3, #1
 80069f8:	61a3      	streq	r3, [r4, #24]
 80069fa:	4620      	mov	r0, r4
 80069fc:	f000 f820 	bl	8006a40 <__sfp>
 8006a00:	6060      	str	r0, [r4, #4]
 8006a02:	4620      	mov	r0, r4
 8006a04:	f000 f81c 	bl	8006a40 <__sfp>
 8006a08:	60a0      	str	r0, [r4, #8]
 8006a0a:	4620      	mov	r0, r4
 8006a0c:	f000 f818 	bl	8006a40 <__sfp>
 8006a10:	2200      	movs	r2, #0
 8006a12:	60e0      	str	r0, [r4, #12]
 8006a14:	2104      	movs	r1, #4
 8006a16:	6860      	ldr	r0, [r4, #4]
 8006a18:	f7ff ff82 	bl	8006920 <std>
 8006a1c:	68a0      	ldr	r0, [r4, #8]
 8006a1e:	2201      	movs	r2, #1
 8006a20:	2109      	movs	r1, #9
 8006a22:	f7ff ff7d 	bl	8006920 <std>
 8006a26:	68e0      	ldr	r0, [r4, #12]
 8006a28:	2202      	movs	r2, #2
 8006a2a:	2112      	movs	r1, #18
 8006a2c:	f7ff ff78 	bl	8006920 <std>
 8006a30:	2301      	movs	r3, #1
 8006a32:	61a3      	str	r3, [r4, #24]
 8006a34:	e7d2      	b.n	80069dc <__sinit+0xc>
 8006a36:	bf00      	nop
 8006a38:	0800b4e8 	.word	0x0800b4e8
 8006a3c:	08006969 	.word	0x08006969

08006a40 <__sfp>:
 8006a40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006a42:	4607      	mov	r7, r0
 8006a44:	f7ff ffac 	bl	80069a0 <__sfp_lock_acquire>
 8006a48:	4b1e      	ldr	r3, [pc, #120]	; (8006ac4 <__sfp+0x84>)
 8006a4a:	681e      	ldr	r6, [r3, #0]
 8006a4c:	69b3      	ldr	r3, [r6, #24]
 8006a4e:	b913      	cbnz	r3, 8006a56 <__sfp+0x16>
 8006a50:	4630      	mov	r0, r6
 8006a52:	f7ff ffbd 	bl	80069d0 <__sinit>
 8006a56:	3648      	adds	r6, #72	; 0x48
 8006a58:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8006a5c:	3b01      	subs	r3, #1
 8006a5e:	d503      	bpl.n	8006a68 <__sfp+0x28>
 8006a60:	6833      	ldr	r3, [r6, #0]
 8006a62:	b30b      	cbz	r3, 8006aa8 <__sfp+0x68>
 8006a64:	6836      	ldr	r6, [r6, #0]
 8006a66:	e7f7      	b.n	8006a58 <__sfp+0x18>
 8006a68:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8006a6c:	b9d5      	cbnz	r5, 8006aa4 <__sfp+0x64>
 8006a6e:	4b16      	ldr	r3, [pc, #88]	; (8006ac8 <__sfp+0x88>)
 8006a70:	60e3      	str	r3, [r4, #12]
 8006a72:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8006a76:	6665      	str	r5, [r4, #100]	; 0x64
 8006a78:	f000 f86c 	bl	8006b54 <__retarget_lock_init_recursive>
 8006a7c:	f7ff ff96 	bl	80069ac <__sfp_lock_release>
 8006a80:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8006a84:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8006a88:	6025      	str	r5, [r4, #0]
 8006a8a:	61a5      	str	r5, [r4, #24]
 8006a8c:	2208      	movs	r2, #8
 8006a8e:	4629      	mov	r1, r5
 8006a90:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8006a94:	f000 f861 	bl	8006b5a <memset>
 8006a98:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8006a9c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8006aa0:	4620      	mov	r0, r4
 8006aa2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006aa4:	3468      	adds	r4, #104	; 0x68
 8006aa6:	e7d9      	b.n	8006a5c <__sfp+0x1c>
 8006aa8:	2104      	movs	r1, #4
 8006aaa:	4638      	mov	r0, r7
 8006aac:	f7ff ff62 	bl	8006974 <__sfmoreglue>
 8006ab0:	4604      	mov	r4, r0
 8006ab2:	6030      	str	r0, [r6, #0]
 8006ab4:	2800      	cmp	r0, #0
 8006ab6:	d1d5      	bne.n	8006a64 <__sfp+0x24>
 8006ab8:	f7ff ff78 	bl	80069ac <__sfp_lock_release>
 8006abc:	230c      	movs	r3, #12
 8006abe:	603b      	str	r3, [r7, #0]
 8006ac0:	e7ee      	b.n	8006aa0 <__sfp+0x60>
 8006ac2:	bf00      	nop
 8006ac4:	0800b4e8 	.word	0x0800b4e8
 8006ac8:	ffff0001 	.word	0xffff0001

08006acc <_fwalk_reent>:
 8006acc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006ad0:	4606      	mov	r6, r0
 8006ad2:	4688      	mov	r8, r1
 8006ad4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8006ad8:	2700      	movs	r7, #0
 8006ada:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8006ade:	f1b9 0901 	subs.w	r9, r9, #1
 8006ae2:	d505      	bpl.n	8006af0 <_fwalk_reent+0x24>
 8006ae4:	6824      	ldr	r4, [r4, #0]
 8006ae6:	2c00      	cmp	r4, #0
 8006ae8:	d1f7      	bne.n	8006ada <_fwalk_reent+0xe>
 8006aea:	4638      	mov	r0, r7
 8006aec:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006af0:	89ab      	ldrh	r3, [r5, #12]
 8006af2:	2b01      	cmp	r3, #1
 8006af4:	d907      	bls.n	8006b06 <_fwalk_reent+0x3a>
 8006af6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8006afa:	3301      	adds	r3, #1
 8006afc:	d003      	beq.n	8006b06 <_fwalk_reent+0x3a>
 8006afe:	4629      	mov	r1, r5
 8006b00:	4630      	mov	r0, r6
 8006b02:	47c0      	blx	r8
 8006b04:	4307      	orrs	r7, r0
 8006b06:	3568      	adds	r5, #104	; 0x68
 8006b08:	e7e9      	b.n	8006ade <_fwalk_reent+0x12>
	...

08006b0c <__libc_init_array>:
 8006b0c:	b570      	push	{r4, r5, r6, lr}
 8006b0e:	4d0d      	ldr	r5, [pc, #52]	; (8006b44 <__libc_init_array+0x38>)
 8006b10:	4c0d      	ldr	r4, [pc, #52]	; (8006b48 <__libc_init_array+0x3c>)
 8006b12:	1b64      	subs	r4, r4, r5
 8006b14:	10a4      	asrs	r4, r4, #2
 8006b16:	2600      	movs	r6, #0
 8006b18:	42a6      	cmp	r6, r4
 8006b1a:	d109      	bne.n	8006b30 <__libc_init_array+0x24>
 8006b1c:	4d0b      	ldr	r5, [pc, #44]	; (8006b4c <__libc_init_array+0x40>)
 8006b1e:	4c0c      	ldr	r4, [pc, #48]	; (8006b50 <__libc_init_array+0x44>)
 8006b20:	f000 ff34 	bl	800798c <_init>
 8006b24:	1b64      	subs	r4, r4, r5
 8006b26:	10a4      	asrs	r4, r4, #2
 8006b28:	2600      	movs	r6, #0
 8006b2a:	42a6      	cmp	r6, r4
 8006b2c:	d105      	bne.n	8006b3a <__libc_init_array+0x2e>
 8006b2e:	bd70      	pop	{r4, r5, r6, pc}
 8006b30:	f855 3b04 	ldr.w	r3, [r5], #4
 8006b34:	4798      	blx	r3
 8006b36:	3601      	adds	r6, #1
 8006b38:	e7ee      	b.n	8006b18 <__libc_init_array+0xc>
 8006b3a:	f855 3b04 	ldr.w	r3, [r5], #4
 8006b3e:	4798      	blx	r3
 8006b40:	3601      	adds	r6, #1
 8006b42:	e7f2      	b.n	8006b2a <__libc_init_array+0x1e>
 8006b44:	0800b4f8 	.word	0x0800b4f8
 8006b48:	0800b4f8 	.word	0x0800b4f8
 8006b4c:	0800b4f8 	.word	0x0800b4f8
 8006b50:	0800b4fc 	.word	0x0800b4fc

08006b54 <__retarget_lock_init_recursive>:
 8006b54:	4770      	bx	lr

08006b56 <__retarget_lock_acquire_recursive>:
 8006b56:	4770      	bx	lr

08006b58 <__retarget_lock_release_recursive>:
 8006b58:	4770      	bx	lr

08006b5a <memset>:
 8006b5a:	4402      	add	r2, r0
 8006b5c:	4603      	mov	r3, r0
 8006b5e:	4293      	cmp	r3, r2
 8006b60:	d100      	bne.n	8006b64 <memset+0xa>
 8006b62:	4770      	bx	lr
 8006b64:	f803 1b01 	strb.w	r1, [r3], #1
 8006b68:	e7f9      	b.n	8006b5e <memset+0x4>
	...

08006b6c <_free_r>:
 8006b6c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006b6e:	2900      	cmp	r1, #0
 8006b70:	d048      	beq.n	8006c04 <_free_r+0x98>
 8006b72:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006b76:	9001      	str	r0, [sp, #4]
 8006b78:	2b00      	cmp	r3, #0
 8006b7a:	f1a1 0404 	sub.w	r4, r1, #4
 8006b7e:	bfb8      	it	lt
 8006b80:	18e4      	addlt	r4, r4, r3
 8006b82:	f000 f933 	bl	8006dec <__malloc_lock>
 8006b86:	4a20      	ldr	r2, [pc, #128]	; (8006c08 <_free_r+0x9c>)
 8006b88:	9801      	ldr	r0, [sp, #4]
 8006b8a:	6813      	ldr	r3, [r2, #0]
 8006b8c:	4615      	mov	r5, r2
 8006b8e:	b933      	cbnz	r3, 8006b9e <_free_r+0x32>
 8006b90:	6063      	str	r3, [r4, #4]
 8006b92:	6014      	str	r4, [r2, #0]
 8006b94:	b003      	add	sp, #12
 8006b96:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8006b9a:	f000 b92d 	b.w	8006df8 <__malloc_unlock>
 8006b9e:	42a3      	cmp	r3, r4
 8006ba0:	d90b      	bls.n	8006bba <_free_r+0x4e>
 8006ba2:	6821      	ldr	r1, [r4, #0]
 8006ba4:	1862      	adds	r2, r4, r1
 8006ba6:	4293      	cmp	r3, r2
 8006ba8:	bf04      	itt	eq
 8006baa:	681a      	ldreq	r2, [r3, #0]
 8006bac:	685b      	ldreq	r3, [r3, #4]
 8006bae:	6063      	str	r3, [r4, #4]
 8006bb0:	bf04      	itt	eq
 8006bb2:	1852      	addeq	r2, r2, r1
 8006bb4:	6022      	streq	r2, [r4, #0]
 8006bb6:	602c      	str	r4, [r5, #0]
 8006bb8:	e7ec      	b.n	8006b94 <_free_r+0x28>
 8006bba:	461a      	mov	r2, r3
 8006bbc:	685b      	ldr	r3, [r3, #4]
 8006bbe:	b10b      	cbz	r3, 8006bc4 <_free_r+0x58>
 8006bc0:	42a3      	cmp	r3, r4
 8006bc2:	d9fa      	bls.n	8006bba <_free_r+0x4e>
 8006bc4:	6811      	ldr	r1, [r2, #0]
 8006bc6:	1855      	adds	r5, r2, r1
 8006bc8:	42a5      	cmp	r5, r4
 8006bca:	d10b      	bne.n	8006be4 <_free_r+0x78>
 8006bcc:	6824      	ldr	r4, [r4, #0]
 8006bce:	4421      	add	r1, r4
 8006bd0:	1854      	adds	r4, r2, r1
 8006bd2:	42a3      	cmp	r3, r4
 8006bd4:	6011      	str	r1, [r2, #0]
 8006bd6:	d1dd      	bne.n	8006b94 <_free_r+0x28>
 8006bd8:	681c      	ldr	r4, [r3, #0]
 8006bda:	685b      	ldr	r3, [r3, #4]
 8006bdc:	6053      	str	r3, [r2, #4]
 8006bde:	4421      	add	r1, r4
 8006be0:	6011      	str	r1, [r2, #0]
 8006be2:	e7d7      	b.n	8006b94 <_free_r+0x28>
 8006be4:	d902      	bls.n	8006bec <_free_r+0x80>
 8006be6:	230c      	movs	r3, #12
 8006be8:	6003      	str	r3, [r0, #0]
 8006bea:	e7d3      	b.n	8006b94 <_free_r+0x28>
 8006bec:	6825      	ldr	r5, [r4, #0]
 8006bee:	1961      	adds	r1, r4, r5
 8006bf0:	428b      	cmp	r3, r1
 8006bf2:	bf04      	itt	eq
 8006bf4:	6819      	ldreq	r1, [r3, #0]
 8006bf6:	685b      	ldreq	r3, [r3, #4]
 8006bf8:	6063      	str	r3, [r4, #4]
 8006bfa:	bf04      	itt	eq
 8006bfc:	1949      	addeq	r1, r1, r5
 8006bfe:	6021      	streq	r1, [r4, #0]
 8006c00:	6054      	str	r4, [r2, #4]
 8006c02:	e7c7      	b.n	8006b94 <_free_r+0x28>
 8006c04:	b003      	add	sp, #12
 8006c06:	bd30      	pop	{r4, r5, pc}
 8006c08:	200003c8 	.word	0x200003c8

08006c0c <_malloc_r>:
 8006c0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006c0e:	1ccd      	adds	r5, r1, #3
 8006c10:	f025 0503 	bic.w	r5, r5, #3
 8006c14:	3508      	adds	r5, #8
 8006c16:	2d0c      	cmp	r5, #12
 8006c18:	bf38      	it	cc
 8006c1a:	250c      	movcc	r5, #12
 8006c1c:	2d00      	cmp	r5, #0
 8006c1e:	4606      	mov	r6, r0
 8006c20:	db01      	blt.n	8006c26 <_malloc_r+0x1a>
 8006c22:	42a9      	cmp	r1, r5
 8006c24:	d903      	bls.n	8006c2e <_malloc_r+0x22>
 8006c26:	230c      	movs	r3, #12
 8006c28:	6033      	str	r3, [r6, #0]
 8006c2a:	2000      	movs	r0, #0
 8006c2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006c2e:	f000 f8dd 	bl	8006dec <__malloc_lock>
 8006c32:	4921      	ldr	r1, [pc, #132]	; (8006cb8 <_malloc_r+0xac>)
 8006c34:	680a      	ldr	r2, [r1, #0]
 8006c36:	4614      	mov	r4, r2
 8006c38:	b99c      	cbnz	r4, 8006c62 <_malloc_r+0x56>
 8006c3a:	4f20      	ldr	r7, [pc, #128]	; (8006cbc <_malloc_r+0xb0>)
 8006c3c:	683b      	ldr	r3, [r7, #0]
 8006c3e:	b923      	cbnz	r3, 8006c4a <_malloc_r+0x3e>
 8006c40:	4621      	mov	r1, r4
 8006c42:	4630      	mov	r0, r6
 8006c44:	f000 f83c 	bl	8006cc0 <_sbrk_r>
 8006c48:	6038      	str	r0, [r7, #0]
 8006c4a:	4629      	mov	r1, r5
 8006c4c:	4630      	mov	r0, r6
 8006c4e:	f000 f837 	bl	8006cc0 <_sbrk_r>
 8006c52:	1c43      	adds	r3, r0, #1
 8006c54:	d123      	bne.n	8006c9e <_malloc_r+0x92>
 8006c56:	230c      	movs	r3, #12
 8006c58:	6033      	str	r3, [r6, #0]
 8006c5a:	4630      	mov	r0, r6
 8006c5c:	f000 f8cc 	bl	8006df8 <__malloc_unlock>
 8006c60:	e7e3      	b.n	8006c2a <_malloc_r+0x1e>
 8006c62:	6823      	ldr	r3, [r4, #0]
 8006c64:	1b5b      	subs	r3, r3, r5
 8006c66:	d417      	bmi.n	8006c98 <_malloc_r+0x8c>
 8006c68:	2b0b      	cmp	r3, #11
 8006c6a:	d903      	bls.n	8006c74 <_malloc_r+0x68>
 8006c6c:	6023      	str	r3, [r4, #0]
 8006c6e:	441c      	add	r4, r3
 8006c70:	6025      	str	r5, [r4, #0]
 8006c72:	e004      	b.n	8006c7e <_malloc_r+0x72>
 8006c74:	6863      	ldr	r3, [r4, #4]
 8006c76:	42a2      	cmp	r2, r4
 8006c78:	bf0c      	ite	eq
 8006c7a:	600b      	streq	r3, [r1, #0]
 8006c7c:	6053      	strne	r3, [r2, #4]
 8006c7e:	4630      	mov	r0, r6
 8006c80:	f000 f8ba 	bl	8006df8 <__malloc_unlock>
 8006c84:	f104 000b 	add.w	r0, r4, #11
 8006c88:	1d23      	adds	r3, r4, #4
 8006c8a:	f020 0007 	bic.w	r0, r0, #7
 8006c8e:	1ac2      	subs	r2, r0, r3
 8006c90:	d0cc      	beq.n	8006c2c <_malloc_r+0x20>
 8006c92:	1a1b      	subs	r3, r3, r0
 8006c94:	50a3      	str	r3, [r4, r2]
 8006c96:	e7c9      	b.n	8006c2c <_malloc_r+0x20>
 8006c98:	4622      	mov	r2, r4
 8006c9a:	6864      	ldr	r4, [r4, #4]
 8006c9c:	e7cc      	b.n	8006c38 <_malloc_r+0x2c>
 8006c9e:	1cc4      	adds	r4, r0, #3
 8006ca0:	f024 0403 	bic.w	r4, r4, #3
 8006ca4:	42a0      	cmp	r0, r4
 8006ca6:	d0e3      	beq.n	8006c70 <_malloc_r+0x64>
 8006ca8:	1a21      	subs	r1, r4, r0
 8006caa:	4630      	mov	r0, r6
 8006cac:	f000 f808 	bl	8006cc0 <_sbrk_r>
 8006cb0:	3001      	adds	r0, #1
 8006cb2:	d1dd      	bne.n	8006c70 <_malloc_r+0x64>
 8006cb4:	e7cf      	b.n	8006c56 <_malloc_r+0x4a>
 8006cb6:	bf00      	nop
 8006cb8:	200003c8 	.word	0x200003c8
 8006cbc:	200003cc 	.word	0x200003cc

08006cc0 <_sbrk_r>:
 8006cc0:	b538      	push	{r3, r4, r5, lr}
 8006cc2:	4d06      	ldr	r5, [pc, #24]	; (8006cdc <_sbrk_r+0x1c>)
 8006cc4:	2300      	movs	r3, #0
 8006cc6:	4604      	mov	r4, r0
 8006cc8:	4608      	mov	r0, r1
 8006cca:	602b      	str	r3, [r5, #0]
 8006ccc:	f7ff fd2c 	bl	8006728 <_sbrk>
 8006cd0:	1c43      	adds	r3, r0, #1
 8006cd2:	d102      	bne.n	8006cda <_sbrk_r+0x1a>
 8006cd4:	682b      	ldr	r3, [r5, #0]
 8006cd6:	b103      	cbz	r3, 8006cda <_sbrk_r+0x1a>
 8006cd8:	6023      	str	r3, [r4, #0]
 8006cda:	bd38      	pop	{r3, r4, r5, pc}
 8006cdc:	20000460 	.word	0x20000460

08006ce0 <__sread>:
 8006ce0:	b510      	push	{r4, lr}
 8006ce2:	460c      	mov	r4, r1
 8006ce4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006ce8:	f000 f88c 	bl	8006e04 <_read_r>
 8006cec:	2800      	cmp	r0, #0
 8006cee:	bfab      	itete	ge
 8006cf0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8006cf2:	89a3      	ldrhlt	r3, [r4, #12]
 8006cf4:	181b      	addge	r3, r3, r0
 8006cf6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8006cfa:	bfac      	ite	ge
 8006cfc:	6563      	strge	r3, [r4, #84]	; 0x54
 8006cfe:	81a3      	strhlt	r3, [r4, #12]
 8006d00:	bd10      	pop	{r4, pc}

08006d02 <__swrite>:
 8006d02:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006d06:	461f      	mov	r7, r3
 8006d08:	898b      	ldrh	r3, [r1, #12]
 8006d0a:	05db      	lsls	r3, r3, #23
 8006d0c:	4605      	mov	r5, r0
 8006d0e:	460c      	mov	r4, r1
 8006d10:	4616      	mov	r6, r2
 8006d12:	d505      	bpl.n	8006d20 <__swrite+0x1e>
 8006d14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006d18:	2302      	movs	r3, #2
 8006d1a:	2200      	movs	r2, #0
 8006d1c:	f000 f846 	bl	8006dac <_lseek_r>
 8006d20:	89a3      	ldrh	r3, [r4, #12]
 8006d22:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006d26:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006d2a:	81a3      	strh	r3, [r4, #12]
 8006d2c:	4632      	mov	r2, r6
 8006d2e:	463b      	mov	r3, r7
 8006d30:	4628      	mov	r0, r5
 8006d32:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006d36:	f000 b817 	b.w	8006d68 <_write_r>

08006d3a <__sseek>:
 8006d3a:	b510      	push	{r4, lr}
 8006d3c:	460c      	mov	r4, r1
 8006d3e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006d42:	f000 f833 	bl	8006dac <_lseek_r>
 8006d46:	1c43      	adds	r3, r0, #1
 8006d48:	89a3      	ldrh	r3, [r4, #12]
 8006d4a:	bf15      	itete	ne
 8006d4c:	6560      	strne	r0, [r4, #84]	; 0x54
 8006d4e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8006d52:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8006d56:	81a3      	strheq	r3, [r4, #12]
 8006d58:	bf18      	it	ne
 8006d5a:	81a3      	strhne	r3, [r4, #12]
 8006d5c:	bd10      	pop	{r4, pc}

08006d5e <__sclose>:
 8006d5e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006d62:	f000 b813 	b.w	8006d8c <_close_r>
	...

08006d68 <_write_r>:
 8006d68:	b538      	push	{r3, r4, r5, lr}
 8006d6a:	4d07      	ldr	r5, [pc, #28]	; (8006d88 <_write_r+0x20>)
 8006d6c:	4604      	mov	r4, r0
 8006d6e:	4608      	mov	r0, r1
 8006d70:	4611      	mov	r1, r2
 8006d72:	2200      	movs	r2, #0
 8006d74:	602a      	str	r2, [r5, #0]
 8006d76:	461a      	mov	r2, r3
 8006d78:	f7ff fca0 	bl	80066bc <_write>
 8006d7c:	1c43      	adds	r3, r0, #1
 8006d7e:	d102      	bne.n	8006d86 <_write_r+0x1e>
 8006d80:	682b      	ldr	r3, [r5, #0]
 8006d82:	b103      	cbz	r3, 8006d86 <_write_r+0x1e>
 8006d84:	6023      	str	r3, [r4, #0]
 8006d86:	bd38      	pop	{r3, r4, r5, pc}
 8006d88:	20000460 	.word	0x20000460

08006d8c <_close_r>:
 8006d8c:	b538      	push	{r3, r4, r5, lr}
 8006d8e:	4d06      	ldr	r5, [pc, #24]	; (8006da8 <_close_r+0x1c>)
 8006d90:	2300      	movs	r3, #0
 8006d92:	4604      	mov	r4, r0
 8006d94:	4608      	mov	r0, r1
 8006d96:	602b      	str	r3, [r5, #0]
 8006d98:	f7ff fc86 	bl	80066a8 <_close>
 8006d9c:	1c43      	adds	r3, r0, #1
 8006d9e:	d102      	bne.n	8006da6 <_close_r+0x1a>
 8006da0:	682b      	ldr	r3, [r5, #0]
 8006da2:	b103      	cbz	r3, 8006da6 <_close_r+0x1a>
 8006da4:	6023      	str	r3, [r4, #0]
 8006da6:	bd38      	pop	{r3, r4, r5, pc}
 8006da8:	20000460 	.word	0x20000460

08006dac <_lseek_r>:
 8006dac:	b538      	push	{r3, r4, r5, lr}
 8006dae:	4d07      	ldr	r5, [pc, #28]	; (8006dcc <_lseek_r+0x20>)
 8006db0:	4604      	mov	r4, r0
 8006db2:	4608      	mov	r0, r1
 8006db4:	4611      	mov	r1, r2
 8006db6:	2200      	movs	r2, #0
 8006db8:	602a      	str	r2, [r5, #0]
 8006dba:	461a      	mov	r2, r3
 8006dbc:	f7ff fc78 	bl	80066b0 <_lseek>
 8006dc0:	1c43      	adds	r3, r0, #1
 8006dc2:	d102      	bne.n	8006dca <_lseek_r+0x1e>
 8006dc4:	682b      	ldr	r3, [r5, #0]
 8006dc6:	b103      	cbz	r3, 8006dca <_lseek_r+0x1e>
 8006dc8:	6023      	str	r3, [r4, #0]
 8006dca:	bd38      	pop	{r3, r4, r5, pc}
 8006dcc:	20000460 	.word	0x20000460

08006dd0 <memcpy>:
 8006dd0:	440a      	add	r2, r1
 8006dd2:	4291      	cmp	r1, r2
 8006dd4:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8006dd8:	d100      	bne.n	8006ddc <memcpy+0xc>
 8006dda:	4770      	bx	lr
 8006ddc:	b510      	push	{r4, lr}
 8006dde:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006de2:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006de6:	4291      	cmp	r1, r2
 8006de8:	d1f9      	bne.n	8006dde <memcpy+0xe>
 8006dea:	bd10      	pop	{r4, pc}

08006dec <__malloc_lock>:
 8006dec:	4801      	ldr	r0, [pc, #4]	; (8006df4 <__malloc_lock+0x8>)
 8006dee:	f7ff beb2 	b.w	8006b56 <__retarget_lock_acquire_recursive>
 8006df2:	bf00      	nop
 8006df4:	20000458 	.word	0x20000458

08006df8 <__malloc_unlock>:
 8006df8:	4801      	ldr	r0, [pc, #4]	; (8006e00 <__malloc_unlock+0x8>)
 8006dfa:	f7ff bead 	b.w	8006b58 <__retarget_lock_release_recursive>
 8006dfe:	bf00      	nop
 8006e00:	20000458 	.word	0x20000458

08006e04 <_read_r>:
 8006e04:	b538      	push	{r3, r4, r5, lr}
 8006e06:	4d07      	ldr	r5, [pc, #28]	; (8006e24 <_read_r+0x20>)
 8006e08:	4604      	mov	r4, r0
 8006e0a:	4608      	mov	r0, r1
 8006e0c:	4611      	mov	r1, r2
 8006e0e:	2200      	movs	r2, #0
 8006e10:	602a      	str	r2, [r5, #0]
 8006e12:	461a      	mov	r2, r3
 8006e14:	f7ff fc4e 	bl	80066b4 <_read>
 8006e18:	1c43      	adds	r3, r0, #1
 8006e1a:	d102      	bne.n	8006e22 <_read_r+0x1e>
 8006e1c:	682b      	ldr	r3, [r5, #0]
 8006e1e:	b103      	cbz	r3, 8006e22 <_read_r+0x1e>
 8006e20:	6023      	str	r3, [r4, #0]
 8006e22:	bd38      	pop	{r3, r4, r5, pc}
 8006e24:	20000460 	.word	0x20000460

08006e28 <malloc>:
 8006e28:	4b02      	ldr	r3, [pc, #8]	; (8006e34 <malloc+0xc>)
 8006e2a:	4601      	mov	r1, r0
 8006e2c:	6818      	ldr	r0, [r3, #0]
 8006e2e:	f7ff beed 	b.w	8006c0c <_malloc_r>
 8006e32:	bf00      	nop
 8006e34:	20000028 	.word	0x20000028

08006e38 <free>:
 8006e38:	4b02      	ldr	r3, [pc, #8]	; (8006e44 <free+0xc>)
 8006e3a:	4601      	mov	r1, r0
 8006e3c:	6818      	ldr	r0, [r3, #0]
 8006e3e:	f7ff be95 	b.w	8006b6c <_free_r>
 8006e42:	bf00      	nop
 8006e44:	20000028 	.word	0x20000028

08006e48 <out_func>:

static void out_func(char character, void *arg)
{
	print_buffer_t *buf = arg;

	buf->buffer[buf->position++] = character;
 8006e48:	f8b1 30c8 	ldrh.w	r3, [r1, #200]	; 0xc8
 8006e4c:	1c5a      	adds	r2, r3, #1
 8006e4e:	b292      	uxth	r2, r2
	if (buf->position == BUF_SIZE)
 8006e50:	2ac8      	cmp	r2, #200	; 0xc8
	buf->buffer[buf->position++] = character;
 8006e52:	f8a1 20c8 	strh.w	r2, [r1, #200]	; 0xc8
 8006e56:	54c8      	strb	r0, [r1, r3]
	if (buf->position == BUF_SIZE)
 8006e58:	d000      	beq.n	8006e5c <out_func+0x14>
 8006e5a:	4770      	bx	lr
{
 8006e5c:	b510      	push	{r4, lr}
	{
		_write(0, buf->buffer, BUF_SIZE);
 8006e5e:	2000      	movs	r0, #0
 8006e60:	460c      	mov	r4, r1
 8006e62:	f7ff fc2b 	bl	80066bc <_write>
		buf->position = 0;
 8006e66:	2300      	movs	r3, #0
 8006e68:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
	}
}
 8006e6c:	bd10      	pop	{r4, pc}
 8006e6e:	bf00      	nop

08006e70 <__wrap_puts>:


int __wrap_puts(const char *str)
{
 8006e70:	b500      	push	{lr}
 8006e72:	b083      	sub	sp, #12
 8006e74:	9001      	str	r0, [sp, #4]
	size_t len = strlen(str);
 8006e76:	f7fe fc49 	bl	800570c <strlen>

	_write(0, str, len);
 8006e7a:	9901      	ldr	r1, [sp, #4]
	size_t len = strlen(str);
 8006e7c:	4602      	mov	r2, r0
	_write(0, str, len);
 8006e7e:	2000      	movs	r0, #0
 8006e80:	f7ff fc1c 	bl	80066bc <_write>
	_write(0, "\n", 1);
 8006e84:	4904      	ldr	r1, [pc, #16]	; (8006e98 <__wrap_puts+0x28>)
 8006e86:	2201      	movs	r2, #1
 8006e88:	2000      	movs	r0, #0
 8006e8a:	f7ff fc17 	bl	80066bc <_write>
	return 0;
}
 8006e8e:	2000      	movs	r0, #0
 8006e90:	b003      	add	sp, #12
 8006e92:	f85d fb04 	ldr.w	pc, [sp], #4
 8006e96:	bf00      	nop
 8006e98:	0800b304 	.word	0x0800b304

08006e9c <__wrap_printf>:
	return 0;
}


int __wrap_printf(const char *format, ...)
{
 8006e9c:	b40f      	push	{r0, r1, r2, r3}
 8006e9e:	b530      	push	{r4, r5, lr}
 8006ea0:	b0b5      	sub	sp, #212	; 0xd4
 8006ea2:	ac38      	add	r4, sp, #224	; 0xe0
	print_buffer_t buf = {
 8006ea4:	490e      	ldr	r1, [pc, #56]	; (8006ee0 <__wrap_printf+0x44>)
{
 8006ea6:	f854 5b04 	ldr.w	r5, [r4], #4
	print_buffer_t buf = {
 8006eaa:	22ca      	movs	r2, #202	; 0xca
 8006eac:	a801      	add	r0, sp, #4
 8006eae:	f7ff ff8f 	bl	8006dd0 <memcpy>
		.buffer   = {0}
	};
	va_list        va;

	va_start(va, format);
	int ret = fctvprintf(out_func, &buf, format, va);
 8006eb2:	462a      	mov	r2, r5
 8006eb4:	4623      	mov	r3, r4
 8006eb6:	480b      	ldr	r0, [pc, #44]	; (8006ee4 <__wrap_printf+0x48>)
	va_start(va, format);
 8006eb8:	9400      	str	r4, [sp, #0]
	int ret = fctvprintf(out_func, &buf, format, va);
 8006eba:	a901      	add	r1, sp, #4
 8006ebc:	f000 fd54 	bl	8007968 <fctvprintf>
	if (buf.position != 0)
 8006ec0:	f8bd 20cc 	ldrh.w	r2, [sp, #204]	; 0xcc
	int ret = fctvprintf(out_func, &buf, format, va);
 8006ec4:	4604      	mov	r4, r0
	if (buf.position != 0)
 8006ec6:	b92a      	cbnz	r2, 8006ed4 <__wrap_printf+0x38>
	}

	va_end(va);

	return ret;
}
 8006ec8:	4620      	mov	r0, r4
 8006eca:	b035      	add	sp, #212	; 0xd4
 8006ecc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8006ed0:	b004      	add	sp, #16
 8006ed2:	4770      	bx	lr
		_write(0, buf.buffer, buf.position);
 8006ed4:	a901      	add	r1, sp, #4
 8006ed6:	2000      	movs	r0, #0
 8006ed8:	f7ff fbf0 	bl	80066bc <_write>
	return ret;
 8006edc:	e7f4      	b.n	8006ec8 <__wrap_printf+0x2c>
 8006ede:	bf00      	nop
 8006ee0:	0800a200 	.word	0x0800a200
 8006ee4:	08006e49 	.word	0x08006e49

08006ee8 <__wrap_vsnprintf>:
}


int __wrap_vsnprintf(char *buffer, size_t count, const char *format, va_list va)
{
	return vsnprintf_(buffer, count, format, va);
 8006ee8:	f000 bd2e 	b.w	8007948 <vsnprintf_>

08006eec <_out_buffer>:


// internal buffer output
static inline void _out_buffer(char character, void* buffer, size_t idx, size_t maxlen)
{
  if (idx < maxlen) {
 8006eec:	429a      	cmp	r2, r3
    ((char*)buffer)[idx] = character;
 8006eee:	bf38      	it	cc
 8006ef0:	5488      	strbcc	r0, [r1, r2]
  }
}
 8006ef2:	4770      	bx	lr

08006ef4 <_out_null>:

// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
 8006ef4:	4770      	bx	lr
 8006ef6:	bf00      	nop

08006ef8 <_ntoa_format>:
}


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
 8006ef8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006efc:	b083      	sub	sp, #12
 8006efe:	4617      	mov	r7, r2
 8006f00:	f8dd c048 	ldr.w	ip, [sp, #72]	; 0x48
 8006f04:	f89d a038 	ldrb.w	sl, [sp, #56]	; 0x38
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
 8006f08:	f01c 0202 	ands.w	r2, ip, #2
{
 8006f0c:	e9dd 840c 	ldrd	r8, r4, [sp, #48]	; 0x30
 8006f10:	e9dd e610 	ldrd	lr, r6, [sp, #64]	; 0x40
 8006f14:	4605      	mov	r5, r0
 8006f16:	4689      	mov	r9, r1
  if (!(flags & FLAGS_LEFT)) {
 8006f18:	9200      	str	r2, [sp, #0]
 8006f1a:	d12a      	bne.n	8006f72 <_ntoa_format+0x7a>
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 8006f1c:	2e00      	cmp	r6, #0
 8006f1e:	f040 80ae 	bne.w	800707e <_ntoa_format+0x186>
      width--;
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006f22:	4574      	cmp	r4, lr
 8006f24:	f00c 0001 	and.w	r0, ip, #1
 8006f28:	f080 811a 	bcs.w	8007160 <_ntoa_format+0x268>
 8006f2c:	2c1f      	cmp	r4, #31
 8006f2e:	bf88      	it	hi
 8006f30:	2420      	movhi	r4, #32
 8006f32:	f200 8115 	bhi.w	8007160 <_ntoa_format+0x268>
 8006f36:	1e62      	subs	r2, r4, #1
 8006f38:	4442      	add	r2, r8
      buf[len++] = '0';
 8006f3a:	f04f 0b30 	mov.w	fp, #48	; 0x30
 8006f3e:	e001      	b.n	8006f44 <_ntoa_format+0x4c>
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006f40:	2c20      	cmp	r4, #32
 8006f42:	d004      	beq.n	8006f4e <_ntoa_format+0x56>
      buf[len++] = '0';
 8006f44:	3401      	adds	r4, #1
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006f46:	45a6      	cmp	lr, r4
      buf[len++] = '0';
 8006f48:	f802 bf01 	strb.w	fp, [r2, #1]!
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006f4c:	d8f8      	bhi.n	8006f40 <_ntoa_format+0x48>
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006f4e:	b180      	cbz	r0, 8006f72 <_ntoa_format+0x7a>
 8006f50:	42a6      	cmp	r6, r4
 8006f52:	d90e      	bls.n	8006f72 <_ntoa_format+0x7a>
 8006f54:	2c20      	cmp	r4, #32
 8006f56:	f000 80a3 	beq.w	80070a0 <_ntoa_format+0x1a8>
 8006f5a:	1e62      	subs	r2, r4, #1
 8006f5c:	4442      	add	r2, r8
      buf[len++] = '0';
 8006f5e:	2030      	movs	r0, #48	; 0x30
 8006f60:	e002      	b.n	8006f68 <_ntoa_format+0x70>
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006f62:	2c20      	cmp	r4, #32
 8006f64:	f000 809c 	beq.w	80070a0 <_ntoa_format+0x1a8>
      buf[len++] = '0';
 8006f68:	3401      	adds	r4, #1
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006f6a:	42b4      	cmp	r4, r6
      buf[len++] = '0';
 8006f6c:	f802 0f01 	strb.w	r0, [r2, #1]!
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006f70:	d1f7      	bne.n	8006f62 <_ntoa_format+0x6a>
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
 8006f72:	f01c 0f10 	tst.w	ip, #16
 8006f76:	d033      	beq.n	8006fe0 <_ntoa_format+0xe8>
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 8006f78:	f41c 6f80 	tst.w	ip, #1024	; 0x400
 8006f7c:	f040 809c 	bne.w	80070b8 <_ntoa_format+0x1c0>
 8006f80:	2c00      	cmp	r4, #0
 8006f82:	f040 8095 	bne.w	80070b0 <_ntoa_format+0x1b8>
      len--;
      if (len && (base == 16U)) {
        len--;
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006f86:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8006f88:	2a10      	cmp	r2, #16
 8006f8a:	f000 80ce 	beq.w	800712a <_ntoa_format+0x232>
      buf[len++] = 'x';
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = 'X';
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006f8e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8006f90:	2a02      	cmp	r2, #2
 8006f92:	f000 80e0 	beq.w	8007156 <_ntoa_format+0x25e>
      buf[len++] = 'b';
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
      buf[len++] = '0';
 8006f96:	2230      	movs	r2, #48	; 0x30
 8006f98:	f888 2000 	strb.w	r2, [r8]
 8006f9c:	2401      	movs	r4, #1
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
    if (negative) {
 8006f9e:	f1ba 0f00 	cmp.w	sl, #0
 8006fa2:	f000 8096 	beq.w	80070d2 <_ntoa_format+0x1da>
      buf[len++] = '-';
 8006fa6:	222d      	movs	r2, #45	; 0x2d
 8006fa8:	f808 2004 	strb.w	r2, [r8, r4]
 8006fac:	3401      	adds	r4, #1
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 8006fae:	f01c 0f03 	tst.w	ip, #3
 8006fb2:	d101      	bne.n	8006fb8 <_ntoa_format+0xc0>
    for (size_t i = len; i < width; i++) {
 8006fb4:	42b4      	cmp	r4, r6
 8006fb6:	d31b      	bcc.n	8006ff0 <_ntoa_format+0xf8>
 8006fb8:	46ba      	mov	sl, r7
 8006fba:	e02f      	b.n	800701c <_ntoa_format+0x124>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8006fbc:	f01c 0f20 	tst.w	ip, #32
 8006fc0:	f040 80bb 	bne.w	800713a <_ntoa_format+0x242>
 8006fc4:	2c20      	cmp	r4, #32
 8006fc6:	d00d      	beq.n	8006fe4 <_ntoa_format+0xec>
 8006fc8:	eb08 0004 	add.w	r0, r8, r4
 8006fcc:	3401      	adds	r4, #1
      buf[len++] = 'x';
 8006fce:	2278      	movs	r2, #120	; 0x78
 8006fd0:	7002      	strb	r2, [r0, #0]
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
 8006fd2:	2c20      	cmp	r4, #32
 8006fd4:	d006      	beq.n	8006fe4 <_ntoa_format+0xec>
 8006fd6:	eb08 0204 	add.w	r2, r8, r4
      buf[len++] = '0';
 8006fda:	2030      	movs	r0, #48	; 0x30
 8006fdc:	3401      	adds	r4, #1
 8006fde:	7010      	strb	r0, [r2, #0]
  if (len < PRINTF_NTOA_BUFFER_SIZE) {
 8006fe0:	2c20      	cmp	r4, #32
 8006fe2:	d1dc      	bne.n	8006f9e <_ntoa_format+0xa6>
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 8006fe4:	f01c 0f03 	tst.w	ip, #3
 8006fe8:	d116      	bne.n	8007018 <_ntoa_format+0x120>
 8006fea:	2420      	movs	r4, #32
    for (size_t i = len; i < width; i++) {
 8006fec:	42a6      	cmp	r6, r4
 8006fee:	d979      	bls.n	80070e4 <_ntoa_format+0x1ec>
 8006ff0:	eb07 0a06 	add.w	sl, r7, r6
 8006ff4:	ebaa 0a04 	sub.w	sl, sl, r4
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 8006ff8:	9401      	str	r4, [sp, #4]
 8006ffa:	46bb      	mov	fp, r7
 8006ffc:	461c      	mov	r4, r3
      out(' ', buffer, idx++, maxlen);
 8006ffe:	465a      	mov	r2, fp
 8007000:	4623      	mov	r3, r4
 8007002:	f10b 0b01 	add.w	fp, fp, #1
 8007006:	4649      	mov	r1, r9
 8007008:	2020      	movs	r0, #32
 800700a:	47a8      	blx	r5
    for (size_t i = len; i < width; i++) {
 800700c:	45d3      	cmp	fp, sl
 800700e:	d1f6      	bne.n	8006ffe <_ntoa_format+0x106>
  while (len) {
 8007010:	4623      	mov	r3, r4
 8007012:	9c01      	ldr	r4, [sp, #4]
 8007014:	b914      	cbnz	r4, 800701c <_ntoa_format+0x124>
 8007016:	e012      	b.n	800703e <_ntoa_format+0x146>
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 8007018:	46ba      	mov	sl, r7
 800701a:	2420      	movs	r4, #32
 800701c:	44a2      	add	sl, r4
 800701e:	9611      	str	r6, [sp, #68]	; 0x44
 8007020:	4444      	add	r4, r8
 8007022:	eb08 0b0a 	add.w	fp, r8, sl
 8007026:	461e      	mov	r6, r3
 8007028:	ebab 0204 	sub.w	r2, fp, r4
    out(buf[--len], buffer, idx++, maxlen);
 800702c:	f814 0d01 	ldrb.w	r0, [r4, #-1]!
 8007030:	4633      	mov	r3, r6
 8007032:	4649      	mov	r1, r9
 8007034:	47a8      	blx	r5
  while (len) {
 8007036:	4544      	cmp	r4, r8
 8007038:	d1f6      	bne.n	8007028 <_ntoa_format+0x130>
 800703a:	4633      	mov	r3, r6
 800703c:	9e11      	ldr	r6, [sp, #68]	; 0x44
  if (flags & FLAGS_LEFT) {
 800703e:	9a00      	ldr	r2, [sp, #0]
 8007040:	b1ca      	cbz	r2, 8007076 <_ntoa_format+0x17e>
    while (idx - start_idx < width) {
 8007042:	ebaa 0407 	sub.w	r4, sl, r7
 8007046:	42a6      	cmp	r6, r4
 8007048:	d915      	bls.n	8007076 <_ntoa_format+0x17e>
 800704a:	4698      	mov	r8, r3
      out(' ', buffer, idx++, maxlen);
 800704c:	193a      	adds	r2, r7, r4
 800704e:	4643      	mov	r3, r8
 8007050:	4649      	mov	r1, r9
 8007052:	3401      	adds	r4, #1
 8007054:	2020      	movs	r0, #32
 8007056:	47a8      	blx	r5
    while (idx - start_idx < width) {
 8007058:	42a6      	cmp	r6, r4
 800705a:	d8f7      	bhi.n	800704c <_ntoa_format+0x154>
 800705c:	1e7b      	subs	r3, r7, #1
 800705e:	4433      	add	r3, r6
 8007060:	f1c7 0701 	rsb	r7, r7, #1
 8007064:	eba3 030a 	sub.w	r3, r3, sl
 8007068:	4457      	add	r7, sl
 800706a:	42b7      	cmp	r7, r6
 800706c:	bf88      	it	hi
 800706e:	2300      	movhi	r3, #0
 8007070:	f10a 0a01 	add.w	sl, sl, #1
 8007074:	449a      	add	sl, r3
      buf[len++] = ' ';
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
}
 8007076:	4650      	mov	r0, sl
 8007078:	b003      	add	sp, #12
 800707a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 800707e:	f01c 0001 	ands.w	r0, ip, #1
 8007082:	d033      	beq.n	80070ec <_ntoa_format+0x1f4>
 8007084:	f1ba 0f00 	cmp.w	sl, #0
 8007088:	d13d      	bne.n	8007106 <_ntoa_format+0x20e>
 800708a:	f01c 0f0c 	tst.w	ip, #12
 800708e:	d13a      	bne.n	8007106 <_ntoa_format+0x20e>
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007090:	4574      	cmp	r4, lr
 8007092:	f4bf af5d 	bcs.w	8006f50 <_ntoa_format+0x58>
 8007096:	2c1f      	cmp	r4, #31
 8007098:	f67f af4d 	bls.w	8006f36 <_ntoa_format+0x3e>
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 800709c:	2e20      	cmp	r6, #32
 800709e:	d92b      	bls.n	80070f8 <_ntoa_format+0x200>
  if (flags & FLAGS_HASH) {
 80070a0:	f01c 0f10 	tst.w	ip, #16
 80070a4:	d09e      	beq.n	8006fe4 <_ntoa_format+0xec>
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 80070a6:	f41c 6f80 	tst.w	ip, #1024	; 0x400
 80070aa:	f04f 0420 	mov.w	r4, #32
 80070ae:	d103      	bne.n	80070b8 <_ntoa_format+0x1c0>
 80070b0:	45a6      	cmp	lr, r4
 80070b2:	d02a      	beq.n	800710a <_ntoa_format+0x212>
 80070b4:	42b4      	cmp	r4, r6
 80070b6:	d028      	beq.n	800710a <_ntoa_format+0x212>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 80070b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80070ba:	2a10      	cmp	r2, #16
 80070bc:	f43f af7e 	beq.w	8006fbc <_ntoa_format+0xc4>
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 80070c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80070c2:	2a02      	cmp	r2, #2
 80070c4:	d185      	bne.n	8006fd2 <_ntoa_format+0xda>
 80070c6:	2c20      	cmp	r4, #32
 80070c8:	d08c      	beq.n	8006fe4 <_ntoa_format+0xec>
 80070ca:	eb08 0204 	add.w	r2, r8, r4
 80070ce:	3401      	adds	r4, #1
 80070d0:	e054      	b.n	800717c <_ntoa_format+0x284>
    else if (flags & FLAGS_PLUS) {
 80070d2:	f01c 0f04 	tst.w	ip, #4
 80070d6:	d111      	bne.n	80070fc <_ntoa_format+0x204>
    else if (flags & FLAGS_SPACE) {
 80070d8:	f01c 0f08 	tst.w	ip, #8
 80070dc:	d120      	bne.n	8007120 <_ntoa_format+0x228>
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 80070de:	f01c 0f03 	tst.w	ip, #3
 80070e2:	d083      	beq.n	8006fec <_ntoa_format+0xf4>
    for (size_t i = len; i < width; i++) {
 80070e4:	46ba      	mov	sl, r7
  while (len) {
 80070e6:	2c00      	cmp	r4, #0
 80070e8:	d198      	bne.n	800701c <_ntoa_format+0x124>
 80070ea:	e7a8      	b.n	800703e <_ntoa_format+0x146>
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 80070ec:	4574      	cmp	r4, lr
 80070ee:	f4bf af40 	bcs.w	8006f72 <_ntoa_format+0x7a>
 80070f2:	2c1f      	cmp	r4, #31
 80070f4:	f67f af1f 	bls.w	8006f36 <_ntoa_format+0x3e>
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 80070f8:	2420      	movs	r4, #32
 80070fa:	e73a      	b.n	8006f72 <_ntoa_format+0x7a>
      buf[len++] = '+';  // ignore the space if the '+' exists
 80070fc:	222b      	movs	r2, #43	; 0x2b
 80070fe:	f808 2004 	strb.w	r2, [r8, r4]
 8007102:	3401      	adds	r4, #1
 8007104:	e753      	b.n	8006fae <_ntoa_format+0xb6>
      width--;
 8007106:	3e01      	subs	r6, #1
 8007108:	e7c2      	b.n	8007090 <_ntoa_format+0x198>
      if (len && (base == 16U)) {
 800710a:	1e62      	subs	r2, r4, #1
 800710c:	f43f af3b 	beq.w	8006f86 <_ntoa_format+0x8e>
 8007110:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8007112:	2910      	cmp	r1, #16
 8007114:	d028      	beq.n	8007168 <_ntoa_format+0x270>
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007116:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8007118:	2902      	cmp	r1, #2
 800711a:	d02e      	beq.n	800717a <_ntoa_format+0x282>
 800711c:	4614      	mov	r4, r2
 800711e:	e75a      	b.n	8006fd6 <_ntoa_format+0xde>
      buf[len++] = ' ';
 8007120:	2220      	movs	r2, #32
 8007122:	f808 2004 	strb.w	r2, [r8, r4]
 8007126:	3401      	adds	r4, #1
 8007128:	e741      	b.n	8006fae <_ntoa_format+0xb6>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 800712a:	f01c 0f20 	tst.w	ip, #32
 800712e:	d10d      	bne.n	800714c <_ntoa_format+0x254>
      buf[len++] = 'x';
 8007130:	2278      	movs	r2, #120	; 0x78
 8007132:	f888 2000 	strb.w	r2, [r8]
 8007136:	2401      	movs	r4, #1
 8007138:	e74d      	b.n	8006fd6 <_ntoa_format+0xde>
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 800713a:	2c20      	cmp	r4, #32
 800713c:	f43f af52 	beq.w	8006fe4 <_ntoa_format+0xec>
 8007140:	eb08 0204 	add.w	r2, r8, r4
      buf[len++] = 'X';
 8007144:	2058      	movs	r0, #88	; 0x58
 8007146:	3401      	adds	r4, #1
 8007148:	7010      	strb	r0, [r2, #0]
 800714a:	e742      	b.n	8006fd2 <_ntoa_format+0xda>
 800714c:	2258      	movs	r2, #88	; 0x58
 800714e:	f888 2000 	strb.w	r2, [r8]
 8007152:	2401      	movs	r4, #1
 8007154:	e73f      	b.n	8006fd6 <_ntoa_format+0xde>
      buf[len++] = 'b';
 8007156:	2262      	movs	r2, #98	; 0x62
 8007158:	f888 2000 	strb.w	r2, [r8]
 800715c:	2401      	movs	r4, #1
 800715e:	e73a      	b.n	8006fd6 <_ntoa_format+0xde>
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007160:	2800      	cmp	r0, #0
 8007162:	bf08      	it	eq
 8007164:	2600      	moveq	r6, #0
 8007166:	e704      	b.n	8006f72 <_ntoa_format+0x7a>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007168:	f01c 0f20 	tst.w	ip, #32
        len--;
 800716c:	f1a4 0402 	sub.w	r4, r4, #2
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007170:	d1e6      	bne.n	8007140 <_ntoa_format+0x248>
 8007172:	eb08 0004 	add.w	r0, r8, r4
 8007176:	4614      	mov	r4, r2
 8007178:	e729      	b.n	8006fce <_ntoa_format+0xd6>
 800717a:	4442      	add	r2, r8
      buf[len++] = 'b';
 800717c:	2062      	movs	r0, #98	; 0x62
 800717e:	7010      	strb	r0, [r2, #0]
 8007180:	e727      	b.n	8006fd2 <_ntoa_format+0xda>
 8007182:	bf00      	nop

08007184 <_ntoa_long>:


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
 8007184:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007188:	b093      	sub	sp, #76	; 0x4c
 800718a:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 800718c:	f89d 4074 	ldrb.w	r4, [sp, #116]	; 0x74
 8007190:	9e1e      	ldr	r6, [sp, #120]	; 0x78
 8007192:	f8dd a084 	ldr.w	sl, [sp, #132]	; 0x84
 8007196:	9409      	str	r4, [sp, #36]	; 0x24
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
 8007198:	b92d      	cbnz	r5, 80071a6 <_ntoa_long+0x22>
    flags &= ~FLAGS_HASH;
 800719a:	f02a 0410 	bic.w	r4, sl, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
 800719e:	f41a 6f80 	tst.w	sl, #1024	; 0x400
    flags &= ~FLAGS_HASH;
 80071a2:	46a2      	mov	sl, r4
  if (!(flags & FLAGS_PRECISION) || value) {
 80071a4:	d134      	bne.n	8007210 <_ntoa_long+0x8c>
 80071a6:	f01a 0f20 	tst.w	sl, #32
 80071aa:	f10d 0b28 	add.w	fp, sp, #40	; 0x28
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 80071ae:	bf14      	ite	ne
 80071b0:	f04f 0937 	movne.w	r9, #55	; 0x37
 80071b4:	f04f 0957 	moveq.w	r9, #87	; 0x57
 80071b8:	46d8      	mov	r8, fp
 80071ba:	2700      	movs	r7, #0
 80071bc:	e002      	b.n	80071c4 <_ntoa_long+0x40>
      value /= base;
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 80071be:	2f20      	cmp	r7, #32
 80071c0:	d015      	beq.n	80071ee <_ntoa_long+0x6a>
      value /= base;
 80071c2:	4675      	mov	r5, lr
      const char digit = (char)(value % base);
 80071c4:	fbb5 fef6 	udiv	lr, r5, r6
 80071c8:	fb06 5c1e 	mls	ip, r6, lr, r5
 80071cc:	fa5f f48c 	uxtb.w	r4, ip
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 80071d0:	f1bc 0f09 	cmp.w	ip, #9
 80071d4:	f104 0c30 	add.w	ip, r4, #48	; 0x30
 80071d8:	bf8a      	itet	hi
 80071da:	444c      	addhi	r4, r9
 80071dc:	fa5f f48c 	uxtbls.w	r4, ip
 80071e0:	b2e4      	uxtbhi	r4, r4
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 80071e2:	42b5      	cmp	r5, r6
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 80071e4:	f808 4b01 	strb.w	r4, [r8], #1
 80071e8:	f107 0701 	add.w	r7, r7, #1
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 80071ec:	d2e7      	bcs.n	80071be <_ntoa_long+0x3a>
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
 80071ee:	9c20      	ldr	r4, [sp, #128]	; 0x80
 80071f0:	9405      	str	r4, [sp, #20]
 80071f2:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 80071f4:	f8cd a018 	str.w	sl, [sp, #24]
 80071f8:	e9cd 6403 	strd	r6, r4, [sp, #12]
 80071fc:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80071fe:	f8cd b000 	str.w	fp, [sp]
 8007202:	e9cd 7401 	strd	r7, r4, [sp, #4]
 8007206:	f7ff fe77 	bl	8006ef8 <_ntoa_format>
}
 800720a:	b013      	add	sp, #76	; 0x4c
 800720c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  size_t len = 0U;
 8007210:	462f      	mov	r7, r5
 8007212:	f10d 0b28 	add.w	fp, sp, #40	; 0x28
 8007216:	e7ea      	b.n	80071ee <_ntoa_long+0x6a>

08007218 <_ntoa_long_long>:


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
 8007218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800721c:	ed2d 8b04 	vpush	{d8-d9}
 8007220:	b093      	sub	sp, #76	; 0x4c
 8007222:	e9dd 4520 	ldrd	r4, r5, [sp, #128]	; 0x80
 8007226:	469b      	mov	fp, r3
 8007228:	f89d 3088 	ldrb.w	r3, [sp, #136]	; 0x88
 800722c:	9308      	str	r3, [sp, #32]
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
 800722e:	ea54 0305 	orrs.w	r3, r4, r5
{
 8007232:	e9dd 8924 	ldrd	r8, r9, [sp, #144]	; 0x90
 8007236:	ee08 0a10 	vmov	s16, r0
 800723a:	ee08 1a90 	vmov	s17, r1
 800723e:	ee09 2a10 	vmov	s18, r2
  if (!value) {
 8007242:	d106      	bne.n	8007252 <_ntoa_long_long+0x3a>
    flags &= ~FLAGS_HASH;
 8007244:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
 8007246:	9a28      	ldr	r2, [sp, #160]	; 0xa0
    flags &= ~FLAGS_HASH;
 8007248:	f023 0310 	bic.w	r3, r3, #16
 800724c:	9328      	str	r3, [sp, #160]	; 0xa0
  if (!(flags & FLAGS_PRECISION) || value) {
 800724e:	0553      	lsls	r3, r2, #21
 8007250:	d440      	bmi.n	80072d4 <_ntoa_long_long+0xbc>
 8007252:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8007254:	f013 0f20 	tst.w	r3, #32
 8007258:	ab0a      	add	r3, sp, #40	; 0x28
 800725a:	9309      	str	r3, [sp, #36]	; 0x24
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 800725c:	bf14      	ite	ne
 800725e:	f04f 0a37 	movne.w	sl, #55	; 0x37
 8007262:	f04f 0a57 	moveq.w	sl, #87	; 0x57
 8007266:	461f      	mov	r7, r3
 8007268:	2600      	movs	r6, #0
 800726a:	e003      	b.n	8007274 <_ntoa_long_long+0x5c>
      value /= base;
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 800726c:	2e20      	cmp	r6, #32
 800726e:	d017      	beq.n	80072a0 <_ntoa_long_long+0x88>
      value /= base;
 8007270:	4604      	mov	r4, r0
 8007272:	460d      	mov	r5, r1
      const char digit = (char)(value % base);
 8007274:	4642      	mov	r2, r8
 8007276:	464b      	mov	r3, r9
 8007278:	4620      	mov	r0, r4
 800727a:	4629      	mov	r1, r5
 800727c:	f7fe fa4e 	bl	800571c <__aeabi_uldivmod>
 8007280:	b2d2      	uxtb	r2, r2
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 8007282:	2a09      	cmp	r2, #9
 8007284:	f102 0330 	add.w	r3, r2, #48	; 0x30
 8007288:	bf8a      	itet	hi
 800728a:	4452      	addhi	r2, sl
 800728c:	b2da      	uxtbls	r2, r3
 800728e:	b2d2      	uxtbhi	r2, r2
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 8007290:	454d      	cmp	r5, r9
 8007292:	bf08      	it	eq
 8007294:	4544      	cmpeq	r4, r8
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 8007296:	f807 2b01 	strb.w	r2, [r7], #1
 800729a:	f106 0601 	add.w	r6, r6, #1
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 800729e:	d2e5      	bcs.n	800726c <_ntoa_long_long+0x54>
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
 80072a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80072a2:	9306      	str	r3, [sp, #24]
 80072a4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80072a6:	9305      	str	r3, [sp, #20]
 80072a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80072aa:	e9cd 8303 	strd	r8, r3, [sp, #12]
 80072ae:	9b08      	ldr	r3, [sp, #32]
 80072b0:	e9cd 6301 	strd	r6, r3, [sp, #4]
 80072b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80072b6:	9300      	str	r3, [sp, #0]
 80072b8:	ee19 2a10 	vmov	r2, s18
 80072bc:	ee18 1a90 	vmov	r1, s17
 80072c0:	ee18 0a10 	vmov	r0, s16
 80072c4:	465b      	mov	r3, fp
 80072c6:	f7ff fe17 	bl	8006ef8 <_ntoa_format>
}
 80072ca:	b013      	add	sp, #76	; 0x4c
 80072cc:	ecbd 8b04 	vpop	{d8-d9}
 80072d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80072d4:	ab0a      	add	r3, sp, #40	; 0x28
  size_t len = 0U;
 80072d6:	2600      	movs	r6, #0
 80072d8:	9309      	str	r3, [sp, #36]	; 0x24
 80072da:	e7e1      	b.n	80072a0 <_ntoa_long_long+0x88>

080072dc <_vsnprintf>:
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
 80072dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  unsigned int flags, width, precision, n;
  size_t idx = 0U;

  if (!buffer) {
    // use null output function
    out = _out_null;
 80072e0:	4eca      	ldr	r6, [pc, #808]	; (800760c <_vsnprintf+0x330>)
{
 80072e2:	b091      	sub	sp, #68	; 0x44
 80072e4:	461c      	mov	r4, r3
  }

  while (*format)
 80072e6:	781b      	ldrb	r3, [r3, #0]
 80072e8:	9d1a      	ldr	r5, [sp, #104]	; 0x68
    out = _out_null;
 80072ea:	f1b1 0a00 	subs.w	sl, r1, #0
{
 80072ee:	4691      	mov	r9, r2
    out = _out_null;
 80072f0:	bf14      	ite	ne
 80072f2:	4683      	movne	fp, r0
 80072f4:	46b3      	moveq	fp, r6
  while (*format)
 80072f6:	2b00      	cmp	r3, #0
 80072f8:	f000 8279 	beq.w	80077ee <_vsnprintf+0x512>
 80072fc:	f04f 0800 	mov.w	r8, #0
        if (is_ll) {
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
 8007300:	4618      	mov	r0, r3
 8007302:	e00a      	b.n	800731a <_vsnprintf+0x3e>
        out('%', buffer, idx++, maxlen);
        format++;
        break;

      default :
        out(*format, buffer, idx++, maxlen);
 8007304:	4642      	mov	r2, r8
 8007306:	464b      	mov	r3, r9
 8007308:	4651      	mov	r1, sl
 800730a:	f108 0801 	add.w	r8, r8, #1
        format++;
 800730e:	3401      	adds	r4, #1
        out(*format, buffer, idx++, maxlen);
 8007310:	47d8      	blx	fp
  while (*format)
 8007312:	7820      	ldrb	r0, [r4, #0]
 8007314:	2800      	cmp	r0, #0
 8007316:	f000 8125 	beq.w	8007564 <_vsnprintf+0x288>
    if (*format != '%') {
 800731a:	2825      	cmp	r0, #37	; 0x25
 800731c:	d1f2      	bne.n	8007304 <_vsnprintf+0x28>
      format++;
 800731e:	1c63      	adds	r3, r4, #1
    flags = 0U;
 8007320:	2100      	movs	r1, #0
 8007322:	461c      	mov	r4, r3
      switch (*format) {
 8007324:	f813 0b01 	ldrb.w	r0, [r3], #1
 8007328:	f1a0 0220 	sub.w	r2, r0, #32
 800732c:	2a10      	cmp	r2, #16
 800732e:	d80a      	bhi.n	8007346 <_vsnprintf+0x6a>
 8007330:	e8df f002 	tbb	[pc, r2]
 8007334:	3809093b 	.word	0x3809093b
 8007338:	09090909 	.word	0x09090909
 800733c:	35090909 	.word	0x35090909
 8007340:	09093209 	.word	0x09093209
 8007344:	2f          	.byte	0x2f
 8007345:	00          	.byte	0x00
    if (_is_digit(*format)) {
 8007346:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800734a:	2b09      	cmp	r3, #9
 800734c:	f240 80eb 	bls.w	8007526 <_vsnprintf+0x24a>
    else if (*format == '*') {
 8007350:	282a      	cmp	r0, #42	; 0x2a
 8007352:	f000 8115 	beq.w	8007580 <_vsnprintf+0x2a4>
    width = 0U;
 8007356:	2600      	movs	r6, #0
    if (*format == '.') {
 8007358:	282e      	cmp	r0, #46	; 0x2e
 800735a:	f000 80f4 	beq.w	8007546 <_vsnprintf+0x26a>
    precision = 0U;
 800735e:	2700      	movs	r7, #0
    switch (*format) {
 8007360:	f1a0 0368 	sub.w	r3, r0, #104	; 0x68
 8007364:	2b12      	cmp	r3, #18
 8007366:	d82a      	bhi.n	80073be <_vsnprintf+0xe2>
 8007368:	e8df f013 	tbh	[pc, r3, lsl #1]
 800736c:	00290152 	.word	0x00290152
 8007370:	0029014a 	.word	0x0029014a
 8007374:	00290022 	.word	0x00290022
 8007378:	00290029 	.word	0x00290029
 800737c:	00290029 	.word	0x00290029
 8007380:	00290029 	.word	0x00290029
 8007384:	002900d8 	.word	0x002900d8
 8007388:	00290029 	.word	0x00290029
 800738c:	00290029 	.word	0x00290029
 8007390:	00d8      	.short	0x00d8
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 8007392:	f041 0101 	orr.w	r1, r1, #1
    } while (n);
 8007396:	e7c4      	b.n	8007322 <_vsnprintf+0x46>
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 8007398:	f041 0102 	orr.w	r1, r1, #2
    } while (n);
 800739c:	e7c1      	b.n	8007322 <_vsnprintf+0x46>
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 800739e:	f041 0104 	orr.w	r1, r1, #4
    } while (n);
 80073a2:	e7be      	b.n	8007322 <_vsnprintf+0x46>
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 80073a4:	f041 0110 	orr.w	r1, r1, #16
    } while (n);
 80073a8:	e7bb      	b.n	8007322 <_vsnprintf+0x46>
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 80073aa:	f041 0108 	orr.w	r1, r1, #8
    } while (n);
 80073ae:	e7b8      	b.n	8007322 <_vsnprintf+0x46>
        if (*format == 'l') {
 80073b0:	7860      	ldrb	r0, [r4, #1]
 80073b2:	286c      	cmp	r0, #108	; 0x6c
 80073b4:	f000 820e 	beq.w	80077d4 <_vsnprintf+0x4f8>
        flags |= FLAGS_LONG;
 80073b8:	f441 7180 	orr.w	r1, r1, #256	; 0x100
        format++;
 80073bc:	3401      	adds	r4, #1
    switch (*format) {
 80073be:	f1a0 0325 	sub.w	r3, r0, #37	; 0x25
 80073c2:	2b53      	cmp	r3, #83	; 0x53
 80073c4:	d89e      	bhi.n	8007304 <_vsnprintf+0x28>
 80073c6:	a201      	add	r2, pc, #4	; (adr r2, 80073cc <_vsnprintf+0xf0>)
 80073c8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80073cc:	08007621 	.word	0x08007621
 80073d0:	08007305 	.word	0x08007305
 80073d4:	08007305 	.word	0x08007305
 80073d8:	08007305 	.word	0x08007305
 80073dc:	08007305 	.word	0x08007305
 80073e0:	08007305 	.word	0x08007305
 80073e4:	08007305 	.word	0x08007305
 80073e8:	08007305 	.word	0x08007305
 80073ec:	08007305 	.word	0x08007305
 80073f0:	08007305 	.word	0x08007305
 80073f4:	08007305 	.word	0x08007305
 80073f8:	08007305 	.word	0x08007305
 80073fc:	08007305 	.word	0x08007305
 8007400:	08007305 	.word	0x08007305
 8007404:	08007305 	.word	0x08007305
 8007408:	08007305 	.word	0x08007305
 800740c:	08007305 	.word	0x08007305
 8007410:	08007305 	.word	0x08007305
 8007414:	08007305 	.word	0x08007305
 8007418:	08007305 	.word	0x08007305
 800741c:	08007305 	.word	0x08007305
 8007420:	08007305 	.word	0x08007305
 8007424:	08007305 	.word	0x08007305
 8007428:	08007305 	.word	0x08007305
 800742c:	08007305 	.word	0x08007305
 8007430:	08007305 	.word	0x08007305
 8007434:	08007305 	.word	0x08007305
 8007438:	08007305 	.word	0x08007305
 800743c:	08007305 	.word	0x08007305
 8007440:	08007305 	.word	0x08007305
 8007444:	08007305 	.word	0x08007305
 8007448:	08007305 	.word	0x08007305
 800744c:	08007305 	.word	0x08007305
 8007450:	08007305 	.word	0x08007305
 8007454:	08007305 	.word	0x08007305
 8007458:	08007305 	.word	0x08007305
 800745c:	08007305 	.word	0x08007305
 8007460:	08007305 	.word	0x08007305
 8007464:	08007305 	.word	0x08007305
 8007468:	08007305 	.word	0x08007305
 800746c:	08007305 	.word	0x08007305
 8007470:	08007305 	.word	0x08007305
 8007474:	08007305 	.word	0x08007305
 8007478:	08007305 	.word	0x08007305
 800747c:	08007305 	.word	0x08007305
 8007480:	08007305 	.word	0x08007305
 8007484:	08007305 	.word	0x08007305
 8007488:	08007305 	.word	0x08007305
 800748c:	08007305 	.word	0x08007305
 8007490:	08007305 	.word	0x08007305
 8007494:	08007305 	.word	0x08007305
 8007498:	08007595 	.word	0x08007595
 800749c:	08007305 	.word	0x08007305
 80074a0:	08007305 	.word	0x08007305
 80074a4:	08007305 	.word	0x08007305
 80074a8:	08007305 	.word	0x08007305
 80074ac:	08007305 	.word	0x08007305
 80074b0:	08007305 	.word	0x08007305
 80074b4:	08007305 	.word	0x08007305
 80074b8:	08007305 	.word	0x08007305
 80074bc:	08007305 	.word	0x08007305
 80074c0:	08007595 	.word	0x08007595
 80074c4:	080076f5 	.word	0x080076f5
 80074c8:	08007595 	.word	0x08007595
 80074cc:	08007305 	.word	0x08007305
 80074d0:	08007305 	.word	0x08007305
 80074d4:	08007305 	.word	0x08007305
 80074d8:	08007305 	.word	0x08007305
 80074dc:	08007595 	.word	0x08007595
 80074e0:	08007305 	.word	0x08007305
 80074e4:	08007305 	.word	0x08007305
 80074e8:	08007305 	.word	0x08007305
 80074ec:	08007305 	.word	0x08007305
 80074f0:	08007305 	.word	0x08007305
 80074f4:	08007595 	.word	0x08007595
 80074f8:	080076c9 	.word	0x080076c9
 80074fc:	08007305 	.word	0x08007305
 8007500:	08007305 	.word	0x08007305
 8007504:	08007635 	.word	0x08007635
 8007508:	08007305 	.word	0x08007305
 800750c:	08007595 	.word	0x08007595
 8007510:	08007305 	.word	0x08007305
 8007514:	08007305 	.word	0x08007305
 8007518:	08007595 	.word	0x08007595
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 800751c:	7860      	ldrb	r0, [r4, #1]
 800751e:	f441 7180 	orr.w	r1, r1, #256	; 0x100
        format++;
 8007522:	3401      	adds	r4, #1
        break;
 8007524:	e74b      	b.n	80073be <_vsnprintf+0xe2>
  unsigned int i = 0U;
 8007526:	2600      	movs	r6, #0
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
 8007528:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 800752c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
  while (_is_digit(**str)) {
 8007530:	f814 0f01 	ldrb.w	r0, [r4, #1]!
 8007534:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8007538:	2b09      	cmp	r3, #9
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
 800753a:	f1a6 0630 	sub.w	r6, r6, #48	; 0x30
  while (_is_digit(**str)) {
 800753e:	d9f3      	bls.n	8007528 <_vsnprintf+0x24c>
    if (*format == '.') {
 8007540:	282e      	cmp	r0, #46	; 0x2e
 8007542:	f47f af0c 	bne.w	800735e <_vsnprintf+0x82>
      if (_is_digit(*format)) {
 8007546:	7860      	ldrb	r0, [r4, #1]
 8007548:	f1a0 0230 	sub.w	r2, r0, #48	; 0x30
 800754c:	2a09      	cmp	r2, #9
      flags |= FLAGS_PRECISION;
 800754e:	f441 6180 	orr.w	r1, r1, #1024	; 0x400
      format++;
 8007552:	f104 0301 	add.w	r3, r4, #1
      if (_is_digit(*format)) {
 8007556:	f240 80e7 	bls.w	8007728 <_vsnprintf+0x44c>
      else if (*format == '*') {
 800755a:	282a      	cmp	r0, #42	; 0x2a
 800755c:	f000 80f3 	beq.w	8007746 <_vsnprintf+0x46a>
      format++;
 8007560:	461c      	mov	r4, r3
 8007562:	e6fc      	b.n	800735e <_vsnprintf+0x82>
 8007564:	4644      	mov	r4, r8
        break;
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
 8007566:	45c1      	cmp	r9, r8
 8007568:	d801      	bhi.n	800756e <_vsnprintf+0x292>
 800756a:	f109 38ff 	add.w	r8, r9, #4294967295	; 0xffffffff
 800756e:	464b      	mov	r3, r9
 8007570:	4642      	mov	r2, r8
 8007572:	4651      	mov	r1, sl
 8007574:	2000      	movs	r0, #0
 8007576:	47d8      	blx	fp

  // return written chars without terminating \0
  return (int)idx;
}
 8007578:	4620      	mov	r0, r4
 800757a:	b011      	add	sp, #68	; 0x44
 800757c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      const int w = va_arg(va, int);
 8007580:	f855 6b04 	ldr.w	r6, [r5], #4
      if (w < 0) {
 8007584:	7860      	ldrb	r0, [r4, #1]
 8007586:	2e00      	cmp	r6, #0
        flags |= FLAGS_LEFT;    // reverse padding
 8007588:	bfbc      	itt	lt
 800758a:	f041 0102 	orrlt.w	r1, r1, #2
        width = (unsigned int)-w;
 800758e:	4276      	neglt	r6, r6
      format++;
 8007590:	3401      	adds	r4, #1
 8007592:	e6e1      	b.n	8007358 <_vsnprintf+0x7c>
        if (*format == 'x' || *format == 'X') {
 8007594:	2878      	cmp	r0, #120	; 0x78
 8007596:	f000 8122 	beq.w	80077de <_vsnprintf+0x502>
 800759a:	2858      	cmp	r0, #88	; 0x58
 800759c:	f000 80e1 	beq.w	8007762 <_vsnprintf+0x486>
        else if (*format == 'o') {
 80075a0:	286f      	cmp	r0, #111	; 0x6f
 80075a2:	f000 818a 	beq.w	80078ba <_vsnprintf+0x5de>
        else if (*format == 'b') {
 80075a6:	2862      	cmp	r0, #98	; 0x62
 80075a8:	f000 80e5 	beq.w	8007776 <_vsnprintf+0x49a>
        if ((*format != 'i') && (*format != 'd')) {
 80075ac:	2869      	cmp	r0, #105	; 0x69
          flags &= ~FLAGS_HASH;   // no hash for dec format
 80075ae:	f021 0310 	bic.w	r3, r1, #16
          base = 10U;
 80075b2:	f04f 0c0a 	mov.w	ip, #10
        if ((*format != 'i') && (*format != 'd')) {
 80075b6:	f040 80e1 	bne.w	800777c <_vsnprintf+0x4a0>
        if (flags & FLAGS_PRECISION) {
 80075ba:	054a      	lsls	r2, r1, #21
 80075bc:	f140 80e5 	bpl.w	800778a <_vsnprintf+0x4ae>
          flags &= ~FLAGS_ZEROPAD;
 80075c0:	f023 0301 	bic.w	r3, r3, #1
        if ((*format == 'i') || (*format == 'd')) {
 80075c4:	2869      	cmp	r0, #105	; 0x69
 80075c6:	f000 80e0 	beq.w	800778a <_vsnprintf+0x4ae>
 80075ca:	2864      	cmp	r0, #100	; 0x64
 80075cc:	f000 80dd 	beq.w	800778a <_vsnprintf+0x4ae>
          if (flags & FLAGS_LONG_LONG) {
 80075d0:	f413 7200 	ands.w	r2, r3, #512	; 0x200
 80075d4:	f040 8175 	bne.w	80078c2 <_vsnprintf+0x5e6>
          else if (flags & FLAGS_LONG) {
 80075d8:	05d8      	lsls	r0, r3, #23
 80075da:	f100 819a 	bmi.w	8007912 <_vsnprintf+0x636>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
 80075de:	0659      	lsls	r1, r3, #25
 80075e0:	f855 2b04 	ldr.w	r2, [r5], #4
 80075e4:	f100 817f 	bmi.w	80078e6 <_vsnprintf+0x60a>
 80075e8:	0618      	lsls	r0, r3, #24
 80075ea:	bf48      	it	mi
 80075ec:	b292      	uxthmi	r2, r2
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
 80075ee:	2100      	movs	r1, #0
 80075f0:	9200      	str	r2, [sp, #0]
 80075f2:	e9cd 6304 	strd	r6, r3, [sp, #16]
 80075f6:	e9cd c702 	strd	ip, r7, [sp, #8]
 80075fa:	4642      	mov	r2, r8
 80075fc:	9101      	str	r1, [sp, #4]
 80075fe:	e0dd      	b.n	80077bc <_vsnprintf+0x4e0>
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 8007600:	7860      	ldrb	r0, [r4, #1]
 8007602:	f441 7100 	orr.w	r1, r1, #512	; 0x200
        format++;
 8007606:	3401      	adds	r4, #1
        break;
 8007608:	e6d9      	b.n	80073be <_vsnprintf+0xe2>
 800760a:	bf00      	nop
 800760c:	08006ef5 	.word	0x08006ef5
        if (*format == 'h') {
 8007610:	7860      	ldrb	r0, [r4, #1]
 8007612:	2868      	cmp	r0, #104	; 0x68
 8007614:	f000 80d9 	beq.w	80077ca <_vsnprintf+0x4ee>
        flags |= FLAGS_SHORT;
 8007618:	f041 0180 	orr.w	r1, r1, #128	; 0x80
        format++;
 800761c:	3401      	adds	r4, #1
 800761e:	e6ce      	b.n	80073be <_vsnprintf+0xe2>
        out('%', buffer, idx++, maxlen);
 8007620:	f108 0601 	add.w	r6, r8, #1
 8007624:	4642      	mov	r2, r8
 8007626:	464b      	mov	r3, r9
 8007628:	4651      	mov	r1, sl
 800762a:	2025      	movs	r0, #37	; 0x25
        format++;
 800762c:	3401      	adds	r4, #1
        out('%', buffer, idx++, maxlen);
 800762e:	46b0      	mov	r8, r6
 8007630:	47d8      	blx	fp
        break;
 8007632:	e66e      	b.n	8007312 <_vsnprintf+0x36>
        const char* p = va_arg(va, char*);
 8007634:	462a      	mov	r2, r5
 8007636:	f852 3b04 	ldr.w	r3, [r2], #4
 800763a:	930b      	str	r3, [sp, #44]	; 0x2c
 800763c:	920d      	str	r2, [sp, #52]	; 0x34
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 800763e:	2f00      	cmp	r7, #0
 8007640:	f040 8088 	bne.w	8007754 <_vsnprintf+0x478>
  for (s = str; *s && maxsize--; ++s);
 8007644:	7818      	ldrb	r0, [r3, #0]
 8007646:	f06f 0501 	mvn.w	r5, #1
 800764a:	2800      	cmp	r0, #0
 800764c:	f000 8174 	beq.w	8007938 <_vsnprintf+0x65c>
 8007650:	1c6b      	adds	r3, r5, #1
 8007652:	461a      	mov	r2, r3
 8007654:	930c      	str	r3, [sp, #48]	; 0x30
 8007656:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007658:	189d      	adds	r5, r3, r2
 800765a:	e001      	b.n	8007660 <_vsnprintf+0x384>
 800765c:	429d      	cmp	r5, r3
 800765e:	d006      	beq.n	800766e <_vsnprintf+0x392>
 8007660:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8007664:	2a00      	cmp	r2, #0
 8007666:	d1f9      	bne.n	800765c <_vsnprintf+0x380>
 8007668:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800766a:	1a9b      	subs	r3, r3, r2
 800766c:	930c      	str	r3, [sp, #48]	; 0x30
        if (flags & FLAGS_PRECISION) {
 800766e:	f411 6380 	ands.w	r3, r1, #1024	; 0x400
 8007672:	930e      	str	r3, [sp, #56]	; 0x38
 8007674:	d004      	beq.n	8007680 <_vsnprintf+0x3a4>
          l = (l < precision ? l : precision);
 8007676:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007678:	42bb      	cmp	r3, r7
 800767a:	bf28      	it	cs
 800767c:	463b      	movcs	r3, r7
 800767e:	930c      	str	r3, [sp, #48]	; 0x30
        if (!(flags & FLAGS_LEFT)) {
 8007680:	f011 0302 	ands.w	r3, r1, #2
 8007684:	930f      	str	r3, [sp, #60]	; 0x3c
 8007686:	f000 80e0 	beq.w	800784a <_vsnprintf+0x56e>
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 800768a:	2800      	cmp	r0, #0
 800768c:	f000 80cb 	beq.w	8007826 <_vsnprintf+0x54a>
 8007690:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8007692:	960b      	str	r6, [sp, #44]	; 0x2c
 8007694:	4642      	mov	r2, r8
 8007696:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8007698:	e000      	b.n	800769c <_vsnprintf+0x3c0>
          out(*(p++), buffer, idx++, maxlen);
 800769a:	4642      	mov	r2, r8
 800769c:	464b      	mov	r3, r9
 800769e:	4651      	mov	r1, sl
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 80076a0:	b11e      	cbz	r6, 80076aa <_vsnprintf+0x3ce>
 80076a2:	f107 3cff 	add.w	ip, r7, #4294967295	; 0xffffffff
 80076a6:	b13f      	cbz	r7, 80076b8 <_vsnprintf+0x3dc>
 80076a8:	4667      	mov	r7, ip
          out(*(p++), buffer, idx++, maxlen);
 80076aa:	47d8      	blx	fp
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 80076ac:	f815 0f01 	ldrb.w	r0, [r5, #1]!
          out(*(p++), buffer, idx++, maxlen);
 80076b0:	f108 0801 	add.w	r8, r8, #1
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 80076b4:	2800      	cmp	r0, #0
 80076b6:	d1f0      	bne.n	800769a <_vsnprintf+0x3be>
        if (flags & FLAGS_LEFT) {
 80076b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80076ba:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80076bc:	2b00      	cmp	r3, #0
 80076be:	f040 80b2 	bne.w	8007826 <_vsnprintf+0x54a>
        const char* p = va_arg(va, char*);
 80076c2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
        format++;
 80076c4:	3401      	adds	r4, #1
        break;
 80076c6:	e624      	b.n	8007312 <_vsnprintf+0x36>
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
 80076c8:	2208      	movs	r2, #8
 80076ca:	e9cd 7203 	strd	r7, r2, [sp, #12]
 80076ce:	2300      	movs	r3, #0
 80076d0:	2210      	movs	r2, #16
 80076d2:	e9cd 3201 	strd	r3, r2, [sp, #4]
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 80076d6:	f041 0121 	orr.w	r1, r1, #33	; 0x21
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
 80076da:	9105      	str	r1, [sp, #20]
 80076dc:	f855 3b04 	ldr.w	r3, [r5], #4
 80076e0:	9300      	str	r3, [sp, #0]
 80076e2:	4642      	mov	r2, r8
 80076e4:	464b      	mov	r3, r9
 80076e6:	4651      	mov	r1, sl
 80076e8:	4658      	mov	r0, fp
 80076ea:	f7ff fd4b 	bl	8007184 <_ntoa_long>
        format++;
 80076ee:	3401      	adds	r4, #1
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
 80076f0:	4680      	mov	r8, r0
        break;
 80076f2:	e60e      	b.n	8007312 <_vsnprintf+0x36>
        if (!(flags & FLAGS_LEFT)) {
 80076f4:	0789      	lsls	r1, r1, #30
 80076f6:	d57d      	bpl.n	80077f4 <_vsnprintf+0x518>
        out((char)va_arg(va, int), buffer, idx++, maxlen);
 80076f8:	f855 0b04 	ldr.w	r0, [r5], #4
 80076fc:	464b      	mov	r3, r9
 80076fe:	4642      	mov	r2, r8
 8007700:	b2c0      	uxtb	r0, r0
 8007702:	4651      	mov	r1, sl
 8007704:	47d8      	blx	fp
          while (l++ < width) {
 8007706:	2e01      	cmp	r6, #1
        out((char)va_arg(va, int), buffer, idx++, maxlen);
 8007708:	f108 0701 	add.w	r7, r8, #1
          while (l++ < width) {
 800770c:	bf88      	it	hi
 800770e:	4446      	addhi	r6, r8
 8007710:	d907      	bls.n	8007722 <_vsnprintf+0x446>
            out(' ', buffer, idx++, maxlen);
 8007712:	463a      	mov	r2, r7
 8007714:	464b      	mov	r3, r9
 8007716:	3701      	adds	r7, #1
 8007718:	4651      	mov	r1, sl
 800771a:	2020      	movs	r0, #32
 800771c:	47d8      	blx	fp
          while (l++ < width) {
 800771e:	42b7      	cmp	r7, r6
 8007720:	d1f7      	bne.n	8007712 <_vsnprintf+0x436>
 8007722:	46b8      	mov	r8, r7
        format++;
 8007724:	3401      	adds	r4, #1
        break;
 8007726:	e5f4      	b.n	8007312 <_vsnprintf+0x36>
  unsigned int i = 0U;
 8007728:	2700      	movs	r7, #0
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
 800772a:	eb07 0787 	add.w	r7, r7, r7, lsl #2
 800772e:	eb00 0747 	add.w	r7, r0, r7, lsl #1
  while (_is_digit(**str)) {
 8007732:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8007736:	f1a0 0230 	sub.w	r2, r0, #48	; 0x30
 800773a:	2a09      	cmp	r2, #9
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
 800773c:	f1a7 0730 	sub.w	r7, r7, #48	; 0x30
  while (_is_digit(**str)) {
 8007740:	d9f3      	bls.n	800772a <_vsnprintf+0x44e>
 8007742:	461c      	mov	r4, r3
 8007744:	e60c      	b.n	8007360 <_vsnprintf+0x84>
        precision = prec > 0 ? (unsigned int)prec : 0U;
 8007746:	f855 7b04 	ldr.w	r7, [r5], #4
 800774a:	78a0      	ldrb	r0, [r4, #2]
 800774c:	ea27 77e7 	bic.w	r7, r7, r7, asr #31
        format++;
 8007750:	3402      	adds	r4, #2
 8007752:	e605      	b.n	8007360 <_vsnprintf+0x84>
  for (s = str; *s && maxsize--; ++s);
 8007754:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007756:	7818      	ldrb	r0, [r3, #0]
 8007758:	2800      	cmp	r0, #0
 800775a:	f000 80eb 	beq.w	8007934 <_vsnprintf+0x658>
 800775e:	1e7d      	subs	r5, r7, #1
 8007760:	e776      	b.n	8007650 <_vsnprintf+0x374>
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 8007762:	f021 030c 	bic.w	r3, r1, #12
        if (flags & FLAGS_PRECISION) {
 8007766:	054a      	lsls	r2, r1, #21
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 8007768:	f043 0320 	orr.w	r3, r3, #32
          base = 16U;
 800776c:	f04f 0c10 	mov.w	ip, #16
        if (flags & FLAGS_PRECISION) {
 8007770:	f53f af26 	bmi.w	80075c0 <_vsnprintf+0x2e4>
 8007774:	e72c      	b.n	80075d0 <_vsnprintf+0x2f4>
          base =  2U;
 8007776:	f04f 0c02 	mov.w	ip, #2
        format++;
 800777a:	460b      	mov	r3, r1
        if ((*format != 'i') && (*format != 'd')) {
 800777c:	2864      	cmp	r0, #100	; 0x64
 800777e:	bf18      	it	ne
 8007780:	4619      	movne	r1, r3
 8007782:	d12e      	bne.n	80077e2 <_vsnprintf+0x506>
        if (flags & FLAGS_PRECISION) {
 8007784:	0559      	lsls	r1, r3, #21
 8007786:	f53f af1b 	bmi.w	80075c0 <_vsnprintf+0x2e4>
          if (flags & FLAGS_LONG_LONG) {
 800778a:	0599      	lsls	r1, r3, #22
 800778c:	d476      	bmi.n	800787c <_vsnprintf+0x5a0>
          else if (flags & FLAGS_LONG) {
 800778e:	05da      	lsls	r2, r3, #23
 8007790:	f100 80b0 	bmi.w	80078f4 <_vsnprintf+0x618>
            const int value = (flags & FLAGS_CHAR) ? (signed char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
 8007794:	0658      	lsls	r0, r3, #25
 8007796:	f855 2b04 	ldr.w	r2, [r5], #4
 800779a:	f100 80a2 	bmi.w	80078e2 <_vsnprintf+0x606>
 800779e:	0619      	lsls	r1, r3, #24
 80077a0:	bf48      	it	mi
 80077a2:	b212      	sxthmi	r2, r2
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
 80077a4:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
 80077a8:	0fd0      	lsrs	r0, r2, #31
 80077aa:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
 80077ae:	e9cd 6304 	strd	r6, r3, [sp, #16]
 80077b2:	e9cd c702 	strd	ip, r7, [sp, #8]
 80077b6:	e9cd 1000 	strd	r1, r0, [sp]
 80077ba:	4642      	mov	r2, r8
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
 80077bc:	464b      	mov	r3, r9
 80077be:	4651      	mov	r1, sl
 80077c0:	4658      	mov	r0, fp
 80077c2:	f7ff fcdf 	bl	8007184 <_ntoa_long>
 80077c6:	4680      	mov	r8, r0
        format++;
 80077c8:	e7ac      	b.n	8007724 <_vsnprintf+0x448>
          flags |= FLAGS_CHAR;
 80077ca:	78a0      	ldrb	r0, [r4, #2]
 80077cc:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
          format++;
 80077d0:	3402      	adds	r4, #2
 80077d2:	e5f4      	b.n	80073be <_vsnprintf+0xe2>
          flags |= FLAGS_LONG_LONG;
 80077d4:	78a0      	ldrb	r0, [r4, #2]
 80077d6:	f441 7140 	orr.w	r1, r1, #768	; 0x300
          format++;
 80077da:	3402      	adds	r4, #2
 80077dc:	e5ef      	b.n	80073be <_vsnprintf+0xe2>
          base = 16U;
 80077de:	f04f 0c10 	mov.w	ip, #16
        if (flags & FLAGS_PRECISION) {
 80077e2:	054a      	lsls	r2, r1, #21
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 80077e4:	f021 030c 	bic.w	r3, r1, #12
        if (flags & FLAGS_PRECISION) {
 80077e8:	f53f aeea 	bmi.w	80075c0 <_vsnprintf+0x2e4>
 80077ec:	e6ea      	b.n	80075c4 <_vsnprintf+0x2e8>
  while (*format)
 80077ee:	461c      	mov	r4, r3
 80077f0:	4698      	mov	r8, r3
 80077f2:	e6b8      	b.n	8007566 <_vsnprintf+0x28a>
          while (l++ < width) {
 80077f4:	2e01      	cmp	r6, #1
 80077f6:	f240 809b 	bls.w	8007930 <_vsnprintf+0x654>
 80077fa:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
 80077fe:	441e      	add	r6, r3
            out(' ', buffer, idx++, maxlen);
 8007800:	4642      	mov	r2, r8
 8007802:	464b      	mov	r3, r9
 8007804:	f108 0801 	add.w	r8, r8, #1
 8007808:	4651      	mov	r1, sl
 800780a:	2020      	movs	r0, #32
 800780c:	47d8      	blx	fp
          while (l++ < width) {
 800780e:	45b0      	cmp	r8, r6
 8007810:	d1f6      	bne.n	8007800 <_vsnprintf+0x524>
        out((char)va_arg(va, int), buffer, idx++, maxlen);
 8007812:	f855 0b04 	ldr.w	r0, [r5], #4
 8007816:	464b      	mov	r3, r9
 8007818:	4632      	mov	r2, r6
 800781a:	b2c0      	uxtb	r0, r0
 800781c:	4651      	mov	r1, sl
 800781e:	f106 0801 	add.w	r8, r6, #1
 8007822:	47d8      	blx	fp
        if (flags & FLAGS_LEFT) {
 8007824:	e77e      	b.n	8007724 <_vsnprintf+0x448>
          while (l++ < width) {
 8007826:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007828:	429e      	cmp	r6, r3
 800782a:	4645      	mov	r5, r8
 800782c:	f67f af49 	bls.w	80076c2 <_vsnprintf+0x3e6>
 8007830:	eb06 0008 	add.w	r0, r6, r8
 8007834:	eba0 0803 	sub.w	r8, r0, r3
            out(' ', buffer, idx++, maxlen);
 8007838:	462a      	mov	r2, r5
 800783a:	464b      	mov	r3, r9
 800783c:	3501      	adds	r5, #1
 800783e:	4651      	mov	r1, sl
 8007840:	2020      	movs	r0, #32
 8007842:	47d8      	blx	fp
          while (l++ < width) {
 8007844:	4545      	cmp	r5, r8
 8007846:	d1f7      	bne.n	8007838 <_vsnprintf+0x55c>
 8007848:	e73b      	b.n	80076c2 <_vsnprintf+0x3e6>
          while (l++ < width) {
 800784a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800784c:	4296      	cmp	r6, r2
 800784e:	f102 0301 	add.w	r3, r2, #1
 8007852:	d968      	bls.n	8007926 <_vsnprintf+0x64a>
 8007854:	eb06 0508 	add.w	r5, r6, r8
 8007858:	1aad      	subs	r5, r5, r2
            out(' ', buffer, idx++, maxlen);
 800785a:	4642      	mov	r2, r8
 800785c:	464b      	mov	r3, r9
 800785e:	f108 0801 	add.w	r8, r8, #1
 8007862:	4651      	mov	r1, sl
 8007864:	2020      	movs	r0, #32
 8007866:	47d8      	blx	fp
          while (l++ < width) {
 8007868:	45a8      	cmp	r8, r5
 800786a:	d1f6      	bne.n	800785a <_vsnprintf+0x57e>
 800786c:	1c73      	adds	r3, r6, #1
 800786e:	930c      	str	r3, [sp, #48]	; 0x30
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 8007870:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007872:	7818      	ldrb	r0, [r3, #0]
 8007874:	2800      	cmp	r0, #0
 8007876:	f47f af0b 	bne.w	8007690 <_vsnprintf+0x3b4>
 800787a:	e722      	b.n	80076c2 <_vsnprintf+0x3e6>
            const long long value = va_arg(va, long long);
 800787c:	3507      	adds	r5, #7
 800787e:	f025 0507 	bic.w	r5, r5, #7
 8007882:	686a      	ldr	r2, [r5, #4]
 8007884:	f855 eb08 	ldr.w	lr, [r5], #8
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
 8007888:	9308      	str	r3, [sp, #32]
 800788a:	4670      	mov	r0, lr
 800788c:	4611      	mov	r1, r2
 800788e:	2300      	movs	r3, #0
 8007890:	2800      	cmp	r0, #0
 8007892:	e9cd c304 	strd	ip, r3, [sp, #16]
 8007896:	ea4f 72d2 	mov.w	r2, r2, lsr #31
 800789a:	f171 0300 	sbcs.w	r3, r1, #0
 800789e:	e9cd 7606 	strd	r7, r6, [sp, #24]
 80078a2:	9202      	str	r2, [sp, #8]
 80078a4:	db21      	blt.n	80078ea <_vsnprintf+0x60e>
 80078a6:	e9cd 0100 	strd	r0, r1, [sp]
 80078aa:	4642      	mov	r2, r8
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
 80078ac:	464b      	mov	r3, r9
 80078ae:	4651      	mov	r1, sl
 80078b0:	4658      	mov	r0, fp
 80078b2:	f7ff fcb1 	bl	8007218 <_ntoa_long_long>
 80078b6:	4680      	mov	r8, r0
 80078b8:	e734      	b.n	8007724 <_vsnprintf+0x448>
          base =  8U;
 80078ba:	f04f 0c08 	mov.w	ip, #8
        format++;
 80078be:	460b      	mov	r3, r1
 80078c0:	e75c      	b.n	800777c <_vsnprintf+0x4a0>
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
 80078c2:	2200      	movs	r2, #0
 80078c4:	e9cd c204 	strd	ip, r2, [sp, #16]
 80078c8:	e9cd 6307 	strd	r6, r3, [sp, #28]
 80078cc:	3507      	adds	r5, #7
 80078ce:	9202      	str	r2, [sp, #8]
 80078d0:	f025 0507 	bic.w	r5, r5, #7
 80078d4:	9706      	str	r7, [sp, #24]
 80078d6:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 80078da:	4642      	mov	r2, r8
 80078dc:	e9cd 0100 	strd	r0, r1, [sp]
 80078e0:	e7e4      	b.n	80078ac <_vsnprintf+0x5d0>
            const int value = (flags & FLAGS_CHAR) ? (signed char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
 80078e2:	b252      	sxtb	r2, r2
 80078e4:	e75e      	b.n	80077a4 <_vsnprintf+0x4c8>
 80078e6:	b2d2      	uxtb	r2, r2
 80078e8:	e681      	b.n	80075ee <_vsnprintf+0x312>
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
 80078ea:	f1de 0000 	rsbs	r0, lr, #0
 80078ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80078f2:	e7d8      	b.n	80078a6 <_vsnprintf+0x5ca>
            const long value = va_arg(va, long);
 80078f4:	f855 1b04 	ldr.w	r1, [r5], #4
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
 80078f8:	9305      	str	r3, [sp, #20]
 80078fa:	2900      	cmp	r1, #0
 80078fc:	ea4f 73d1 	mov.w	r3, r1, lsr #31
 8007900:	bfb8      	it	lt
 8007902:	4249      	neglt	r1, r1
 8007904:	e9cd 7603 	strd	r7, r6, [sp, #12]
 8007908:	e9cd 3c01 	strd	r3, ip, [sp, #4]
 800790c:	4642      	mov	r2, r8
 800790e:	9100      	str	r1, [sp, #0]
 8007910:	e754      	b.n	80077bc <_vsnprintf+0x4e0>
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
 8007912:	e9cd 6304 	strd	r6, r3, [sp, #16]
 8007916:	e9cd c702 	strd	ip, r7, [sp, #8]
 800791a:	9201      	str	r2, [sp, #4]
 800791c:	f855 3b04 	ldr.w	r3, [r5], #4
 8007920:	9300      	str	r3, [sp, #0]
 8007922:	4642      	mov	r2, r8
 8007924:	e74a      	b.n	80077bc <_vsnprintf+0x4e0>
          while (l++ < width) {
 8007926:	930c      	str	r3, [sp, #48]	; 0x30
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 8007928:	2800      	cmp	r0, #0
 800792a:	f47f aeb1 	bne.w	8007690 <_vsnprintf+0x3b4>
 800792e:	e6c8      	b.n	80076c2 <_vsnprintf+0x3e6>
          while (l++ < width) {
 8007930:	4646      	mov	r6, r8
 8007932:	e76e      	b.n	8007812 <_vsnprintf+0x536>
  for (s = str; *s && maxsize--; ++s);
 8007934:	900c      	str	r0, [sp, #48]	; 0x30
 8007936:	e69a      	b.n	800766e <_vsnprintf+0x392>
 8007938:	970c      	str	r7, [sp, #48]	; 0x30
 800793a:	e698      	b.n	800766e <_vsnprintf+0x392>

0800793c <_out_fct>:
  if (character) {
 800793c:	b110      	cbz	r0, 8007944 <_out_fct+0x8>
    ((out_fct_wrap_type*)buffer)->fct(character, ((out_fct_wrap_type*)buffer)->arg);
 800793e:	e9d1 3100 	ldrd	r3, r1, [r1]
 8007942:	4718      	bx	r3
}
 8007944:	4770      	bx	lr
 8007946:	bf00      	nop

08007948 <vsnprintf_>:
  return _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
}


int vsnprintf_(char* buffer, size_t count, const char* format, va_list va)
{
 8007948:	b530      	push	{r4, r5, lr}
 800794a:	b083      	sub	sp, #12
 800794c:	460d      	mov	r5, r1
 800794e:	4614      	mov	r4, r2
  return _vsnprintf(_out_buffer, buffer, count, format, va);
 8007950:	4601      	mov	r1, r0
 8007952:	9300      	str	r3, [sp, #0]
 8007954:	462a      	mov	r2, r5
 8007956:	4623      	mov	r3, r4
 8007958:	4802      	ldr	r0, [pc, #8]	; (8007964 <vsnprintf_+0x1c>)
 800795a:	f7ff fcbf 	bl	80072dc <_vsnprintf>
}
 800795e:	b003      	add	sp, #12
 8007960:	bd30      	pop	{r4, r5, pc}
 8007962:	bf00      	nop
 8007964:	08006eed 	.word	0x08006eed

08007968 <fctvprintf>:
  va_end(va);
  return ret;
}

int fctvprintf(void (*out)(char character, void* arg), void* arg, const char* format, va_list va)
{
 8007968:	b530      	push	{r4, r5, lr}
 800796a:	b085      	sub	sp, #20
 800796c:	4605      	mov	r5, r0
  const out_fct_wrap_type out_fct_wrap = { out, arg };
  return _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 800796e:	9300      	str	r3, [sp, #0]
{
 8007970:	460c      	mov	r4, r1
  return _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 8007972:	4613      	mov	r3, r2
 8007974:	a902      	add	r1, sp, #8
 8007976:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800797a:	4803      	ldr	r0, [pc, #12]	; (8007988 <fctvprintf+0x20>)
  const out_fct_wrap_type out_fct_wrap = { out, arg };
 800797c:	e9cd 5402 	strd	r5, r4, [sp, #8]
  return _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 8007980:	f7ff fcac 	bl	80072dc <_vsnprintf>
}
 8007984:	b005      	add	sp, #20
 8007986:	bd30      	pop	{r4, r5, pc}
 8007988:	0800793d 	.word	0x0800793d

0800798c <_init>:
 800798c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800798e:	bf00      	nop
 8007990:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007992:	bc08      	pop	{r3}
 8007994:	469e      	mov	lr, r3
 8007996:	4770      	bx	lr

08007998 <_fini>:
 8007998:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800799a:	bf00      	nop
 800799c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800799e:	bc08      	pop	{r3}
 80079a0:	469e      	mov	lr, r3
 80079a2:	4770      	bx	lr
 80079a4:	0000      	movs	r0, r0
	...
